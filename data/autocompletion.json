{
  "global": {
    "fields": {
      "PLAYER_HANDLE": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/moonloader:globals)*",
        "name": "Player",
        "type": "ref"
      },
      "PLAYER_PED": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/moonloader:globals)*",
        "name": "Ped",
        "type": "ref"
      },
      "activateGarage": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          }
        ],
        "description": "**activateGarage**(*GxtString garage*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0299/)*",
        "type": "function"
      },
      "activateHeliSpeedCheat": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "int power",
            "name": "power"
          }
        ],
        "description": "**activateHeliSpeedCheat**(*Vehicle heli, int power*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07BB/)*",
        "type": "function"
      },
      "activateInteriorPeds": {
        "args": [
          {
            "displayName": "bool activate",
            "name": "activate"
          }
        ],
        "description": "**activateInteriorPeds**(*bool activate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/084D/)*",
        "type": "function"
      },
      "activateMenuItem": {
        "args": [
          {
            "displayName": "int menu",
            "name": "menu"
          },
          {
            "displayName": "int row",
            "name": "row"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**activateMenuItem**(*int menu, int row, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D9/)*",
        "type": "function"
      },
      "activatePimpCheat": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**activatePimpCheat**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A3D/)*",
        "type": "function"
      },
      "activateSaveMenu": {
        "description": "**activateSaveMenu**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D8/)*",
        "type": "function"
      },
      "addAmmoToChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int ammo",
            "name": "ammo"
          }
        ],
        "description": "**addAmmoToChar**(*Ped ped, int weapon, int ammo*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0114/)*",
        "type": "function"
      },
      "addArmourToChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int points",
            "name": "points"
          }
        ],
        "description": "**addArmourToChar**(*Ped ped, int points*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/035F/)*",
        "type": "function"
      },
      "addAttractor": {
        "args": [
          {
            "displayName": "float originX",
            "name": "originX"
          },
          {
            "displayName": "float originY",
            "name": "originY"
          },
          {
            "displayName": "float originZ",
            "name": "originZ"
          },
          {
            "displayName": "float zAngle",
            "name": "zAngle"
          },
          {
            "displayName": "float unknownAngle",
            "name": "unknownAngle"
          },
          {
            "displayName": "int taskSequence",
            "name": "taskSequence"
          }
        ],
        "description": "**addAttractor**(*float originX, float originY, float originZ, float zAngle, float unknownAngle, int taskSequence*)  \n**Returns:** *int handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/061D/)*",
        "type": "function"
      },
      "addBigGunFlash": {
        "args": [
          {
            "displayName": "float fromX",
            "name": "fromX"
          },
          {
            "displayName": "float fromY",
            "name": "fromY"
          },
          {
            "displayName": "float fromZ",
            "name": "fromZ"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          }
        ],
        "description": "**addBigGunFlash**(*float fromX, float fromY, float fromZ, float toX, float toY, float toZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/058A/)*",
        "type": "function"
      },
      "addBlipForCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**addBlipForCar**(*Vehicle car*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0186/)*",
        "type": "function"
      },
      "addBlipForCarOld": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int unused",
            "name": "unused"
          },
          {
            "displayName": "bool visibility",
            "name": "visibility"
          }
        ],
        "description": "**addBlipForCarOld**(*Vehicle car, int unused, bool visibility*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0161/)*",
        "type": "function"
      },
      "addBlipForChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**addBlipForChar**(*Ped ped*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0187/)*",
        "type": "function"
      },
      "addBlipForCharOld": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int int2",
            "name": "int2"
          },
          {
            "displayName": "int int3",
            "name": "int3"
          }
        ],
        "description": "**addBlipForCharOld**(*Ped ped, int int2, int int3*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0162/)*",
        "type": "function"
      },
      "addBlipForCoord": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**addBlipForCoord**(*float atX, float atY, float atZ*)  \n**Returns:** *Checkpoint checkpoint*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/018A/)*",
        "type": "function"
      },
      "addBlipForCoordOld": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**addBlipForCoordOld**(*float atX, float atY, float atZ, int color, int flag*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0167/)*",
        "type": "function"
      },
      "addBlipForDeadChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**addBlipForDeadChar**(*Ped ped*)  \n**Returns:** *Marker blip*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0888/)*",
        "type": "function"
      },
      "addBlipForObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**addBlipForObject**(*Object object*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0188/)*",
        "type": "function"
      },
      "addBlipForPickup": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          }
        ],
        "description": "**addBlipForPickup**(*Pickup pickup*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03DC/)*",
        "type": "function"
      },
      "addBlipForSearchlight": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          }
        ],
        "description": "**addBlipForSearchlight**(*Searchlight searchlight*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C4/)*",
        "type": "function"
      },
      "addBlood": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int density",
            "name": "density"
          },
          {
            "displayName": "int onActor",
            "name": "onActor"
          }
        ],
        "description": "**addBlood**(*float atX, float atY, float atZ, float offsetX, float offsetY, float offsetZ, int density, int onActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B8/)*",
        "type": "function"
      },
      "addCharDecisionMakerEventResponse": {
        "args": [
          {
            "displayName": "int maker",
            "name": "maker"
          },
          {
            "displayName": "int event",
            "name": "event"
          },
          {
            "displayName": "int taskID",
            "name": "taskID"
          },
          {
            "displayName": "float respect",
            "name": "respect"
          },
          {
            "displayName": "float hate",
            "name": "hate"
          },
          {
            "displayName": "float like",
            "name": "like"
          },
          {
            "displayName": "float dislike",
            "name": "dislike"
          },
          {
            "displayName": "bool inCar",
            "name": "inCar"
          },
          {
            "displayName": "bool onFoot",
            "name": "onFoot"
          }
        ],
        "description": "**addCharDecisionMakerEventResponse**(*int maker, int event, int taskID, float respect, float hate, float like, float dislike, bool inCar, bool onFoot*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0709/)*",
        "type": "function"
      },
      "addContinuousSound": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int sound",
            "name": "sound"
          }
        ],
        "description": "**addContinuousSound**(*float atX, float atY, float atZ, int sound*)  \n**Returns:** *int unk*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/018D/)*",
        "type": "function"
      },
      "addEventHandler": {
        "args": [
          {
            "displayName": "string eventName",
            "name": "eventName"
          },
          {
            "displayName": "function callback",
            "name": "callback"
          }
        ],
        "description": "**addEventHandler**(*string eventName, function callback*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:addEventHandler)*",
        "type": "function"
      },
      "addExplosion": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int radius",
            "name": "radius"
          }
        ],
        "description": "**addExplosion**(*float atX, float atY, float atZ, int radius*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/020C/)*",
        "type": "function"
      },
      "addExplosionNoSound": {
        "args": [
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          },
          {
            "displayName": "float pZ",
            "name": "pZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**addExplosionNoSound**(*float pX, float pY, float pZ, int type*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0565/)*",
        "type": "function"
      },
      "addExplosionVariableShake": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "float cameraShake",
            "name": "cameraShake"
          }
        ],
        "description": "**addExplosionVariableShake**(*float atX, float atY, float atZ, int type, float cameraShake*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0948/)*",
        "type": "function"
      },
      "addGroupDecisionMakerEventResponse": {
        "args": [
          {
            "displayName": "int maker",
            "name": "maker"
          },
          {
            "displayName": "int event",
            "name": "event"
          },
          {
            "displayName": "int taskID",
            "name": "taskID"
          },
          {
            "displayName": "float respect",
            "name": "respect"
          },
          {
            "displayName": "float hate",
            "name": "hate"
          },
          {
            "displayName": "float like",
            "name": "like"
          },
          {
            "displayName": "float dislike",
            "name": "dislike"
          },
          {
            "displayName": "bool inCar",
            "name": "inCar"
          },
          {
            "displayName": "bool onFoot",
            "name": "onFoot"
          }
        ],
        "description": "**addGroupDecisionMakerEventResponse**(*int maker, int event, int taskID, float respect, float hate, float like, float dislike, bool inCar, bool onFoot*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/074A/)*",
        "type": "function"
      },
      "addHospitalRestart": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "int townNumber",
            "name": "townNumber"
          }
        ],
        "description": "**addHospitalRestart**(*float atX, float atY, float atZ, float angle, int townNumber*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/016C/)*",
        "type": "function"
      },
      "addNextMessageToPreviousBriefs": {
        "args": [
          {
            "displayName": "bool int1",
            "name": "int1"
          }
        ],
        "description": "**addNextMessageToPreviousBriefs**(*bool int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C1/)*",
        "type": "function"
      },
      "addOneOffSound": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int sound",
            "name": "sound"
          }
        ],
        "description": "**addOneOffSound**(*float atX, float atY, float atZ, int sound*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/018C/)*",
        "type": "function"
      },
      "addPedtypeAsAttractorUser": {
        "args": [
          {
            "displayName": "int ASOrigin",
            "name": "ASOrigin"
          },
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          }
        ],
        "description": "**addPedtypeAsAttractorUser**(*int ASOrigin, int pedtype*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0680/)*",
        "type": "function"
      },
      "addPoliceRestart": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "int townNumber",
            "name": "townNumber"
          }
        ],
        "description": "**addPoliceRestart**(*float atX, float atY, float atZ, float angle, int townNumber*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/016D/)*",
        "type": "function"
      },
      "addPriceModifier": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          },
          {
            "displayName": "int price",
            "name": "price"
          }
        ],
        "description": "**addPriceModifier**(*int item, int price*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08C8/)*",
        "type": "function"
      },
      "addSetPiece": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "float rectX1",
            "name": "rectX1"
          },
          {
            "displayName": "float rectY1",
            "name": "rectY1"
          },
          {
            "displayName": "float rectX2",
            "name": "rectX2"
          },
          {
            "displayName": "float rectY2",
            "name": "rectY2"
          },
          {
            "displayName": "float spawnAX",
            "name": "spawnAX"
          },
          {
            "displayName": "float spawnAY",
            "name": "spawnAY"
          },
          {
            "displayName": "float headedTowards1X",
            "name": "headedTowards1X"
          },
          {
            "displayName": "float headedTowards1Y",
            "name": "headedTowards1Y"
          },
          {
            "displayName": "float spawnBX",
            "name": "spawnBX"
          },
          {
            "displayName": "float spawnBY",
            "name": "spawnBY"
          },
          {
            "displayName": "float headedTowards2X",
            "name": "headedTowards2X"
          },
          {
            "displayName": "float headedTowards2Y",
            "name": "headedTowards2Y"
          }
        ],
        "description": "**addSetPiece**(*int type, float rectX1, float rectY1, float rectX2, float rectY2, float spawnAX, float spawnAY, float headedTowards1X, float headedTowards1Y, float spawnBX, float spawnBY, float headedTowards2X, float headedTowards2Y*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04F8/)*",
        "type": "function"
      },
      "addShortRangeSpriteBlipForContactPoint": {
        "args": [
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          },
          {
            "displayName": "float pZ",
            "name": "pZ"
          },
          {
            "displayName": "int icon",
            "name": "icon"
          }
        ],
        "description": "**addShortRangeSpriteBlipForContactPoint**(*float pX, float pY, float pZ, int icon*)  \n**Returns:** *Marker blip*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0570/)*",
        "type": "function"
      },
      "addShortRangeSpriteBlipForCoord": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int icon",
            "name": "icon"
          }
        ],
        "description": "**addShortRangeSpriteBlipForCoord**(*float atX, float atY, float atZ, int icon*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04CE/)*",
        "type": "function"
      },
      "addSmokeParticle": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float velocityX",
            "name": "velocityX"
          },
          {
            "displayName": "float velocityY",
            "name": "velocityY"
          },
          {
            "displayName": "float velocityZ",
            "name": "velocityZ"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          },
          {
            "displayName": "float size",
            "name": "size"
          },
          {
            "displayName": "float factor",
            "name": "factor"
          }
        ],
        "description": "**addSmokeParticle**(*float atX, float atY, float atZ, float velocityX, float velocityY, float velocityZ, int r, int g, int b, int a, float size, float factor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/095C/)*",
        "type": "function"
      },
      "addSparks": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          },
          {
            "displayName": "int density",
            "name": "density"
          }
        ],
        "description": "**addSparks**(*float posX, float posY, float posZ, float vecX, float vecY, float vecZ, int density*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08EB/)*",
        "type": "function"
      },
      "addSphere": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**addSphere**(*float atX, float atY, float atZ, float radius*)  \n**Returns:** *int sphere*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03BC/)*",
        "type": "function"
      },
      "addSpriteBlipForContactPoint": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int icon",
            "name": "icon"
          }
        ],
        "description": "**addSpriteBlipForContactPoint**(*float atX, float atY, float atZ, int icon*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02A7/)*",
        "type": "function"
      },
      "addSpriteBlipForCoord": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**addSpriteBlipForCoord**(*float atX, float atY, float atZ, int type*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02A8/)*",
        "type": "function"
      },
      "addStuckCarCheck": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float stuckCheckDistance",
            "name": "stuckCheckDistance"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**addStuckCarCheck**(*Vehicle car, float stuckCheckDistance, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03CC/)*",
        "type": "function"
      },
      "addStuckCarCheckWithWarp": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float checkDistance",
            "name": "checkDistance"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "bool stuck",
            "name": "stuck"
          },
          {
            "displayName": "bool flipped",
            "name": "flipped"
          },
          {
            "displayName": "bool warp",
            "name": "warp"
          },
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**addStuckCarCheckWithWarp**(*Vehicle car, float checkDistance, int time, bool stuck, bool flipped, bool warp, int path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/072F/)*",
        "type": "function"
      },
      "addStuntJump": {
        "args": [
          {
            "displayName": "float startX",
            "name": "startX"
          },
          {
            "displayName": "float startY",
            "name": "startY"
          },
          {
            "displayName": "float startZ",
            "name": "startZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "float goalX",
            "name": "goalX"
          },
          {
            "displayName": "float goalY",
            "name": "goalY"
          },
          {
            "displayName": "float goalZ",
            "name": "goalZ"
          },
          {
            "displayName": "float radius2X",
            "name": "radius2X"
          },
          {
            "displayName": "float radius2Y",
            "name": "radius2Y"
          },
          {
            "displayName": "float radius2Z",
            "name": "radius2Z"
          },
          {
            "displayName": "float cameraX",
            "name": "cameraX"
          },
          {
            "displayName": "float cameraY",
            "name": "cameraY"
          },
          {
            "displayName": "float cameraZ",
            "name": "cameraZ"
          },
          {
            "displayName": "int reward",
            "name": "reward"
          }
        ],
        "description": "**addStuntJump**(*float startX, float startY, float startZ, float radiusX, float radiusY, float radiusZ, float goalX, float goalY, float goalZ, float radius2X, float radius2Y, float radius2Z, float cameraX, float cameraY, float cameraZ, int reward*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0814/)*",
        "type": "function"
      },
      "addToCarRotationVelocity": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**addToCarRotationVelocity**(*Vehicle car, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07DA/)*",
        "type": "function"
      },
      "addToObjectRotationVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**addToObjectRotationVelocity**(*Object object, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A1/)*",
        "type": "function"
      },
      "addToObjectVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float velocityX",
            "name": "velocityX"
          },
          {
            "displayName": "float velocityY",
            "name": "velocityY"
          },
          {
            "displayName": "float velocityZ",
            "name": "velocityZ"
          }
        ],
        "description": "**addToObjectVelocity**(*Object object, float velocityX, float velocityY, float velocityZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/038C/)*",
        "type": "function"
      },
      "addUpsidedownCarCheck": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**addUpsidedownCarCheck**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0190/)*",
        "type": "function"
      },
      "addVehicleMod": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Model component",
            "name": "component"
          }
        ],
        "description": "**addVehicleMod**(*Vehicle car, Model component*)  \n**Returns:** *int componentId*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E7/)*",
        "type": "function"
      },
      "addVelocityRelativeToObjectVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**addVelocityRelativeToObjectVelocity**(*Object object, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A7/)*",
        "type": "function"
      },
      "allocateMemory": {
        "args": [
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**allocateMemory**(*int size*)  \n**Returns:** *int memory*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC8/) / [ru](http://blast.hk/wiki/lua:allocateMemory)*",
        "type": "function"
      },
      "allocateStreamedScriptToObject": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          },
          {
            "displayName": "Model objectModel",
            "name": "objectModel"
          },
          {
            "displayName": "int priority",
            "name": "priority"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**allocateStreamedScriptToObject**(*int externalScript, Model objectModel, int priority, float radius, int type*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0929/)*",
        "type": "function"
      },
      "allocateStreamedScriptToRandomPed": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          },
          {
            "displayName": "Model actorModel",
            "name": "actorModel"
          },
          {
            "displayName": "int priority",
            "name": "priority"
          }
        ],
        "description": "**allocateStreamedScriptToRandomPed**(*int externalScript, Model actorModel, int priority*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0928/)*",
        "type": "function"
      },
      "allowFixedCameraCollision": {
        "args": [
          {
            "displayName": "bool allow",
            "name": "allow"
          }
        ],
        "description": "**allowFixedCameraCollision**(*bool allow*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09EC/)*",
        "type": "function"
      },
      "allowPauseInWidescreen": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**allowPauseInWidescreen**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A48/)*",
        "type": "function"
      },
      "alterWantedLevel": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int wantedLevel",
            "name": "wantedLevel"
          }
        ],
        "description": "**alterWantedLevel**(*Player player, int wantedLevel*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/010D/)*",
        "type": "function"
      },
      "alterWantedLevelNoDrop": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int minimumWantedLevel",
            "name": "minimumWantedLevel"
          }
        ],
        "description": "**alterWantedLevelNoDrop**(*Player player, int minimumWantedLevel*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/010E/)*",
        "type": "function"
      },
      "anchorBoat": {
        "args": [
          {
            "displayName": "Vehicle boat",
            "name": "boat"
          },
          {
            "displayName": "bool anchor",
            "name": "anchor"
          }
        ],
        "description": "**anchorBoat**(*Vehicle boat, bool anchor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0323/)*",
        "type": "function"
      },
      "applyBrakesToPlayersCar": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool apply",
            "name": "apply"
          }
        ],
        "description": "**applyBrakesToPlayersCar**(*Player player, bool apply*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0221/)*",
        "type": "function"
      },
      "applyForceToCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**applyForceToCar**(*Vehicle car, float vecX, float vecY, float vecZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07D5/)*",
        "type": "function"
      },
      "areAnyCarCheatsActivated": {
        "description": "**areAnyCarCheatsActivated**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0445/)*",
        "type": "function"
      },
      "areAnyCharsNearChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float range",
            "name": "range"
          }
        ],
        "description": "**areAnyCharsNearChar**(*Ped ped, float range*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06FF/)*",
        "type": "function"
      },
      "areCreditsFinished": {
        "description": "**areCreditsFinished**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0436/)*",
        "type": "function"
      },
      "areMeasurementsInMetres": {
        "description": "**areMeasurementsInMetres**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0424/)*",
        "type": "function"
      },
      "areSubtitlesSwitchedOn": {
        "description": "**areSubtitlesSwitchedOn**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C8/)*",
        "type": "function"
      },
      "attachAnimsToModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "GxtString externalScript",
            "name": "externalScript"
          }
        ],
        "description": "**attachAnimsToModel**(*Model modelId, GxtString externalScript*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E8/)*",
        "type": "function"
      },
      "attachCameraToChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          },
          {
            "displayName": "float tilt",
            "name": "tilt"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**attachCameraToChar**(*Ped ped, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ, float tilt, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/067C/)*",
        "type": "function"
      },
      "attachCameraToCharLookAtChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int targetActor",
            "name": "targetActor"
          },
          {
            "displayName": "float tilt",
            "name": "tilt"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**attachCameraToCharLookAtChar**(*Ped ped, float offsetX, float offsetY, float offsetZ, int targetActor, float tilt, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/067E/)*",
        "type": "function"
      },
      "attachCameraToVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          },
          {
            "displayName": "float tilt",
            "name": "tilt"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**attachCameraToVehicle**(*Vehicle car, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ, float tilt, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0679/)*",
        "type": "function"
      },
      "attachCameraToVehicleLookAtChar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float tilt",
            "name": "tilt"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**attachCameraToVehicleLookAtChar**(*Vehicle car, float offsetX, float offsetY, float offsetZ, Ped ped, float tilt, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/067B/)*",
        "type": "function"
      },
      "attachCameraToVehicleLookAtVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int toCar",
            "name": "toCar"
          },
          {
            "displayName": "float tilt",
            "name": "tilt"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**attachCameraToVehicleLookAtVehicle**(*Vehicle car, float offsetX, float offsetY, float offsetZ, int toCar, float tilt, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/067A/)*",
        "type": "function"
      },
      "attachCarToCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int toCar",
            "name": "toCar"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**attachCarToCar**(*Vehicle car, int toCar, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0683/)*",
        "type": "function"
      },
      "attachCarToObject": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**attachCarToObject**(*Vehicle car, Object object, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0939/)*",
        "type": "function"
      },
      "attachCharToBike": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int position",
            "name": "position"
          },
          {
            "displayName": "float shootingAngle1",
            "name": "shootingAngle1"
          },
          {
            "displayName": "float shootingAngle2",
            "name": "shootingAngle2"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**attachCharToBike**(*Ped ped, Vehicle car, float offsetX, float offsetY, float offsetZ, int position, float shootingAngle1, float shootingAngle2, int weapon*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06A7/)*",
        "type": "function"
      },
      "attachCharToCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int position",
            "name": "position"
          },
          {
            "displayName": "float shootingAngleLimit",
            "name": "shootingAngleLimit"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**attachCharToCar**(*Ped ped, Vehicle car, float offsetX, float offsetY, float offsetZ, int position, float shootingAngleLimit, int weapon*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0464/)*",
        "type": "function"
      },
      "attachCharToObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int orientation",
            "name": "orientation"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "int lockWeapon",
            "name": "lockWeapon"
          }
        ],
        "description": "**attachCharToObject**(*Ped ped, Object object, float offsetX, float offsetY, float offsetZ, int orientation, float angle, int lockWeapon*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04F4/)*",
        "type": "function"
      },
      "attachFxSystemToCharBone": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          }
        ],
        "description": "**attachFxSystemToCharBone**(*Particle particle, Ped ped, int mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0883/)*",
        "type": "function"
      },
      "attachMissionAudioToCar": {
        "args": [
          {
            "displayName": "int audioId",
            "name": "audioId"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**attachMissionAudioToCar**(*int audioId, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A16/)*",
        "type": "function"
      },
      "attachMissionAudioToChar": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**attachMissionAudioToChar**(*int id, Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0949/)*",
        "type": "function"
      },
      "attachMissionAudioToObject": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**attachMissionAudioToObject**(*int id, Object object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/097C/)*",
        "type": "function"
      },
      "attachObjectToCar": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**attachObjectToCar**(*Object object, Vehicle car, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0681/)*",
        "type": "function"
      },
      "attachObjectToChar": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**attachObjectToChar**(*Object object, Ped ped, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/069B/)*",
        "type": "function"
      },
      "attachObjectToObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int toObject",
            "name": "toObject"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**attachObjectToObject**(*Object object, int toObject, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/069A/)*",
        "type": "function"
      },
      "attachSearchlightToSearchlightObject": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "int tower",
            "name": "tower"
          },
          {
            "displayName": "int housing",
            "name": "housing"
          },
          {
            "displayName": "int bulb",
            "name": "bulb"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          }
        ],
        "description": "**attachSearchlightToSearchlightObject**(*Searchlight searchlight, int tower, int housing, int bulb, float offsetX, float offsetY, float offsetZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06CA/)*",
        "type": "function"
      },
      "attachTrailerToCab": {
        "args": [
          {
            "displayName": "int trailer",
            "name": "trailer"
          },
          {
            "displayName": "int cab",
            "name": "cab"
          }
        ],
        "description": "**attachTrailerToCab**(*int trailer, int cab*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0893/)*",
        "type": "function"
      },
      "attachWinchToHeli": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "bool magnet",
            "name": "magnet"
          }
        ],
        "description": "**attachWinchToHeli**(*Vehicle heli, bool magnet*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0788/)*",
        "type": "function"
      },
      "awardPlayerMissionRespect": {
        "args": [
          {
            "displayName": "int respect",
            "name": "respect"
          }
        ],
        "description": "**awardPlayerMissionRespect**(*int respect*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0998/)*",
        "type": "function"
      },
      "boatGotoCoords": {
        "args": [
          {
            "displayName": "Vehicle boat",
            "name": "boat"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          }
        ],
        "description": "**boatGotoCoords**(*Vehicle boat, float toX, float toY, float toZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02D3/)*",
        "type": "function"
      },
      "boatStop": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**boatStop**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02D4/)*",
        "type": "function"
      },
      "breakObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int intensity",
            "name": "intensity"
          }
        ],
        "description": "**breakObject**(*Object object, int intensity*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0723/)*",
        "type": "function"
      },
      "buildPlayerModel": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**buildPlayerModel**(*Player player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/070D/)*",
        "type": "function"
      },
      "burstCarTire": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int tire",
            "name": "tire"
          }
        ],
        "description": "**burstCarTire**(*Vehicle car, int tire*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04FE/)*",
        "type": "function"
      },
      "buyItem": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          }
        ],
        "description": "**buyItem**(*int item*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0790/)*",
        "type": "function"
      },
      "callFunction": {
        "args": [
          {
            "displayName": "int address",
            "name": "address"
          },
          {
            "displayName": "int params",
            "name": "params"
          },
          {
            "displayName": "int pop",
            "name": "pop"
          },
          {
            "name": "..."
          }
        ],
        "description": "**callFunction**(*int address, int params, int pop, ...*)  \n**Returns:** *int returnValue*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:callFunction)*",
        "type": "function"
      },
      "callMethod": {
        "args": [
          {
            "displayName": "int address",
            "name": "address"
          },
          {
            "displayName": "int struct",
            "name": "struct"
          },
          {
            "displayName": "int params",
            "name": "params"
          },
          {
            "displayName": "int pop",
            "name": "pop"
          },
          {
            "name": "..."
          }
        ],
        "description": "**callMethod**(*int address, int struct, int params, int pop, ...*)  \n**Returns:** *int returnValue*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:callMethod)*",
        "type": "function"
      },
      "cameraIsVectorMoveRunning": {
        "description": "**cameraIsVectorMoveRunning**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0933/)*",
        "type": "function"
      },
      "cameraIsVectorTrackRunning": {
        "description": "**cameraIsVectorTrackRunning**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0934/)*",
        "type": "function"
      },
      "cameraPersistFov": {
        "args": [
          {
            "displayName": "bool lock",
            "name": "lock"
          }
        ],
        "description": "**cameraPersistFov**(*bool lock*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0931/)*",
        "type": "function"
      },
      "cameraPersistPos": {
        "args": [
          {
            "displayName": "bool lock",
            "name": "lock"
          }
        ],
        "description": "**cameraPersistPos**(*bool lock*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0930/)*",
        "type": "function"
      },
      "cameraPersistTrack": {
        "args": [
          {
            "displayName": "bool lock",
            "name": "lock"
          }
        ],
        "description": "**cameraPersistTrack**(*bool lock*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/092F/)*",
        "type": "function"
      },
      "cameraResetNewScriptables": {
        "description": "**cameraResetNewScriptables**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0925/)*",
        "type": "function"
      },
      "cameraSetLerpFov": {
        "args": [
          {
            "displayName": "float from",
            "name": "from"
          },
          {
            "displayName": "float to",
            "name": "to"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          },
          {
            "displayName": "bool smoothTransition",
            "name": "smoothTransition"
          }
        ],
        "description": "**cameraSetLerpFov**(*float from, float to, int timelimit, bool smoothTransition*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0922/)*",
        "type": "function"
      },
      "cameraSetShakeSimulationSimple": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "float timelimit",
            "name": "timelimit"
          },
          {
            "displayName": "float intensity",
            "name": "intensity"
          }
        ],
        "description": "**cameraSetShakeSimulationSimple**(*int type, float timelimit, float intensity*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/099C/)*",
        "type": "function"
      },
      "cameraSetVectorMove": {
        "args": [
          {
            "displayName": "float cameraX",
            "name": "cameraX"
          },
          {
            "displayName": "float cameraY",
            "name": "cameraY"
          },
          {
            "displayName": "float cameraZ",
            "name": "cameraZ"
          },
          {
            "displayName": "float positionX",
            "name": "positionX"
          },
          {
            "displayName": "float positionY",
            "name": "positionY"
          },
          {
            "displayName": "float positionZ",
            "name": "positionZ"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "bool smoothTransition",
            "name": "smoothTransition"
          }
        ],
        "description": "**cameraSetVectorMove**(*float cameraX, float cameraY, float cameraZ, float positionX, float positionY, float positionZ, int time, bool smoothTransition*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0936/)*",
        "type": "function"
      },
      "cameraSetVectorTrack": {
        "args": [
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float pointZ",
            "name": "pointZ"
          },
          {
            "displayName": "float transverseX",
            "name": "transverseX"
          },
          {
            "displayName": "float transverseY",
            "name": "transverseY"
          },
          {
            "displayName": "float transverseZ",
            "name": "transverseZ"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "bool smooth",
            "name": "smooth"
          }
        ],
        "description": "**cameraSetVectorTrack**(*float pointX, float pointY, float pointZ, float transverseX, float transverseY, float transverseZ, int time, bool smooth*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0920/)*",
        "type": "function"
      },
      "canCharSeeDeadChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          }
        ],
        "description": "**canCharSeeDeadChar**(*Ped ped, int pedtype*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0480/)*",
        "type": "function"
      },
      "canTriggerGangWarWhenOnAMission": {
        "args": [
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**canTriggerGangWarWhenOnAMission**(*bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A3/)*",
        "type": "function"
      },
      "cancelOverrideRestart": {
        "description": "**cancelOverrideRestart**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F6/)*",
        "type": "function"
      },
      "carGotoCoordinates": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float driveToX",
            "name": "driveToX"
          },
          {
            "displayName": "float driveToY",
            "name": "driveToY"
          },
          {
            "displayName": "float driveToZ",
            "name": "driveToZ"
          }
        ],
        "description": "**carGotoCoordinates**(*Vehicle car, float driveToX, float driveToY, float driveToZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A7/)*",
        "type": "function"
      },
      "carGotoCoordinatesAccurate": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          }
        ],
        "description": "**carGotoCoordinatesAccurate**(*Vehicle car, float toX, float toY, float toZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02C2/)*",
        "type": "function"
      },
      "carGotoCoordinatesRacing": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          }
        ],
        "description": "**carGotoCoordinatesRacing**(*Vehicle car, float toX, float toY, float toZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0704/)*",
        "type": "function"
      },
      "carSetIdle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**carSetIdle**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A9/)*",
        "type": "function"
      },
      "carWanderRandomly": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**carWanderRandomly**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A8/)*",
        "type": "function"
      },
      "changeBlipColour": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**changeBlipColour**(*Marker marker, int color*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0165/)*",
        "type": "function"
      },
      "changeBlipDisplay": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          }
        ],
        "description": "**changeBlipDisplay**(*Marker marker, int mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/018B/)*",
        "type": "function"
      },
      "changeBlipScale": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**changeBlipScale**(*Marker marker, int size*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0168/)*",
        "type": "function"
      },
      "changeCarColour": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int primaryColor",
            "name": "primaryColor"
          },
          {
            "displayName": "int secondaryColor",
            "name": "secondaryColor"
          }
        ],
        "description": "**changeCarColour**(*Vehicle car, int primaryColor, int secondaryColor*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0229/)*",
        "type": "function"
      },
      "changeCarColourFromMenu": {
        "args": [
          {
            "displayName": "int panelID",
            "name": "panelID"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int colorslot",
            "name": "colorslot"
          },
          {
            "displayName": "int activeRow",
            "name": "activeRow"
          }
        ],
        "description": "**changeCarColourFromMenu**(*int panelID, Vehicle car, int colorslot, int activeRow*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A22/)*",
        "type": "function"
      },
      "changeGarageType": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**changeGarageType**(*GxtString garage, int type*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02FA/)*",
        "type": "function"
      },
      "changePlaybackToUseAi": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**changePlaybackToUseAi**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/099B/)*",
        "type": "function"
      },
      "clearAllCharRelationships": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int acquaintance",
            "name": "acquaintance"
          }
        ],
        "description": "**clearAllCharRelationships**(*Ped ped, int acquaintance*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/077C/)*",
        "type": "function"
      },
      "clearAllScriptFireFlags": {
        "description": "**clearAllScriptFireFlags**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0986/)*",
        "type": "function"
      },
      "clearAllScriptRoadblocks": {
        "description": "**clearAllScriptRoadblocks**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04C1/)*",
        "type": "function"
      },
      "clearArea": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool area",
            "name": "area"
          }
        ],
        "description": "**clearArea**(*float atX, float atY, float atZ, float radius, bool area*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0395/)*",
        "type": "function"
      },
      "clearAreaOfCars": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**clearAreaOfCars**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03BA/)*",
        "type": "function"
      },
      "clearAreaOfChars": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**clearAreaOfChars**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/042B/)*",
        "type": "function"
      },
      "clearAttractor": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**clearAttractor**(*int handle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/061E/)*",
        "type": "function"
      },
      "clearCarLastDamageEntity": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**clearCarLastDamageEntity**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/054F/)*",
        "type": "function"
      },
      "clearCarLastWeaponDamage": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**clearCarLastWeaponDamage**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0468/)*",
        "type": "function"
      },
      "clearCharDecisionMakerEventResponse": {
        "args": [
          {
            "displayName": "int maker",
            "name": "maker"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**clearCharDecisionMakerEventResponse**(*int maker, int event*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0708/)*",
        "type": "function"
      },
      "clearCharLastDamageEntity": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**clearCharLastDamageEntity**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/054E/)*",
        "type": "function"
      },
      "clearCharLastWeaponDamage": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**clearCharLastWeaponDamage**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0467/)*",
        "type": "function"
      },
      "clearCharRelationship": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int acquaintance",
            "name": "acquaintance"
          },
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          }
        ],
        "description": "**clearCharRelationship**(*Ped ped, int acquaintance, int pedtype*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/077B/)*",
        "type": "function"
      },
      "clearCharTasks": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**clearCharTasks**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0687/)*",
        "type": "function"
      },
      "clearCharTasksImmediately": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**clearCharTasksImmediately**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0792/)*",
        "type": "function"
      },
      "clearConversationForChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**clearConversationForChar**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08ED/)*",
        "type": "function"
      },
      "clearCutscene": {
        "description": "**clearCutscene**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02EA/)*",
        "type": "function"
      },
      "clearExtraColours": {
        "args": [
          {
            "displayName": "bool fade",
            "name": "fade"
          }
        ],
        "description": "**clearExtraColours**(*bool fade*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04FA/)*",
        "type": "function"
      },
      "clearGroupDecisionMakerEventResponse": {
        "args": [
          {
            "displayName": "int maker",
            "name": "maker"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**clearGroupDecisionMakerEventResponse**(*int maker, int event*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0749/)*",
        "type": "function"
      },
      "clearGxtEntry": {
        "args": [
          {
            "displayName": "string key",
            "name": "key"
          }
        ],
        "description": "**clearGxtEntry**(*string key*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:clearGxtEntry)*",
        "type": "function"
      },
      "clearHeliOrientation": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          }
        ],
        "description": "**clearHeliOrientation**(*Vehicle heli*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D1/)*",
        "type": "function"
      },
      "clearHelp": {
        "description": "**clearHelp**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E6/)*",
        "type": "function"
      },
      "clearLastBuildingModelShotByPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**clearLastBuildingModelShotByPlayer**(*Player player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A3B/)*",
        "type": "function"
      },
      "clearLoadedShop": {
        "description": "**clearLoadedShop**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/087C/)*",
        "type": "function"
      },
      "clearLookAt": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**clearLookAt**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0647/)*",
        "type": "function"
      },
      "clearMissionAudio": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**clearMissionAudio**(*int id*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/040D/)*",
        "type": "function"
      },
      "clearObjectLastWeaponDamage": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**clearObjectLastWeaponDamage**(*Object object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0900/)*",
        "type": "function"
      },
      "clearObjectPath": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          }
        ],
        "description": "**clearObjectPath**(*int int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04A1/)*",
        "type": "function"
      },
      "clearOnscreenCounter": {
        "args": [
          {
            "displayName": "VarId var",
            "name": "var"
          }
        ],
        "description": "**clearOnscreenCounter**(*VarId var*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0151/)*",
        "type": "function"
      },
      "clearOnscreenTimer": {
        "args": [
          {
            "displayName": "VarId var",
            "name": "var"
          }
        ],
        "description": "**clearOnscreenTimer**(*VarId var*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/014F/)*",
        "type": "function"
      },
      "clearPrints": {
        "description": "**clearPrints**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00BE/)*",
        "type": "function"
      },
      "clearRelationship": {
        "args": [
          {
            "displayName": "int acquaintance",
            "name": "acquaintance"
          },
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "int toPedtype",
            "name": "toPedtype"
          }
        ],
        "description": "**clearRelationship**(*int acquaintance, int pedtype, int toPedtype*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0747/)*",
        "type": "function"
      },
      "clearSequenceTask": {
        "args": [
          {
            "displayName": "int task",
            "name": "task"
          }
        ],
        "description": "**clearSequenceTask**(*int task*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/061B/)*",
        "type": "function"
      },
      "clearSkip": {
        "description": "**clearSkip**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0951/)*",
        "type": "function"
      },
      "clearSmallPrints": {
        "description": "**clearSmallPrints**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03EB/)*",
        "type": "function"
      },
      "clearSpecificZonesToTriggerGangWar": {
        "description": "**clearSpecificZonesToTriggerGangWar**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/090D/)*",
        "type": "function"
      },
      "clearThisBigPrint": {
        "args": [
          {
            "displayName": "GxtString text",
            "name": "text"
          }
        ],
        "description": "**clearThisBigPrint**(*GxtString text*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D6/)*",
        "type": "function"
      },
      "clearThisPrint": {
        "args": [
          {
            "displayName": "GxtString text",
            "name": "text"
          }
        ],
        "description": "**clearThisPrint**(*GxtString text*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D5/)*",
        "type": "function"
      },
      "clearThisPrintBigNow": {
        "args": [
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**clearThisPrintBigNow**(*int style*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A0E/)*",
        "type": "function"
      },
      "clearWantedLevel": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**clearWantedLevel**(*Player player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0110/)*",
        "type": "function"
      },
      "clearWantedLevelInGarage": {
        "description": "**clearWantedLevelInGarage**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D4/)*",
        "type": "function"
      },
      "closeAllCarDoors": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**closeAllCarDoors**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0508/)*",
        "type": "function"
      },
      "closeGarage": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          }
        ],
        "description": "**closeGarage**(*GxtString garage*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0361/)*",
        "type": "function"
      },
      "closeSequenceTask": {
        "args": [
          {
            "displayName": "int task",
            "name": "task"
          }
        ],
        "description": "**closeSequenceTask**(*int task*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0616/)*",
        "type": "function"
      },
      "connectLods": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int lod",
            "name": "lod"
          }
        ],
        "description": "**connectLods**(*Object object, int lod*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0827/)*",
        "type": "function"
      },
      "consumeWindowMessage": {
        "args": [
          {
            "displayName": "[bool game=true]",
            "name": "game"
          },
          {
            "displayName": "[bool scripts=true]",
            "name": "scripts"
          }
        ],
        "description": "**consumeWindowMessage**(*[bool game=true], [bool scripts=true]*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:consumeWindowMessage)*",
        "type": "function"
      },
      "controlCarDoor": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          },
          {
            "displayName": "int unlatch",
            "name": "unlatch"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**controlCarDoor**(*Vehicle car, int door, int unlatch, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/095E/)*",
        "type": "function"
      },
      "controlCarHydraulics": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float f1",
            "name": "f1"
          },
          {
            "displayName": "float f2",
            "name": "f2"
          },
          {
            "displayName": "float f3",
            "name": "f3"
          },
          {
            "displayName": "float f4",
            "name": "f4"
          }
        ],
        "description": "**controlCarHydraulics**(*Vehicle car, float f1, float f2, float f3, float f4*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F5/)*",
        "type": "function"
      },
      "controlMovableVehiclePart": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**controlMovableVehiclePart**(*Vehicle car, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A4/)*",
        "type": "function"
      },
      "convert3DCoordsToScreen": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          }
        ],
        "description": "**convert3DCoordsToScreen**(*float posX, float posY, float posZ*)  \n**Returns:** *float wposX, float wposY*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convert3DCoordsToScreen)*",
        "type": "function"
      },
      "convert3DCoordsToScreenEx": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "[bool checkMin=false]",
            "name": "checkMin"
          },
          {
            "displayName": "[bool checkMax=false]",
            "name": "checkMax"
          }
        ],
        "description": "**convert3DCoordsToScreenEx**(*float posX, float posY, float posZ, [bool checkMin=false], [bool checkMax=false]*)  \n**Returns:** *bool result, float x, float y, float z, float w, float h*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convert3DCoordsToScreenEx)*",
        "type": "function"
      },
      "convertGameScreenCoordsToWindowScreenCoords": {
        "args": [
          {
            "displayName": "float gposX",
            "name": "gposX"
          },
          {
            "displayName": "float gposY",
            "name": "gposY"
          }
        ],
        "description": "**convertGameScreenCoordsToWindowScreenCoords**(*float gposX, float gposY*)  \n**Returns:** *float wposX, float wposY*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convertGameScreenCoordsToWindowScreenCoords)*",
        "type": "function"
      },
      "convertMatrixToQuaternion": {
        "args": [
          {
            "displayName": "float rightX",
            "name": "rightX"
          },
          {
            "displayName": "float rightY",
            "name": "rightY"
          },
          {
            "displayName": "float rightZ",
            "name": "rightZ"
          },
          {
            "displayName": "float frontX",
            "name": "frontX"
          },
          {
            "displayName": "float frontY",
            "name": "frontY"
          },
          {
            "displayName": "float frontZ",
            "name": "frontZ"
          },
          {
            "displayName": "float upX",
            "name": "upX"
          },
          {
            "displayName": "float upY",
            "name": "upY"
          },
          {
            "displayName": "float upZ",
            "name": "upZ"
          }
        ],
        "description": "**convertMatrixToQuaternion**(*float rightX, float rightY, float rightZ, float frontX, float frontY, float frontZ, float upX, float upY, float upZ*)  \n**Returns:** *float w, float x, float y, float z*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convertMatrixToQuaternion)*",
        "type": "function"
      },
      "convertMetresToFeet": {
        "args": [
          {
            "displayName": "float meters",
            "name": "meters"
          }
        ],
        "description": "**convertMetresToFeet**(*float meters*)  \n**Returns:** *float feet*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0425/)*",
        "type": "function"
      },
      "convertMetresToFeetInt": {
        "args": [
          {
            "displayName": "int metric",
            "name": "metric"
          }
        ],
        "description": "**convertMetresToFeetInt**(*int metric*)  \n**Returns:** *int imperial*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/042D/)*",
        "type": "function"
      },
      "convertQuaternionToMatrix": {
        "args": [
          {
            "displayName": "float w",
            "name": "w"
          },
          {
            "displayName": "float x",
            "name": "x"
          },
          {
            "displayName": "float y",
            "name": "y"
          },
          {
            "displayName": "float z",
            "name": "z"
          }
        ],
        "description": "**convertQuaternionToMatrix**(*float w, float x, float y, float z*)  \n**Returns:** *float rightX, float rightY, float rightZ, float frontX, float frontY, float frontZ, float upX, float upY, float upZ*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convertQuaternionToMatrix)*",
        "type": "function"
      },
      "convertScreenCoordsToWorld3D": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float depth",
            "name": "depth"
          }
        ],
        "description": "**convertScreenCoordsToWorld3D**(*float posX, float posY, float depth*)  \n**Returns:** *float posX, float posY, float posZ*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convertScreenCoordsToWorld3D)*",
        "type": "function"
      },
      "convertWindowScreenCoordsToGameScreenCoords": {
        "args": [
          {
            "displayName": "float wposX",
            "name": "wposX"
          },
          {
            "displayName": "float wposY",
            "name": "wposY"
          }
        ],
        "description": "**convertWindowScreenCoordsToGameScreenCoords**(*float wposX, float wposY*)  \n**Returns:** *float gposX, float gposY*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:convertWindowScreenCoordsToGameScreenCoords)*",
        "type": "function"
      },
      "copyCharDecisionMaker": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**copyCharDecisionMaker**(*Ped ped*)  \n**Returns:** *int maker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E5/)*",
        "type": "function"
      },
      "copyGroupDecisionMaker": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**copyGroupDecisionMaker**(*int group*)  \n**Returns:** *int maker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E6/)*",
        "type": "function"
      },
      "copySharedCharDecisionMaker": {
        "args": [
          {
            "displayName": "int from",
            "name": "from"
          }
        ],
        "description": "**copySharedCharDecisionMaker**(*int from*)  \n**Returns:** *int to*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0978/)*",
        "type": "function"
      },
      "createBirds": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "int flag1",
            "name": "flag1"
          },
          {
            "displayName": "int flag2",
            "name": "flag2"
          }
        ],
        "description": "**createBirds**(*float x1, float y1, float z1, float x2, float y2, float z2, int flag1, int flag2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0876/)*",
        "type": "function"
      },
      "createCar": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createCar**(*Model modelId, float atX, float atY, float atZ*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A5/)*",
        "type": "function"
      },
      "createCarGenerator": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "int color1",
            "name": "color1"
          },
          {
            "displayName": "int color2",
            "name": "color2"
          },
          {
            "displayName": "bool forceSpawn",
            "name": "forceSpawn"
          },
          {
            "displayName": "int alarm",
            "name": "alarm"
          },
          {
            "displayName": "int doorLock",
            "name": "doorLock"
          },
          {
            "displayName": "int minDelay",
            "name": "minDelay"
          },
          {
            "displayName": "int maxDelay",
            "name": "maxDelay"
          }
        ],
        "description": "**createCarGenerator**(*float atX, float atY, float atZ, float angle, Model modelId, int color1, int color2, bool forceSpawn, int alarm, int doorLock, int minDelay, int maxDelay*)  \n**Returns:** *int carGenerator*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/014B/)*",
        "type": "function"
      },
      "createCarGeneratorWithPlate": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "int color1",
            "name": "color1"
          },
          {
            "displayName": "int color2",
            "name": "color2"
          },
          {
            "displayName": "bool forceSpawn",
            "name": "forceSpawn"
          },
          {
            "displayName": "int alarm",
            "name": "alarm"
          },
          {
            "displayName": "int doorLock",
            "name": "doorLock"
          },
          {
            "displayName": "int minDelay",
            "name": "minDelay"
          },
          {
            "displayName": "int maxDelay",
            "name": "maxDelay"
          },
          {
            "displayName": "string plate",
            "name": "plate"
          }
        ],
        "description": "**createCarGeneratorWithPlate**(*float atX, float atY, float atZ, float angle, Model modelId, int color1, int color2, bool forceSpawn, int alarm, int doorLock, int minDelay, int maxDelay, string plate*)  \n**Returns:** *int generator*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E2/)*",
        "type": "function"
      },
      "createChar": {
        "args": [
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createChar**(*int pedtype, Model modelId, float atX, float atY, float atZ*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/009A/)*",
        "type": "function"
      },
      "createCharAsPassenger": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Model pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "int model",
            "name": "model"
          },
          {
            "displayName": "int passengerSeat",
            "name": "passengerSeat"
          }
        ],
        "description": "**createCharAsPassenger**(*Vehicle car, Model pedtype, int model, int passengerSeat*)  \n**Returns:** *bool result, Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C8/)*",
        "type": "function"
      },
      "createCharAtAttractor": {
        "args": [
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "int ASOrigin",
            "name": "ASOrigin"
          },
          {
            "displayName": "int task",
            "name": "task"
          }
        ],
        "description": "**createCharAtAttractor**(*int pedtype, Model modelId, int ASOrigin, int task*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0621/)*",
        "type": "function"
      },
      "createCharInsideCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Model pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "int model",
            "name": "model"
          }
        ],
        "description": "**createCharInsideCar**(*Vehicle car, Model pedtype, int model*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0129/)*",
        "type": "function"
      },
      "createCheckpoint": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float pointZ",
            "name": "pointZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**createCheckpoint**(*int type, float atX, float atY, float atZ, float pointX, float pointY, float pointZ, float radius*)  \n**Returns:** *Checkpoint checkpoint*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06D5/)*",
        "type": "function"
      },
      "createCutsceneObject": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**createCutsceneObject**(*Model modelId*)  \n**Returns:** *Object object*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E5/)*",
        "type": "function"
      },
      "createDirectory": {
        "args": [
          {
            "displayName": "string directory",
            "name": "directory"
          }
        ],
        "description": "**createDirectory**(*string directory*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:createDirectory)*",
        "type": "function"
      },
      "createEmergencyServicesCar": {
        "args": [
          {
            "displayName": "Model car",
            "name": "car"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**createEmergencyServicesCar**(*Model car, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/085A/)*",
        "type": "function"
      },
      "createForsalePropertyPickup": {
        "args": [
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          },
          {
            "displayName": "float pZ",
            "name": "pZ"
          },
          {
            "displayName": "int price",
            "name": "price"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**createForsalePropertyPickup**(*float pX, float pY, float pZ, int price, GxtString gxtString*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0518/)*",
        "type": "function"
      },
      "createFxSystem": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          },
          {
            "displayName": "float pZ",
            "name": "pZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createFxSystem**(*string particle, float pX, float pY, float pZ, int type*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/064B/)*",
        "type": "function"
      },
      "createFxSystemOnCar": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createFxSystemOnCar**(*string particle, Vehicle car, float offsetX, float offsetY, float offsetZ, int type*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/066B/)*",
        "type": "function"
      },
      "createFxSystemOnCarWithDirection": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createFxSystemOnCarWithDirection**(*string particle, Vehicle car, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ, int type*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/066C/)*",
        "type": "function"
      },
      "createFxSystemOnChar": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createFxSystemOnChar**(*string particle, Ped ped, float offsetX, float offsetY, float offsetZ, int type*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0669/)*",
        "type": "function"
      },
      "createFxSystemOnCharWithDirection": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createFxSystemOnCharWithDirection**(*string particle, Ped ped, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ, int type*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/066A/)*",
        "type": "function"
      },
      "createFxSystemOnObject": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createFxSystemOnObject**(*string particle, Object object, float offsetX, float offsetY, float offsetZ, int type*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/066D/)*",
        "type": "function"
      },
      "createFxSystemOnObjectWithDirection": {
        "args": [
          {
            "displayName": "string particle",
            "name": "particle"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**createFxSystemOnObjectWithDirection**(*string particle, Object object, float offsetX, float offsetY, float offsetZ, float rotationX, float rotationY, float rotationZ, int flag*)  \n**Returns:** *Particle particle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/066E/)*",
        "type": "function"
      },
      "createGroup": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createGroup**(*int type*)  \n**Returns:** *int group*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/062F/)*",
        "type": "function"
      },
      "createHorseshoePickup": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createHorseshoePickup**(*float atX, float atY, float atZ*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0959/)*",
        "type": "function"
      },
      "createLockedPropertyPickup": {
        "args": [
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          },
          {
            "displayName": "float pZ",
            "name": "pZ"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**createLockedPropertyPickup**(*float pX, float pY, float pZ, GxtString gxtString*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0517/)*",
        "type": "function"
      },
      "createMenu": {
        "args": [
          {
            "displayName": "GxtString title",
            "name": "title"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float width",
            "name": "width"
          },
          {
            "displayName": "int columns",
            "name": "columns"
          },
          {
            "displayName": "bool interactive",
            "name": "interactive"
          },
          {
            "displayName": "bool background",
            "name": "background"
          },
          {
            "displayName": "int alignment",
            "name": "alignment"
          }
        ],
        "description": "**createMenu**(*GxtString title, float posX, float posY, float width, int columns, bool interactive, bool background, int alignment*)  \n**Returns:** *int menu*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D4/)*",
        "type": "function"
      },
      "createMenuGrid": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int positionX",
            "name": "positionX"
          },
          {
            "displayName": "int positionY",
            "name": "positionY"
          },
          {
            "displayName": "float width",
            "name": "width"
          },
          {
            "displayName": "int columns",
            "name": "columns"
          },
          {
            "displayName": "bool interactive",
            "name": "interactive"
          },
          {
            "displayName": "bool background",
            "name": "background"
          },
          {
            "displayName": "int alignment",
            "name": "alignment"
          }
        ],
        "description": "**createMenuGrid**(*GxtString gxtString, int positionX, int positionY, float width, int columns, bool interactive, bool background, int alignment*)  \n**Returns:** *int id*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0964/)*",
        "type": "function"
      },
      "createMissionTrain": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "bool direction",
            "name": "direction"
          }
        ],
        "description": "**createMissionTrain**(*int type, float atX, float atY, float atZ, bool direction*)  \n**Returns:** *Vehicle train*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06D8/)*",
        "type": "function"
      },
      "createMoneyPickup": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int cash",
            "name": "cash"
          },
          {
            "displayName": "bool permanenceFlag",
            "name": "permanenceFlag"
          }
        ],
        "description": "**createMoneyPickup**(*float atX, float atY, float atZ, int cash, bool permanenceFlag*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E1/)*",
        "type": "function"
      },
      "createObject": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createObject**(*Model modelId, float atX, float atY, float atZ*)  \n**Returns:** *Object object*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0107/) / [ru](http://blast.hk/wiki/opcodes:0107)*",
        "type": "function"
      },
      "createObjectNoOffset": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createObjectNoOffset**(*Model modelId, float atX, float atY, float atZ*)  \n**Returns:** *Object object*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/029B/)*",
        "type": "function"
      },
      "createOysterPickup": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createOysterPickup**(*float atX, float atY, float atZ*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/095A/)*",
        "type": "function"
      },
      "createPickup": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createPickup**(*Model modelId, int type, float atX, float atY, float atZ*)  \n**Returns:** *bool result, Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0213/)*",
        "type": "function"
      },
      "createPickupWithAmmo": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "int ammo",
            "name": "ammo"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createPickupWithAmmo**(*Model modelId, int type, int ammo, float atX, float atY, float atZ*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/032B/)*",
        "type": "function"
      },
      "createPlayer": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createPlayer**(*Model modelId, float atX, float atY, float atZ*)  \n**Returns:** *Player player*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0053/)*",
        "type": "function"
      },
      "createProtectionPickup": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int int4",
            "name": "int4"
          },
          {
            "displayName": "int int5",
            "name": "int5"
          }
        ],
        "description": "**createProtectionPickup**(*float atX, float atY, float atZ, int int4, int int5*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04A6/)*",
        "type": "function"
      },
      "createRandomCarForCarPark": {
        "args": [
          {
            "displayName": "float coordsX",
            "name": "coordsX"
          },
          {
            "displayName": "float coordsY",
            "name": "coordsY"
          },
          {
            "displayName": "float coordsZ",
            "name": "coordsZ"
          },
          {
            "displayName": "float zAngle",
            "name": "zAngle"
          }
        ],
        "description": "**createRandomCarForCarPark**(*float coordsX, float coordsY, float coordsZ, float zAngle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C5/)*",
        "type": "function"
      },
      "createRandomChar": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createRandomChar**(*float atX, float atY, float atZ*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0376/)*",
        "type": "function"
      },
      "createRandomCharAsDriver": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**createRandomCharAsDriver**(*Vehicle car*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0560/)*",
        "type": "function"
      },
      "createRandomCharAsPassenger": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int seat",
            "name": "seat"
          }
        ],
        "description": "**createRandomCharAsPassenger**(*Vehicle car, int seat*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0561/)*",
        "type": "function"
      },
      "createScmThreadAtPointer": {
        "args": [
          {
            "displayName": "int pointer",
            "name": "pointer"
          },
          {
            "displayName": "table args",
            "name": "args"
          }
        ],
        "description": "**createScmThreadAtPointer**(*int pointer, table args*)  \n**Returns:** *int thread*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C6B)*",
        "type": "function"
      },
      "createScriptRoadblock": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**createScriptRoadblock**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, int type*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04C0/)*",
        "type": "function"
      },
      "createSearchlight": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float targetX",
            "name": "targetX"
          },
          {
            "displayName": "float targetY",
            "name": "targetY"
          },
          {
            "displayName": "float targetZ",
            "name": "targetZ"
          },
          {
            "displayName": "float radius1",
            "name": "radius1"
          },
          {
            "displayName": "float radius2",
            "name": "radius2"
          }
        ],
        "description": "**createSearchlight**(*float atX, float atY, float atZ, float targetX, float targetY, float targetZ, float radius1, float radius2*)  \n**Returns:** *Searchlight searchlight*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B1/)*",
        "type": "function"
      },
      "createSearchlightOnVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float targetX",
            "name": "targetX"
          },
          {
            "displayName": "float targetY",
            "name": "targetY"
          },
          {
            "displayName": "float targetZ",
            "name": "targetZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**createSearchlightOnVehicle**(*Vehicle car, float offsetX, float offsetY, float offsetZ, float targetX, float targetY, float targetZ, float radius, float radius*)  \n**Returns:** *Searchlight searchlight*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C1/)*",
        "type": "function"
      },
      "createSnapshotPickup": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**createSnapshotPickup**(*float atX, float atY, float atZ*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0958/)*",
        "type": "function"
      },
      "createSwatRope": {
        "args": [
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**createSwatRope**(*int pedtype, Model modelId, float X, float Y, float Z*)  \n**Returns:** *int handleAs*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0503/)*",
        "type": "function"
      },
      "createUser3dMarker": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**createUser3dMarker**(*float atX, float atY, float atZ, int color*)  \n**Returns:** *Marker marker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A40/)*",
        "type": "function"
      },
      "customPlateDesignForNextCar": {
        "args": [
          {
            "displayName": "Model modelNumplate",
            "name": "modelNumplate"
          },
          {
            "displayName": "int townTexture",
            "name": "townTexture"
          }
        ],
        "description": "**customPlateDesignForNextCar**(*Model modelNumplate, int townTexture*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0771/)*",
        "type": "function"
      },
      "customPlateForNextCar": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "string numberplate",
            "name": "numberplate"
          }
        ],
        "description": "**customPlateForNextCar**(*Model modelId, string numberplate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0674/)*",
        "type": "function"
      },
      "damageCarDoor": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**damageCarDoor**(*Vehicle car, int door*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/073C/)*",
        "type": "function"
      },
      "damageCarPanel": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**damageCarPanel**(*Vehicle car, int door*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0730/)*",
        "type": "function"
      },
      "damageChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int health",
            "name": "health"
          },
          {
            "displayName": "bool affectArmour",
            "name": "affectArmour"
          }
        ],
        "description": "**damageChar**(*Ped ped, int health, bool affectArmour*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0851/)*",
        "type": "function"
      },
      "deactivateGarage": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          }
        ],
        "description": "**deactivateGarage**(*GxtString garage*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02B9/)*",
        "type": "function"
      },
      "declareMissionFlag": {
        "args": [
          {
            "displayName": "VarId flag",
            "name": "flag"
          }
        ],
        "description": "**declareMissionFlag**(*VarId flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0180/)*",
        "type": "function"
      },
      "decodeJson": {
        "args": [
          {
            "displayName": "string json",
            "name": "json"
          }
        ],
        "description": "**decodeJson**(*string json*)  \n**Returns:** *table data*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:decodeJson)*",
        "type": "function"
      },
      "decrementFloatStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "float float",
            "name": "float"
          }
        ],
        "description": "**decrementFloatStat**(*int stat, float float*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0626/)*",
        "type": "function"
      },
      "decrementIntStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "int int",
            "name": "int"
          }
        ],
        "description": "**decrementIntStat**(*int stat, int int*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0625/)*",
        "type": "function"
      },
      "deleteAllTrains": {
        "description": "**deleteAllTrains**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06DB/)*",
        "type": "function"
      },
      "deleteCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**deleteCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A6/)*",
        "type": "function"
      },
      "deleteChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**deleteChar**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/009B/)*",
        "type": "function"
      },
      "deleteCheckpoint": {
        "args": [
          {
            "displayName": "Checkpoint checkpoint",
            "name": "checkpoint"
          }
        ],
        "description": "**deleteCheckpoint**(*Checkpoint checkpoint*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06D6/)*",
        "type": "function"
      },
      "deleteMenu": {
        "args": [
          {
            "displayName": "int menu",
            "name": "menu"
          }
        ],
        "description": "**deleteMenu**(*int menu*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08DA/)*",
        "type": "function"
      },
      "deleteMissionTrain": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**deleteMissionTrain**(*Vehicle train*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07BD/)*",
        "type": "function"
      },
      "deleteMissionTrains": {
        "description": "**deleteMissionTrains**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06D9/)*",
        "type": "function"
      },
      "deleteObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**deleteObject**(*Object object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0108/) / [ru](http://blast.hk/wiki/opcodes:0108)*",
        "type": "function"
      },
      "deletePlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**deletePlayer**(*Player player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06DF/)*",
        "type": "function"
      },
      "deleteSearchlight": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          }
        ],
        "description": "**deleteSearchlight**(*Searchlight searchlight*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B2/)*",
        "type": "function"
      },
      "destroyScmThread": {
        "args": [
          {
            "displayName": "int thread",
            "name": "thread"
          }
        ],
        "description": "**destroyScmThread**(*int thread*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C6E)*",
        "type": "function"
      },
      "detachCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "bool collisionDetection",
            "name": "collisionDetection"
          }
        ],
        "description": "**detachCar**(*Vehicle car, float X, float Y, float Z, bool collisionDetection*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0684/)*",
        "type": "function"
      },
      "detachCharFromCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**detachCharFromCar**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0465/)*",
        "type": "function"
      },
      "detachObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "bool collisionDetection",
            "name": "collisionDetection"
          }
        ],
        "description": "**detachObject**(*Object object, float X, float Y, float Z, bool collisionDetection*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0682/)*",
        "type": "function"
      },
      "detachTrailerFromCab": {
        "args": [
          {
            "displayName": "int trailer",
            "name": "trailer"
          },
          {
            "displayName": "int cab",
            "name": "cab"
          }
        ],
        "description": "**detachTrailerFromCab**(*int trailer, int cab*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07AC/)*",
        "type": "function"
      },
      "disableAllEntryExits": {
        "args": [
          {
            "displayName": "bool disable",
            "name": "disable"
          }
        ],
        "description": "**disableAllEntryExits**(*bool disable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E7/)*",
        "type": "function"
      },
      "disableCharSpeech": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool disable",
            "name": "disable"
          }
        ],
        "description": "**disableCharSpeech**(*Ped ped, bool disable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/094E/)*",
        "type": "function"
      },
      "disableHeliAudio": {
        "args": [
          {
            "displayName": "Vehicle helicopter",
            "name": "helicopter"
          },
          {
            "displayName": "bool disable",
            "name": "disable"
          }
        ],
        "description": "**disableHeliAudio**(*Vehicle helicopter, bool disable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A1C/)*",
        "type": "function"
      },
      "disablePlayerSprint": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool mode",
            "name": "mode"
          }
        ],
        "description": "**disablePlayerSprint**(*Player player, bool mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06AF/)*",
        "type": "function"
      },
      "displayCarNames": {
        "args": [
          {
            "displayName": "bool show",
            "name": "show"
          }
        ],
        "description": "**displayCarNames**(*bool show*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B9/)*",
        "type": "function"
      },
      "displayHud": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**displayHud**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0826/) / [ru](http://blast.hk/wiki/opcodes:0826)*",
        "type": "function"
      },
      "displayNonMinigameHelpMessages": {
        "args": [
          {
            "displayName": "bool display",
            "name": "display"
          }
        ],
        "description": "**displayNonMinigameHelpMessages**(*bool display*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A44/)*",
        "type": "function"
      },
      "displayNthOnscreenCounterWithString": {
        "args": [
          {
            "displayName": "VarId text",
            "name": "text"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "int line",
            "name": "line"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**displayNthOnscreenCounterWithString**(*VarId text, int type, int line, GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04F7/)*",
        "type": "function"
      },
      "displayOnscreenCounterWithString": {
        "args": [
          {
            "displayName": "VarId var",
            "name": "var"
          },
          {
            "displayName": "bool type",
            "name": "type"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**displayOnscreenCounterWithString**(*VarId var, bool type, GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C4/)*",
        "type": "function"
      },
      "displayOnscreenTimer": {
        "args": [
          {
            "displayName": "VarId var",
            "name": "var"
          },
          {
            "displayName": "bool countInDirection",
            "name": "countInDirection"
          }
        ],
        "description": "**displayOnscreenTimer**(*VarId var, bool countInDirection*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/014E/)*",
        "type": "function"
      },
      "displayOnscreenTimerWithString": {
        "args": [
          {
            "displayName": "VarId timer",
            "name": "timer"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**displayOnscreenTimerWithString**(*VarId timer, int type, GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C3/)*",
        "type": "function"
      },
      "displayRadar": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**displayRadar**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0581/)*",
        "type": "function"
      },
      "displayText": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**displayText**(*float posX, float posY, GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/033E/)*",
        "type": "function"
      },
      "displayTextWith2Numbers": {
        "args": [
          {
            "displayName": "float x",
            "name": "x"
          },
          {
            "displayName": "float y",
            "name": "y"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbersX",
            "name": "numbersX"
          },
          {
            "displayName": "int numbersY",
            "name": "numbersY"
          }
        ],
        "description": "**displayTextWith2Numbers**(*float x, float y, GxtString gxtString, int numbersX, int numbersY*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/045B/)*",
        "type": "function"
      },
      "displayTextWithFloat": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "GxtString GXT",
            "name": "GXT"
          },
          {
            "displayName": "float value",
            "name": "value"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**displayTextWithFloat**(*float X, float Y, GxtString GXT, float value, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07FC/)*",
        "type": "function"
      },
      "displayTextWithNumber": {
        "args": [
          {
            "displayName": "float x",
            "name": "x"
          },
          {
            "displayName": "float y",
            "name": "y"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int number",
            "name": "number"
          }
        ],
        "description": "**displayTextWithNumber**(*float x, float y, GxtString gxtString, int number*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/045A/)*",
        "type": "function"
      },
      "displayZoneNames": {
        "args": [
          {
            "displayName": "bool show",
            "name": "show"
          }
        ],
        "description": "**displayZoneNames**(*bool show*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09BA/)*",
        "type": "function"
      },
      "do2dRectanglesCollide": {
        "args": [
          {
            "displayName": "float areaX",
            "name": "areaX"
          },
          {
            "displayName": "float areaY",
            "name": "areaY"
          },
          {
            "displayName": "float scaleX",
            "name": "scaleX"
          },
          {
            "displayName": "float scaleY",
            "name": "scaleY"
          },
          {
            "displayName": "float overlapareaX",
            "name": "overlapareaX"
          },
          {
            "displayName": "float overlapareaY",
            "name": "overlapareaY"
          },
          {
            "displayName": "float overlapscaleX",
            "name": "overlapscaleX"
          },
          {
            "displayName": "float overlapscaleY",
            "name": "overlapscaleY"
          }
        ],
        "description": "**do2dRectanglesCollide**(*float areaX, float areaY, float scaleX, float scaleY, float overlapareaX, float overlapareaY, float overlapscaleX, float overlapscaleY*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A5/)*",
        "type": "function"
      },
      "doCameraBump": {
        "args": [
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          }
        ],
        "description": "**doCameraBump**(*float rotationZ, float rotationY*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0834/)*",
        "type": "function"
      },
      "doFade": {
        "args": [
          {
            "displayName": "bool fade",
            "name": "fade"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**doFade**(*bool fade, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/016A/)*",
        "type": "function"
      },
      "doWeaponStuffAtStartOf2pGame": {
        "description": "**doWeaponStuffAtStartOf2pGame**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F8/)*",
        "type": "function"
      },
      "doesBlipExist": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          }
        ],
        "description": "**doesBlipExist**(*Marker marker*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/075C/)*",
        "type": "function"
      },
      "doesCarHaveHydraulics": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**doesCarHaveHydraulics**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0803/)*",
        "type": "function"
      },
      "doesCarHaveStuckCarCheck": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**doesCarHaveStuckCarCheck**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06FC/)*",
        "type": "function"
      },
      "doesCharExist": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**doesCharExist**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/056D/) / [ru](http://blast.hk/wiki/opcodes:056D)*",
        "type": "function"
      },
      "doesDecisionMakerExist": {
        "args": [
          {
            "displayName": "int maker",
            "name": "maker"
          }
        ],
        "description": "**doesDecisionMakerExist**(*int maker*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F2/)*",
        "type": "function"
      },
      "doesDirectoryExist": {
        "args": [
          {
            "displayName": "string directory",
            "name": "directory"
          }
        ],
        "description": "**doesDirectoryExist**(*string directory*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:doesDirectoryExist)*",
        "type": "function"
      },
      "doesFileExist": {
        "args": [
          {
            "displayName": "string file",
            "name": "file"
          }
        ],
        "description": "**doesFileExist**(*string file*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:doesFileExist)*",
        "type": "function"
      },
      "doesGroupExist": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**doesGroupExist**(*int group*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07FD/)*",
        "type": "function"
      },
      "doesObjectExist": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**doesObjectExist**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03CA/)*",
        "type": "function"
      },
      "doesObjectHaveThisModel": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**doesObjectHaveThisModel**(*Object object, Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09CC/)*",
        "type": "function"
      },
      "doesPickupExist": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          }
        ],
        "description": "**doesPickupExist**(*Pickup pickup*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D1/)*",
        "type": "function"
      },
      "doesScriptFireExist": {
        "args": [
          {
            "displayName": "int fire",
            "name": "fire"
          }
        ],
        "description": "**doesScriptFireExist**(*int fire*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0973/)*",
        "type": "function"
      },
      "doesSearchlightExist": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          }
        ],
        "description": "**doesSearchlightExist**(*Searchlight searchlight*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B3/)*",
        "type": "function"
      },
      "doesVehicleExist": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**doesVehicleExist**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/056E/) / [ru](http://blast.hk/wiki/opcodes:056E)*",
        "type": "function"
      },
      "dontRemoveChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**dontRemoveChar**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C5/)*",
        "type": "function"
      },
      "dontRemoveObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**dontRemoveObject**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C7/)*",
        "type": "function"
      },
      "dontSuppressAnyCarModels": {
        "description": "**dontSuppressAnyCarModels**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0734/)*",
        "type": "function"
      },
      "dontSuppressCarModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**dontSuppressCarModel**(*Model modelId*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0733/)*",
        "type": "function"
      },
      "downloadUrlToFile": {
        "args": [
          {
            "displayName": "string url",
            "name": "url"
          },
          {
            "displayName": "string file",
            "name": "file"
          },
          {
            "displayName": "function statusCallback",
            "name": "statusCallback"
          }
        ],
        "description": "**downloadUrlToFile**(*string url, string file, function statusCallback*)  \n**Returns:** *int index*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:downloadUrlToFile)*",
        "type": "function"
      },
      "drawCorona": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "bool lensflares",
            "name": "lensflares"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          }
        ],
        "description": "**drawCorona**(*float atX, float atY, float atZ, float radius, int type, bool lensflares, int r, int g, int b*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/024F/)*",
        "type": "function"
      },
      "drawCrosshair": {
        "args": [
          {
            "displayName": "bool draw",
            "name": "draw"
          }
        ],
        "description": "**drawCrosshair**(*bool draw*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A3/)*",
        "type": "function"
      },
      "drawLightWithRange": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**drawLightWithRange**(*float atX, float atY, float atZ, int r, int g, int b, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E5/)*",
        "type": "function"
      },
      "drawOddjobTitleBeforeFade": {
        "args": [
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**drawOddjobTitleBeforeFade**(*bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A2D/)*",
        "type": "function"
      },
      "drawRect": {
        "args": [
          {
            "displayName": "float positionX",
            "name": "positionX"
          },
          {
            "displayName": "float positionY",
            "name": "positionY"
          },
          {
            "displayName": "float width",
            "name": "width"
          },
          {
            "displayName": "float height",
            "name": "height"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          }
        ],
        "description": "**drawRect**(*float positionX, float positionY, float width, float height, int r, int g, int b, int a*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/038E/)*",
        "type": "function"
      },
      "drawShadow": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float rotationFactor",
            "name": "rotationFactor"
          },
          {
            "displayName": "float size",
            "name": "size"
          },
          {
            "displayName": "int intensity",
            "name": "intensity"
          },
          {
            "displayName": "int flags1",
            "name": "flags1"
          },
          {
            "displayName": "int flags2",
            "name": "flags2"
          },
          {
            "displayName": "int flags3",
            "name": "flags3"
          }
        ],
        "description": "**drawShadow**(*Particle particle, float atX, float atY, float atZ, float rotationFactor, float size, int intensity, int flags1, int flags2, int flags3*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/016F/)*",
        "type": "function"
      },
      "drawSphere": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**drawSphere**(*float atX, float atY, float atZ, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03A1/)*",
        "type": "function"
      },
      "drawSprite": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          },
          {
            "displayName": "float positionX",
            "name": "positionX"
          },
          {
            "displayName": "float positionY",
            "name": "positionY"
          },
          {
            "displayName": "float width",
            "name": "width"
          },
          {
            "displayName": "float height",
            "name": "height"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          }
        ],
        "description": "**drawSprite**(*int texture, float positionX, float positionY, float width, float height, int r, int g, int b, int a*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/038D/)*",
        "type": "function"
      },
      "drawSpriteWithRotation": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          },
          {
            "displayName": "float x",
            "name": "x"
          },
          {
            "displayName": "float y",
            "name": "y"
          },
          {
            "displayName": "float scaleX",
            "name": "scaleX"
          },
          {
            "displayName": "float scaleY",
            "name": "scaleY"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          }
        ],
        "description": "**drawSpriteWithRotation**(*int texture, float x, float y, float scaleX, float scaleY, float angle, int r, int g, int b, int a*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/074B/)*",
        "type": "function"
      },
      "drawSubtitlesBeforeFade": {
        "args": [
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**drawSubtitlesBeforeFade**(*bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A2C/)*",
        "type": "function"
      },
      "drawWeaponshopCorona": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "int flare",
            "name": "flare"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          }
        ],
        "description": "**drawWeaponshopCorona**(*float X, float Y, float Z, float radius, int type, int flare, int r, int g, int b*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D5/)*",
        "type": "function"
      },
      "drawWindow": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**drawWindow**(*float cornerAX, float cornerAY, float cornerBX, float cornerBY, GxtString gxtString, int style*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0937/)*",
        "type": "function"
      },
      "dropObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool object",
            "name": "object"
          }
        ],
        "description": "**dropObject**(*Ped ped, bool object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/070B/)*",
        "type": "function"
      },
      "dropSecondObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool to",
            "name": "to"
          }
        ],
        "description": "**dropSecondObject**(*Ped ped, bool to*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A1/)*",
        "type": "function"
      },
      "dxutAddButton": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutAddButton**(*DxutDialog dialog, int id, zstring text, int posX, int posY, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B82)*",
        "type": "function"
      },
      "dxutAddCheckbox": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutAddCheckbox**(*DxutDialog dialog, int id, zstring text, int posX, int posY, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B83)*",
        "type": "function"
      },
      "dxutAddEditbox": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutAddEditbox**(*DxutDialog dialog, int id, zstring text, int posX, int posY, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B88)*",
        "type": "function"
      },
      "dxutAddListbox": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutAddListbox**(*DxutDialog dialog, int id, int posX, int posY, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B99)*",
        "type": "function"
      },
      "dxutAddSlider": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          },
          {
            "displayName": "int max",
            "name": "max"
          }
        ],
        "description": "**dxutAddSlider**(*DxutDialog dialog, int id, int posX, int posY, int sizeX, int sizeY, int max*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B96)*",
        "type": "function"
      },
      "dxutAddStatic": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutAddStatic**(*DxutDialog dialog, int id, zstring text, int posX, int posY, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B91)*",
        "type": "function"
      },
      "dxutCheckboxSetChecked": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "bool checked",
            "name": "checked"
          }
        ],
        "description": "**dxutCheckboxSetChecked**(*DxutDialog dialog, int id, bool checked*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B9E)*",
        "type": "function"
      },
      "dxutControlIsVisible": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutControlIsVisible**(*DxutDialog dialog, int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B95)*",
        "type": "function"
      },
      "dxutCreateDialog": {
        "args": [
          {
            "displayName": "zstring name",
            "name": "name"
          }
        ],
        "description": "**dxutCreateDialog**(*zstring name*)  \n**Returns:** *DxutDialog dialog*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B80)*",
        "type": "function"
      },
      "dxutDeleteControl": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutDeleteControl**(*DxutDialog dialog, int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA3)*",
        "type": "function"
      },
      "dxutDeleteDialog": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutDeleteDialog**(*DxutDialog dialog*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA4)*",
        "type": "function"
      },
      "dxutEnableDialogCaption": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int enable",
            "name": "enable"
          }
        ],
        "description": "**dxutEnableDialogCaption**(*DxutDialog dialog, int enable*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B9F)*",
        "type": "function"
      },
      "dxutGetControlPos": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutGetControlPos**(*DxutDialog dialog, int id*)  \n**Returns:** *int posX, int posY*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA9)*",
        "type": "function"
      },
      "dxutGetControlSize": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutGetControlSize**(*DxutDialog dialog, int id*)  \n**Returns:** *int sizeX, int sizeY*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA7)*",
        "type": "function"
      },
      "dxutGetControlText": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutGetControlText**(*DxutDialog dialog, int id*)  \n**Returns:** *zstring text*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B89)*",
        "type": "function"
      },
      "dxutGetDialogPosAndSize": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutGetDialogPosAndSize**(*DxutDialog dialog*)  \n**Returns:** *int posX, int posY, int sizeX, int sizeY*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B85)*",
        "type": "function"
      },
      "dxutGetListboxItemTextAndData": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int element",
            "name": "element"
          }
        ],
        "description": "**dxutGetListboxItemTextAndData**(*DxutDialog dialog, int id, int element*)  \n**Returns:** *zstring text, int data*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B9D)*",
        "type": "function"
      },
      "dxutGetListboxSelectedItemAndCount": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutGetListboxSelectedItemAndCount**(*DxutDialog dialog, int id*)  \n**Returns:** *int element, int count*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B9B)*",
        "type": "function"
      },
      "dxutGetSliderValue": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutGetSliderValue**(*DxutDialog dialog, int id*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B97)*",
        "type": "function"
      },
      "dxutIsCheckboxChecked": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutIsCheckboxChecked**(*DxutDialog dialog, int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B92)*",
        "type": "function"
      },
      "dxutIsDialogCaptionEnabled": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutIsDialogCaptionEnabled**(*DxutDialog dialog*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA0)*",
        "type": "function"
      },
      "dxutIsDialogExists": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutIsDialogExists**(*DxutDialog dialog*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BAB)*",
        "type": "function"
      },
      "dxutIsDialogMinimized": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutIsDialogMinimized**(*DxutDialog dialog*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA2)*",
        "type": "function"
      },
      "dxutIsDialogVisible": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutIsDialogVisible**(*DxutDialog dialog*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B87)*",
        "type": "function"
      },
      "dxutListboxDeleteItem": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int element",
            "name": "element"
          }
        ],
        "description": "**dxutListboxDeleteItem**(*DxutDialog dialog, int id, int element*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B9C)*",
        "type": "function"
      },
      "dxutListboxInsertItem": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring element",
            "name": "element"
          },
          {
            "displayName": "int data",
            "name": "data"
          },
          {
            "displayName": "int after",
            "name": "after"
          }
        ],
        "description": "**dxutListboxInsertItem**(*DxutDialog dialog, int id, zstring element, int data, int after*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B9A)*",
        "type": "function"
      },
      "dxutPopEvent": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          }
        ],
        "description": "**dxutPopEvent**(*DxutDialog dialog*)  \n**Returns:** *bool result, int event, int id*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B81)*",
        "type": "function"
      },
      "dxutSetCheckboxColor": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**dxutSetCheckboxColor**(*DxutDialog dialog, int id, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BAA)*",
        "type": "function"
      },
      "dxutSetControlPos": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          }
        ],
        "description": "**dxutSetControlPos**(*DxutDialog dialog, int id, int posX, int posY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA8)*",
        "type": "function"
      },
      "dxutSetControlSize": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutSetControlSize**(*DxutDialog dialog, int id, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA6)*",
        "type": "function"
      },
      "dxutSetControlText": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**dxutSetControlText**(*DxutDialog dialog, int id, zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B94)*",
        "type": "function"
      },
      "dxutSetControlVisible": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "bool visible",
            "name": "visible"
          }
        ],
        "description": "**dxutSetControlVisible**(*DxutDialog dialog, int id, bool visible*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B90)*",
        "type": "function"
      },
      "dxutSetDialogBackgroundColor": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**dxutSetDialogBackgroundColor**(*DxutDialog dialog, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B93)*",
        "type": "function"
      },
      "dxutSetDialogMinimized": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "bool minimized",
            "name": "minimized"
          }
        ],
        "description": "**dxutSetDialogMinimized**(*DxutDialog dialog, bool minimized*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA1)*",
        "type": "function"
      },
      "dxutSetDialogPos": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**dxutSetDialogPos**(*DxutDialog dialog, int posX, int posY, int sizeX, int sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B84)*",
        "type": "function"
      },
      "dxutSetDialogVisible": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "bool visible",
            "name": "visible"
          }
        ],
        "description": "**dxutSetDialogVisible**(*DxutDialog dialog, bool visible*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B86)*",
        "type": "function"
      },
      "dxutSetFocusOnControl": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**dxutSetFocusOnControl**(*DxutDialog dialog, int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BA5)*",
        "type": "function"
      },
      "dxutSetSliderValue": {
        "args": [
          {
            "displayName": "DxutDialog dialog",
            "name": "dialog"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**dxutSetSliderValue**(*DxutDialog dialog, int id, int value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B98)*",
        "type": "function"
      },
      "enableAmbientCrime": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**enableAmbientCrime**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D2/)*",
        "type": "function"
      },
      "enableBurglaryHouses": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**enableBurglaryHouses**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E6/)*",
        "type": "function"
      },
      "enableCharSpeech": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**enableCharSpeech**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/094F/)*",
        "type": "function"
      },
      "enableConversation": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**enableConversation**(*Ped ped, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/089C/)*",
        "type": "function"
      },
      "enableCraneControls": {
        "args": [
          {
            "displayName": "bool UP",
            "name": "UP"
          },
          {
            "displayName": "bool DOWN",
            "name": "DOWN"
          },
          {
            "displayName": "bool RELEASE",
            "name": "RELEASE"
          }
        ],
        "description": "**enableCraneControls**(*bool UP, bool DOWN, bool RELEASE*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0898/)*",
        "type": "function"
      },
      "enableDisabledAttractorsOnObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**enableDisabledAttractorsOnObject**(*Object object, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A0A/)*",
        "type": "function"
      },
      "enableEntryExitPlayerGroupWarping": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool access",
            "name": "access"
          }
        ],
        "description": "**enableEntryExitPlayerGroupWarping**(*float X, float Y, float radius, bool access*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0864/)*",
        "type": "function"
      },
      "encodeJson": {
        "args": [
          {
            "displayName": "table data",
            "name": "data"
          }
        ],
        "description": "**encodeJson**(*table data*)  \n**Returns:** *string json*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:encodeJson)*",
        "type": "function"
      },
      "ensurePlayerHasDriveByWeapon": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int ammo",
            "name": "ammo"
          }
        ],
        "description": "**ensurePlayerHasDriveByWeapon**(*Player player, int ammo*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0563/)*",
        "type": "function"
      },
      "explodeCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**explodeCar**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/020B/)*",
        "type": "function"
      },
      "explodeCarInCutscene": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**explodeCarInCutscene**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/070C/)*",
        "type": "function"
      },
      "explodeCarInCutsceneShakeAndBits": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool shake",
            "name": "shake"
          },
          {
            "displayName": "bool effect",
            "name": "effect"
          },
          {
            "displayName": "bool sound",
            "name": "sound"
          }
        ],
        "description": "**explodeCarInCutsceneShakeAndBits**(*Vehicle car, bool shake, bool effect, bool sound*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08CB/)*",
        "type": "function"
      },
      "explodeCharHead": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**explodeCharHead**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0321/)*",
        "type": "function"
      },
      "extendPatrolRoute": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string IFPFile",
            "name": "IFPFile"
          }
        ],
        "description": "**extendPatrolRoute**(*float X, float Y, float Z, string animation, string IFPFile*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0755/)*",
        "type": "function"
      },
      "extendRoute": {
        "args": [
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float pointZ",
            "name": "pointZ"
          }
        ],
        "description": "**extendRoute**(*float pointX, float pointY, float pointZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D7/)*",
        "type": "function"
      },
      "extinguishFireAtPoint": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**extinguishFireAtPoint**(*float atX, float atY, float atZ, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0980/)*",
        "type": "function"
      },
      "failCurrentMission": {
        "description": "**failCurrentMission**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/045C/)*",
        "type": "function"
      },
      "failKillFrenzy": {
        "description": "**failKillFrenzy**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C2/)*",
        "type": "function"
      },
      "fetchNextCard": {
        "description": "**fetchNextCard**()  \n**Returns:** *int card*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/059E/)*",
        "type": "function"
      },
      "findAllRandomCharsInSphere": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool findNext",
            "name": "findNext"
          },
          {
            "displayName": "bool skipDead",
            "name": "skipDead"
          }
        ],
        "description": "**findAllRandomCharsInSphere**(*float posX, float posY, float posZ, float radius, bool findNext, bool skipDead*)  \n**Returns:** *bool result, Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AE1/) / [ru](http://blast.hk/wiki/lua:findAllRandomCharsInSphere)*",
        "type": "function"
      },
      "findAllRandomObjectsInSphere": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool findNext",
            "name": "findNext"
          }
        ],
        "description": "**findAllRandomObjectsInSphere**(*float posX, float posY, float posZ, float radius, bool findNext*)  \n**Returns:** *bool result, Object object*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AE3/) / [ru](http://blast.hk/wiki/lua:findAllRandomObjectsInSphere)*",
        "type": "function"
      },
      "findAllRandomVehiclesInSphere": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool findNext",
            "name": "findNext"
          },
          {
            "displayName": "bool skipWrecked",
            "name": "skipWrecked"
          }
        ],
        "description": "**findAllRandomVehiclesInSphere**(*float posX, float posY, float posZ, float radius, bool findNext, bool skipWrecked*)  \n**Returns:** *bool result, Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AE2/) / [ru](http://blast.hk/wiki/lua:findAllRandomVehiclesInSphere)*",
        "type": "function"
      },
      "findClose": {
        "args": [
          {
            "displayName": "Filesearch handle",
            "name": "handle"
          }
        ],
        "description": "**findClose**(*Filesearch handle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AE8/) / [ru](http://blast.hk/wiki/lua:findClose)*",
        "type": "function"
      },
      "findFirstFile": {
        "args": [
          {
            "displayName": "string mask",
            "name": "mask"
          }
        ],
        "description": "**findFirstFile**(*string mask*)  \n**Returns:** *Filesearch handle, string name*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AE6/) / [ru](http://blast.hk/wiki/lua:findFirstFile)*",
        "type": "function"
      },
      "findMaxNumberOfGroupMembers": {
        "description": "**findMaxNumberOfGroupMembers**()  \n**Returns:** *int max*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0956/)*",
        "type": "function"
      },
      "findNextFile": {
        "args": [
          {
            "displayName": "Filesearch handle",
            "name": "handle"
          }
        ],
        "description": "**findNextFile**(*Filesearch handle*)  \n**Returns:** *string file*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AE7/) / [ru](http://blast.hk/wiki/lua:findNextFile)*",
        "type": "function"
      },
      "findNumberTagsTagged": {
        "description": "**findNumberTagsTagged**()  \n**Returns:** *int num*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E1/)*",
        "type": "function"
      },
      "findTrainDirection": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**findTrainDirection**(*Vehicle train*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E3/)*",
        "type": "function"
      },
      "finishSettingUpConversation": {
        "description": "**finishSettingUpConversation**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0719/)*",
        "type": "function"
      },
      "finishSettingUpConversationNoSubtitles": {
        "description": "**finishSettingUpConversationNoSubtitles**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A47/)*",
        "type": "function"
      },
      "fireHunterGun": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**fireHunterGun**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0541/)*",
        "type": "function"
      },
      "fireSingleBullet": {
        "args": [
          {
            "displayName": "float fromX",
            "name": "fromX"
          },
          {
            "displayName": "float fromY",
            "name": "fromY"
          },
          {
            "displayName": "float fromZ",
            "name": "fromZ"
          },
          {
            "displayName": "float targetX",
            "name": "targetX"
          },
          {
            "displayName": "float targetY",
            "name": "targetY"
          },
          {
            "displayName": "float targetZ",
            "name": "targetZ"
          },
          {
            "displayName": "int energy",
            "name": "energy"
          }
        ],
        "description": "**fireSingleBullet**(*float fromX, float fromY, float fromZ, float targetX, float targetY, float targetZ, int energy*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06BC/)*",
        "type": "function"
      },
      "fixCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**fixCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A30/)*",
        "type": "function"
      },
      "fixCarDoor": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**fixCarDoor**(*Vehicle car, int door*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/068A/)*",
        "type": "function"
      },
      "fixCarPanel": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int componentB",
            "name": "componentB"
          }
        ],
        "description": "**fixCarPanel**(*Vehicle car, int componentB*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0698/)*",
        "type": "function"
      },
      "fixCarTire": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int tire",
            "name": "tire"
          }
        ],
        "description": "**fixCarTire**(*Vehicle car, int tire*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0699/)*",
        "type": "function"
      },
      "flashHudObject": {
        "args": [
          {
            "displayName": "int hudComponent",
            "name": "hudComponent"
          }
        ],
        "description": "**flashHudObject**(*int hudComponent*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E7/)*",
        "type": "function"
      },
      "flushPatrolRoute": {
        "description": "**flushPatrolRoute**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0754/)*",
        "type": "function"
      },
      "flushRoute": {
        "description": "**flushRoute**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D6/)*",
        "type": "function"
      },
      "forceAllVehicleLightsOff": {
        "args": [
          {
            "displayName": "bool off",
            "name": "off"
          }
        ],
        "description": "**forceAllVehicleLightsOff**(*bool off*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A37/)*",
        "type": "function"
      },
      "forceBigMessageAndCounter": {
        "args": [
          {
            "displayName": "bool stayOnScreen",
            "name": "stayOnScreen"
          }
        ],
        "description": "**forceBigMessageAndCounter**(*bool stayOnScreen*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09EE/)*",
        "type": "function"
      },
      "forceCarLights": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int lights",
            "name": "lights"
          }
        ],
        "description": "**forceCarLights**(*Vehicle car, int lights*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/067F/)*",
        "type": "function"
      },
      "forceDeathRestart": {
        "description": "**forceDeathRestart**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0970/)*",
        "type": "function"
      },
      "forceInteriorLightingForPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool force",
            "name": "force"
          }
        ],
        "description": "**forceInteriorLightingForPlayer**(*Player player, bool force*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D7/)*",
        "type": "function"
      },
      "forceWeather": {
        "args": [
          {
            "displayName": "int weather",
            "name": "weather"
          }
        ],
        "description": "**forceWeather**(*int weather*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B5/)*",
        "type": "function"
      },
      "forceWeatherNow": {
        "args": [
          {
            "displayName": "int weather",
            "name": "weather"
          }
        ],
        "description": "**forceWeatherNow**(*int weather*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B6/)*",
        "type": "function"
      },
      "freeDynamicLibrary": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**freeDynamicLibrary**(*int handle*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:freeDynamicLibrary)*",
        "type": "function"
      },
      "freeMemory": {
        "args": [
          {
            "displayName": "int memory",
            "name": "memory"
          }
        ],
        "description": "**freeMemory**(*int memory*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC9/) / [ru](http://blast.hk/wiki/lua:freeMemory)*",
        "type": "function"
      },
      "freeTextures": {
        "description": "**freeTextures**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:freeTextures)*",
        "type": "function"
      },
      "freezeCarPosition": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool locked",
            "name": "locked"
          }
        ],
        "description": "**freezeCarPosition**(*Vehicle car, bool locked*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0519/)*",
        "type": "function"
      },
      "freezeCarPositionAndDontLoadCollision": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool keep",
            "name": "keep"
          }
        ],
        "description": "**freezeCarPositionAndDontLoadCollision**(*Vehicle car, bool keep*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0574/)*",
        "type": "function"
      },
      "freezeCharPosition": {
        "args": [
          {
            "displayName": "int set",
            "name": "set"
          },
          {
            "displayName": "bool locked",
            "name": "locked"
          }
        ],
        "description": "**freezeCharPosition**(*int set, bool locked*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D7/) / [ru](http://blast.hk/wiki/opcodes:04D7)*",
        "type": "function"
      },
      "freezeCharPositionAndDontLoadCollision": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool keep",
            "name": "keep"
          }
        ],
        "description": "**freezeCharPositionAndDontLoadCollision**(*Ped ped, bool keep*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0575/)*",
        "type": "function"
      },
      "freezeObjectPosition": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool freeze",
            "name": "freeze"
          }
        ],
        "description": "**freezeObjectPosition**(*Object object, bool freeze*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0550/)*",
        "type": "function"
      },
      "freezeOnscreenTimer": {
        "args": [
          {
            "displayName": "bool timer",
            "name": "timer"
          }
        ],
        "description": "**freezeOnscreenTimer**(*bool timer*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0396/)*",
        "type": "function"
      },
      "gameClock": {
        "description": "**gameClock**()  \n**Returns:** *double time*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:gameClock)*",
        "type": "function"
      },
      "get2dLinesIntersectPoint": {
        "args": [
          {
            "displayName": "float l1x1",
            "name": "l1x1"
          },
          {
            "displayName": "float l1y1",
            "name": "l1y1"
          },
          {
            "displayName": "float l1x2",
            "name": "l1x2"
          },
          {
            "displayName": "float l1y2",
            "name": "l1y2"
          },
          {
            "displayName": "float l2x1",
            "name": "l2x1"
          },
          {
            "displayName": "float l2y1",
            "name": "l2y1"
          },
          {
            "displayName": "float l2x2",
            "name": "l2x2"
          },
          {
            "displayName": "float l2y2",
            "name": "l2y2"
          }
        ],
        "description": "**get2dLinesIntersectPoint**(*float l1x1, float l1y1, float l1x2, float l1y2, float l2x1, float l2y1, float l2x2, float l2y2*)  \n**Returns:** *bool result, float X, float Y*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05B0/)*",
        "type": "function"
      },
      "getActiveCameraCoordinates": {
        "description": "**getActiveCameraCoordinates**()  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/068D/)*",
        "type": "function"
      },
      "getActiveCameraPointAt": {
        "description": "**getActiveCameraPointAt**()  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/068E/)*",
        "type": "function"
      },
      "getActiveInterior": {
        "description": "**getActiveInterior**()  \n**Returns:** *int interior*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/077E/) / [ru](http://blast.hk/wiki/opcodes:077E)*",
        "type": "function"
      },
      "getAmmoInCharWeapon": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int int",
            "name": "int"
          }
        ],
        "description": "**getAmmoInCharWeapon**(*Ped ped, int int*)  \n**Returns:** *int ammo*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/041A/)*",
        "type": "function"
      },
      "getAngleBetween2dVectors": {
        "args": [
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          }
        ],
        "description": "**getAngleBetween2dVectors**(*float vecX, float vecY, float vecX, float vecY*)  \n**Returns:** *float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A4/)*",
        "type": "function"
      },
      "getAudioStreamLength": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**getAudioStreamLength**(*int handle*)  \n**Returns:** *int length*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AAF/)*",
        "type": "function"
      },
      "getAudioStreamState": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**getAudioStreamState**(*int handle*)  \n**Returns:** *int state*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB9/)*",
        "type": "function"
      },
      "getAudioStreamVolume": {
        "args": [
          {
            "displayName": "int audio",
            "name": "audio"
          }
        ],
        "description": "**getAudioStreamVolume**(*int audio*)  \n**Returns:** *float volume*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ABB/)*",
        "type": "function"
      },
      "getAvailableVehicleMod": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int poolIndex",
            "name": "poolIndex"
          }
        ],
        "description": "**getAvailableVehicleMod**(*Vehicle car, int poolIndex*)  \n**Returns:** *Model itemID*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E5/)*",
        "type": "function"
      },
      "getBeatProximity": {
        "args": [
          {
            "displayName": "int track",
            "name": "track"
          }
        ],
        "description": "**getBeatProximity**(*int track*)  \n**Returns:** *int int2, int int3, int int4*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07B1/)*",
        "type": "function"
      },
      "getBeatTrackStatus": {
        "description": "**getBeatTrackStatus**()  \n**Returns:** *int status*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0953/)*",
        "type": "function"
      },
      "getCameraFov": {
        "description": "**getCameraFov**()  \n**Returns:** *float fov*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0801/)*",
        "type": "function"
      },
      "getCarBlockingCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarBlockingCar**(*Vehicle car*)  \n**Returns:** *int blockingCar*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0987/)*",
        "type": "function"
      },
      "getCarCharIsUsing": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCarCharIsUsing**(*Ped ped*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0811/)*",
        "type": "function"
      },
      "getCarColours": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarColours**(*Vehicle car*)  \n**Returns:** *int primaryColor, int secondaryColor*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03F3/)*",
        "type": "function"
      },
      "getCarCoordinates": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarCoordinates**(*Vehicle car*)  \n**Returns:** *float positionX, float positionY, float positionZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00AA/)*",
        "type": "function"
      },
      "getCarCurrentGear": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarCurrentGear**(*Vehicle car*)  \n**Returns:** *int gear*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB8/) / [ru](http://blast.hk/wiki/lua:getCarCurrentGear)*",
        "type": "function"
      },
      "getCarDoorLockStatus": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarDoorLockStatus**(*Vehicle car*)  \n**Returns:** *int doorStatus*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B3/)*",
        "type": "function"
      },
      "getCarForwardX": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarForwardX**(*Vehicle car*)  \n**Returns:** *float forwardX*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02F8/)*",
        "type": "function"
      },
      "getCarForwardY": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarForwardY**(*Vehicle car*)  \n**Returns:** *float forwardY*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02F9/)*",
        "type": "function"
      },
      "getCarHeading": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarHeading**(*Vehicle car*)  \n**Returns:** *float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0174/)*",
        "type": "function"
      },
      "getCarHealth": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarHealth**(*Vehicle car*)  \n**Returns:** *int health*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0227/) / [ru](http://blast.hk/wiki/opcodes:0227)*",
        "type": "function"
      },
      "getCarMass": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarMass**(*Vehicle car*)  \n**Returns:** *float mass*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06A3/)*",
        "type": "function"
      },
      "getCarModel": {
        "args": [
          {
            "displayName": "int int",
            "name": "int"
          }
        ],
        "description": "**getCarModel**(*int int*)  \n**Returns:** *Model modelId*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0441/)*",
        "type": "function"
      },
      "getCarModelValue": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**getCarModelValue**(*Model modelId*)  \n**Returns:** *int price*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E1/)*",
        "type": "function"
      },
      "getCarMovingComponentOffset": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarMovingComponentOffset**(*Vehicle car*)  \n**Returns:** *float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/098D/)*",
        "type": "function"
      },
      "getCarNumberOfGears": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarNumberOfGears**(*Vehicle car*)  \n**Returns:** *int gears*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB7/) / [ru](http://blast.hk/wiki/lua:getCarNumberOfGears)*",
        "type": "function"
      },
      "getCarPitch": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarPitch**(*Vehicle car*)  \n**Returns:** *float pitch*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/077D/)*",
        "type": "function"
      },
      "getCarPointer": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarPointer**(*Vehicle car*)  \n**Returns:** *int ptr*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A97/) / [ru](http://blast.hk/wiki/lua:getCarPointer)*",
        "type": "function"
      },
      "getCarRoll": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarRoll**(*Vehicle car*)  \n**Returns:** *float roll*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06BE/)*",
        "type": "function"
      },
      "getCarSpeed": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarSpeed**(*Vehicle car*)  \n**Returns:** *float speed*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E3/)*",
        "type": "function"
      },
      "getCarSpeedVector": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarSpeedVector**(*Vehicle car*)  \n**Returns:** *float vecX, float vecY, float vecZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06A2/)*",
        "type": "function"
      },
      "getCarUprightValue": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCarUprightValue**(*Vehicle car*)  \n**Returns:** *float value*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/083F/)*",
        "type": "function"
      },
      "getCharActiveInterior": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharActiveInterior**(*Ped ped*)  \n**Returns:** *int interior*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E8/)*",
        "type": "function"
      },
      "getCharAnimCurrentTime": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**getCharAnimCurrentTime**(*Ped ped, string animation*)  \n**Returns:** *int time*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0613/)*",
        "type": "function"
      },
      "getCharAnimTotalTime": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**getCharAnimTotalTime**(*Ped ped, string animation*)  \n**Returns:** *int totalTime*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/061A/)*",
        "type": "function"
      },
      "getCharArmour": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharArmour**(*Ped ped*)  \n**Returns:** *int armour*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04DD/)*",
        "type": "function"
      },
      "getCharCoordinates": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharCoordinates**(*Ped ped*)  \n**Returns:** *float positionX, float positionY, float positionZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A0/) / [ru](http://blast.hk/wiki/opcodes:00A0)*",
        "type": "function"
      },
      "getCharHeading": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharHeading**(*Ped ped*)  \n**Returns:** *float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0172/) / [ru](http://blast.hk/wiki/opcodes:0172)*",
        "type": "function"
      },
      "getCharHealth": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharHealth**(*Ped ped*)  \n**Returns:** *int health*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0226/) / [ru](http://blast.hk/wiki/opcodes:0226)*",
        "type": "function"
      },
      "getCharHeightAboveGround": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharHeightAboveGround**(*Ped ped*)  \n**Returns:** *float height*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0819/)*",
        "type": "function"
      },
      "getCharHighestPriorityEvent": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharHighestPriorityEvent**(*Ped ped*)  \n**Returns:** *int event*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/080E/)*",
        "type": "function"
      },
      "getCharInCarPassengerSeat": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int seat",
            "name": "seat"
          }
        ],
        "description": "**getCharInCarPassengerSeat**(*Vehicle car, int seat*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0432/)*",
        "type": "function"
      },
      "getCharModel": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharModel**(*Ped ped*)  \n**Returns:** *Model modelId*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0665/)*",
        "type": "function"
      },
      "getCharPlayerIsTargeting": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getCharPlayerIsTargeting**(*Player player*)  \n**Returns:** *bool result, Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AD2/) / [ru](http://blast.hk/wiki/lua:getCharPlayerIsTargeting)*",
        "type": "function"
      },
      "getCharPointer": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharPointer**(*Ped ped*)  \n**Returns:** *int ptr*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A96/) / [ru](http://blast.hk/wiki/lua:getCharPointer)*",
        "type": "function"
      },
      "getCharPointerHandle": {
        "args": [
          {
            "displayName": "int ptr",
            "name": "ptr"
          }
        ],
        "description": "**getCharPointerHandle**(*int ptr*)  \n**Returns:** *Ped handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AEA/) / [ru](http://blast.hk/wiki/lua:getCharPointerHandle)*",
        "type": "function"
      },
      "getCharSpeed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharSpeed**(*Ped ped*)  \n**Returns:** *float speed*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06AC/)*",
        "type": "function"
      },
      "getCharSwimState": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharSwimState**(*Ped ped*)  \n**Returns:** *int status*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0966/)*",
        "type": "function"
      },
      "getCharVelocity": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCharVelocity**(*Ped ped*)  \n**Returns:** *float vecX, float vecY, float vecZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/083D/)*",
        "type": "function"
      },
      "getCharWeaponInSlot": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int slot",
            "name": "slot"
          }
        ],
        "description": "**getCharWeaponInSlot**(*Ped ped, int slot*)  \n**Returns:** *int weapon, int ammo, Model modelId*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04B8/)*",
        "type": "function"
      },
      "getCityFromCoords": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**getCityFromCoords**(*float X, float Y, float Z*)  \n**Returns:** *int city*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07EF/)*",
        "type": "function"
      },
      "getCityPlayerIsIn": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getCityPlayerIsIn**(*Player player*)  \n**Returns:** *int city*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0842/)*",
        "type": "function"
      },
      "getCleoLibraryVersion": {
        "description": "**getCleoLibraryVersion**()  \n**Returns:** *int version*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C92)*",
        "type": "function"
      },
      "getCleoSharedVar": {
        "args": [
          {
            "displayName": "int var",
            "name": "var"
          }
        ],
        "description": "**getCleoSharedVar**(*int var*)  \n**Returns:** *int value*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB4/)*",
        "type": "function"
      },
      "getClipboardText": {
        "description": "**getClipboardText**()  \n**Returns:** *string text*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getClipboardText)*",
        "type": "function"
      },
      "getClosestCarNode": {
        "args": [
          {
            "displayName": "float closestToX",
            "name": "closestToX"
          },
          {
            "displayName": "float closestToY",
            "name": "closestToY"
          },
          {
            "displayName": "float closestToZ",
            "name": "closestToZ"
          }
        ],
        "description": "**getClosestCarNode**(*float closestToX, float closestToY, float closestToZ*)  \n**Returns:** *float nodeX, float nodeY, float nodeZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02C1/)*",
        "type": "function"
      },
      "getClosestCarNodeWithHeading": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**getClosestCarNodeWithHeading**(*float X, float Y, float Z*)  \n**Returns:** *float nodeX, float nodeY, float nodeZ, float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D3/)*",
        "type": "function"
      },
      "getClosestCharNode": {
        "args": [
          {
            "displayName": "float closestToX",
            "name": "closestToX"
          },
          {
            "displayName": "float closestToY",
            "name": "closestToY"
          },
          {
            "displayName": "float closestToZ",
            "name": "closestToZ"
          }
        ],
        "description": "**getClosestCharNode**(*float closestToX, float closestToY, float closestToZ*)  \n**Returns:** *float nodeX, float nodeY, float nodeZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02C0/)*",
        "type": "function"
      },
      "getClosestStealableObject": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**getClosestStealableObject**(*float X, float Y, float Z, float radius*)  \n**Returns:** *Object object*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0866/)*",
        "type": "function"
      },
      "getClosestStraightRoad": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float height",
            "name": "height"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**getClosestStraightRoad**(*float atX, float atY, float atZ, float height, float radius*)  \n**Returns:** *float float6, float float7, float float8, float float9, float float10, float float11, float float12*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04B9/)*",
        "type": "function"
      },
      "getClothesItem": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int bodypart",
            "name": "bodypart"
          }
        ],
        "description": "**getClothesItem**(*Player player, int bodypart*)  \n**Returns:** *int textureCRC, int modelCRC*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F7/)*",
        "type": "function"
      },
      "getCollectable1sCollected": {
        "description": "**getCollectable1sCollected**()  \n**Returns:** *int collected*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E1/)*",
        "type": "function"
      },
      "getControllerMode": {
        "description": "**getControllerMode**()  \n**Returns:** *int mode*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0293/)*",
        "type": "function"
      },
      "getCurrentCarMod": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int slot",
            "name": "slot"
          }
        ],
        "description": "**getCurrentCarMod**(*Vehicle car, int slot*)  \n**Returns:** *Model modelId*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/096D/)*",
        "type": "function"
      },
      "getCurrentCharWeapon": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getCurrentCharWeapon**(*Ped ped*)  \n**Returns:** *int weapon*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0470/) / [ru](http://blast.hk/wiki/opcodes:0470)*",
        "type": "function"
      },
      "getCurrentDate": {
        "description": "**getCurrentDate**()  \n**Returns:** *int day, int month*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0835/)*",
        "type": "function"
      },
      "getCurrentDayOfWeek": {
        "description": "**getCurrentDayOfWeek**()  \n**Returns:** *int weekday*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07D0/)*",
        "type": "function"
      },
      "getCurrentLanguage": {
        "description": "**getCurrentLanguage**()  \n**Returns:** *int language*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09FB/)*",
        "type": "function"
      },
      "getCurrentPopulationZoneType": {
        "description": "**getCurrentPopulationZoneType**()  \n**Returns:** *int popcycle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D3/)*",
        "type": "function"
      },
      "getCurrentVehiclePaintjob": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getCurrentVehiclePaintjob**(*Vehicle car*)  \n**Returns:** *int paintjob*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0988/)*",
        "type": "function"
      },
      "getCursorPos": {
        "description": "**getCursorPos**()  \n**Returns:** *int posX, int posY*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getCursorPos)*",
        "type": "function"
      },
      "getCutsceneOffset": {
        "description": "**getCutsceneOffset**()  \n**Returns:** *bool result, float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D1/)*",
        "type": "function"
      },
      "getCutsceneTime": {
        "description": "**getCutsceneTime**()  \n**Returns:** *int time*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E8/)*",
        "type": "function"
      },
      "getDeadCharCoordinates": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getDeadCharCoordinates**(*Ped ped*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0889/)*",
        "type": "function"
      },
      "getDeadCharPickupCoords": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getDeadCharPickupCoords**(*Ped ped*)  \n**Returns:** *float coordsX, float coordsY, float coordsZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04A5/)*",
        "type": "function"
      },
      "getDebugCameraCoordinates": {
        "description": "**getDebugCameraCoordinates**()  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0454/)*",
        "type": "function"
      },
      "getDebugCameraPointAt": {
        "description": "**getDebugCameraPointAt**()  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0463/)*",
        "type": "function"
      },
      "getDistanceBetweenCoords2d": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          }
        ],
        "description": "**getDistanceBetweenCoords2d**(*float x1, float y1, float x2, float y2*)  \n**Returns:** *float distance*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0509/)*",
        "type": "function"
      },
      "getDistanceBetweenCoords3d": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          }
        ],
        "description": "**getDistanceBetweenCoords3d**(*float x1, float y1, float z1, float x2, float y2, float z2*)  \n**Returns:** *float distance*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/050A/) / [ru](http://blast.hk/wiki/opcodes:050A)*",
        "type": "function"
      },
      "getDoorAngleRatio": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**getDoorAngleRatio**(*Vehicle car, int door*)  \n**Returns:** *float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/095F/)*",
        "type": "function"
      },
      "getDriverOfCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getDriverOfCar**(*Vehicle car*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/046C/) / [ru](http://blast.hk/wiki/opcodes:046C)*",
        "type": "function"
      },
      "getDynamicLibraryProcedure": {
        "args": [
          {
            "displayName": "string proc",
            "name": "proc"
          },
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**getDynamicLibraryProcedure**(*string proc, int handle*)  \n**Returns:** *bool result, int proc*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getDynamicLibraryProcedure)*",
        "type": "function"
      },
      "getExtraCarColours": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getExtraCarColours**(*Vehicle car*)  \n**Returns:** *int tertiaryColor, int quaternaryColor*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A12/)*",
        "type": "function"
      },
      "getFadingStatus": {
        "description": "**getFadingStatus**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/016B/)*",
        "type": "function"
      },
      "getFloatStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          }
        ],
        "description": "**getFloatStat**(*int stat*)  \n**Returns:** *float stat*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0653/)*",
        "type": "function"
      },
      "getFreeGxtKey": {
        "description": "**getFreeGxtKey**()  \n**Returns:** *string key*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getFreeGxtKey)*",
        "type": "function"
      },
      "getGameDirectory": {
        "description": "**getGameDirectory**()  \n**Returns:** *string path*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getGameDirectory)*",
        "type": "function"
      },
      "getGameGlobal": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          }
        ],
        "description": "**getGameGlobal**(*int index*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getGameGlobal)*",
        "type": "function"
      },
      "getGameGlobalPtr": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          }
        ],
        "description": "**getGameGlobalPtr**(*int index*)  \n**Returns:** *int ptr*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getGameGlobalPtr)*",
        "type": "function"
      },
      "getGameTimer": {
        "description": "**getGameTimer**()  \n**Returns:** *int timeMs*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01BD/)*",
        "type": "function"
      },
      "getGameVersion": {
        "description": "**getGameVersion**()  \n**Returns:** *int version*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getGameVersion)*",
        "type": "function"
      },
      "getGroundZFor3dCoord": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**getGroundZFor3dCoord**(*float atX, float atY, float atZ*)  \n**Returns:** *float z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02CE/)*",
        "type": "function"
      },
      "getGroupMember": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "int member",
            "name": "member"
          }
        ],
        "description": "**getGroupMember**(*int group, int member*)  \n**Returns:** *int handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/092B/)*",
        "type": "function"
      },
      "getGroupSize": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**getGroupSize**(*int group*)  \n**Returns:** *int numberOfLeaders, int numberOfMembers*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F6/)*",
        "type": "function"
      },
      "getGxtText": {
        "args": [
          {
            "displayName": "string key",
            "name": "key"
          }
        ],
        "description": "**getGxtText**(*string key*)  \n**Returns:** *string text*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getGxtText)*",
        "type": "function"
      },
      "getHashKey": {
        "args": [
          {
            "displayName": "string string",
            "name": "string"
          }
        ],
        "description": "**getHashKey**(*string string*)  \n**Returns:** *int CRC32*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A9/)*",
        "type": "function"
      },
      "getHavocCausedByPlayer": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          }
        ],
        "description": "**getHavocCausedByPlayer**(*int int1*)  \n**Returns:** *int int2*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04BF/)*",
        "type": "function"
      },
      "getHeadingFromVector2d": {
        "args": [
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          }
        ],
        "description": "**getHeadingFromVector2d**(*float pX, float pY*)  \n**Returns:** *float zAngle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0604/)*",
        "type": "function"
      },
      "getHudColour": {
        "args": [
          {
            "displayName": "int interface",
            "name": "interface"
          }
        ],
        "description": "**getHudColour**(*int interface*)  \n**Returns:** *int r, int g, int b, int a*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0904/)*",
        "type": "function"
      },
      "getIntStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          }
        ],
        "description": "**getIntStat**(*int stat*)  \n**Returns:** *int stat*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0652/)*",
        "type": "function"
      },
      "getItemInShop": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          }
        ],
        "description": "**getItemInShop**(*int index*)  \n**Returns:** *int item*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0760/)*",
        "type": "function"
      },
      "getLevelDesignCoordsForObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int spoot",
            "name": "spoot"
          }
        ],
        "description": "**getLevelDesignCoordsForObject**(*Object object, int spoot*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/080A/)*",
        "type": "function"
      },
      "getLoadedShop": {
        "description": "**getLoadedShop**()  \n**Returns:** *GxtString shop*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07B0/)*",
        "type": "function"
      },
      "getMaxWantedLevel": {
        "description": "**getMaxWantedLevel**()  \n**Returns:** *int level*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/050F/)*",
        "type": "function"
      },
      "getMaximumNumberOfPassengers": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getMaximumNumberOfPassengers**(*Vehicle car*)  \n**Returns:** *int maxPassengers*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01EA/)*",
        "type": "function"
      },
      "getMenuItemAccepted": {
        "args": [
          {
            "displayName": "int menu",
            "name": "menu"
          }
        ],
        "description": "**getMenuItemAccepted**(*int menu*)  \n**Returns:** *int item*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D8/)*",
        "type": "function"
      },
      "getMenuItemSelected": {
        "args": [
          {
            "displayName": "int menu",
            "name": "menu"
          }
        ],
        "description": "**getMenuItemSelected**(*int menu*)  \n**Returns:** *int item*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D7/)*",
        "type": "function"
      },
      "getMinutesToTimeOfDay": {
        "args": [
          {
            "displayName": "int hours",
            "name": "hours"
          },
          {
            "displayName": "int minutes",
            "name": "minutes"
          }
        ],
        "description": "**getMinutesToTimeOfDay**(*int hours, int minutes*)  \n**Returns:** *int minutes*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00C1/)*",
        "type": "function"
      },
      "getModelDimensions": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**getModelDimensions**(*Model modelId*)  \n**Returns:** *float x1, float y1, float z1, float x2, float y2, float z2*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E4/)*",
        "type": "function"
      },
      "getModuleHandle": {
        "args": [
          {
            "displayName": "string module",
            "name": "module"
          }
        ],
        "description": "**getModuleHandle**(*string module*)  \n**Returns:** *int handle*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getModuleHandle)*",
        "type": "function"
      },
      "getModuleProcAddress": {
        "args": [
          {
            "displayName": "string module",
            "name": "module"
          },
          {
            "displayName": "string proc",
            "name": "proc"
          }
        ],
        "description": "**getModuleProcAddress**(*string module, string proc*)  \n**Returns:** *int address*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getModuleProcAddress)*",
        "type": "function"
      },
      "getMoonloaderVersion": {
        "description": "**getMoonloaderVersion**()  \n**Returns:** *int version*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getMoonloaderVersion)*",
        "type": "function"
      },
      "getMousewheelDelta": {
        "description": "**getMousewheelDelta**()  \n**Returns:** *int delta*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getMousewheelDelta)*",
        "type": "function"
      },
      "getNameOfEntryExitCharUsed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getNameOfEntryExitCharUsed**(*Ped ped*)  \n**Returns:** *GxtString interiorName*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/094B/)*",
        "type": "function"
      },
      "getNameOfInfoZone": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**getNameOfInfoZone**(*float atX, float atY, float atZ*)  \n**Returns:** *GxtString nameB*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F1/)*",
        "type": "function"
      },
      "getNameOfItem": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          }
        ],
        "description": "**getNameOfItem**(*int item*)  \n**Returns:** *GxtString name*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/078C/)*",
        "type": "function"
      },
      "getNameOfVehicleModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**getNameOfVehicleModel**(*Model modelId*)  \n**Returns:** *GxtString name*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ADB/) / [ru](http://blast.hk/wiki/lua:getNameOfVehicleModel)*",
        "type": "function"
      },
      "getNameOfZone": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**getNameOfZone**(*float X, float Y, float Z*)  \n**Returns:** *GxtString name*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0843/)*",
        "type": "function"
      },
      "getNearestTagPosition": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**getNearestTagPosition**(*float X, float Y, float Z*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A6/)*",
        "type": "function"
      },
      "getNthClosestCarNode": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**getNthClosestCarNode**(*float X, float Y, float Z, int type*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D3/)*",
        "type": "function"
      },
      "getNthClosestCarNodeWithHeading": {
        "args": [
          {
            "displayName": "float forX",
            "name": "forX"
          },
          {
            "displayName": "float forY",
            "name": "forY"
          },
          {
            "displayName": "float forZ",
            "name": "forZ"
          },
          {
            "displayName": "int direction",
            "name": "direction"
          }
        ],
        "description": "**getNthClosestCarNodeWithHeading**(*float forX, float forY, float forZ, int direction*)  \n**Returns:** *float X, float Y, float Z, float ZAngle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06F8/)*",
        "type": "function"
      },
      "getNumAvailablePaintjobs": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getNumAvailablePaintjobs**(*Vehicle car*)  \n**Returns:** *int num*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06EC/)*",
        "type": "function"
      },
      "getNumCarColours": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getNumCarColours**(*Vehicle car*)  \n**Returns:** *int colours*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/097D/)*",
        "type": "function"
      },
      "getNumOfModelsKilledByPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**getNumOfModelsKilledByPlayer**(*Player player, Model modelId*)  \n**Returns:** *int quantity*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0298/)*",
        "type": "function"
      },
      "getNumberOfFiresInArea": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          }
        ],
        "description": "**getNumberOfFiresInArea**(*float x1, float y1, float z1, float x2, float y2, float z2*)  \n**Returns:** *int num*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0786/)*",
        "type": "function"
      },
      "getNumberOfFiresInRange": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**getNumberOfFiresInRange**(*float atX, float atY, float atZ, float radius*)  \n**Returns:** *int num*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C3/)*",
        "type": "function"
      },
      "getNumberOfFollowers": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getNumberOfFollowers**(*Ped ped*)  \n**Returns:** *int followers*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/046D/)*",
        "type": "function"
      },
      "getNumberOfInstancesOfStreamedScript": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          }
        ],
        "description": "**getNumberOfInstancesOfStreamedScript**(*int externalScript*)  \n**Returns:** *int value*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0926/)*",
        "type": "function"
      },
      "getNumberOfItemsInShop": {
        "description": "**getNumberOfItemsInShop**()  \n**Returns:** *int num*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/075F/)*",
        "type": "function"
      },
      "getNumberOfPassengers": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getNumberOfPassengers**(*Vehicle car*)  \n**Returns:** *bool result, int passengers*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01E9/)*",
        "type": "function"
      },
      "getObjectAnimCurrentTime": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**getObjectAnimCurrentTime**(*Object object, string animation*)  \n**Returns:** *float progress*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0839/)*",
        "type": "function"
      },
      "getObjectCoordinates": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectCoordinates**(*Object object*)  \n**Returns:** *bool result, float positionX, float positionY, float positionZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01BB/)*",
        "type": "function"
      },
      "getObjectHeading": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectHeading**(*Object object*)  \n**Returns:** *float angle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0176/)*",
        "type": "function"
      },
      "getObjectHealth": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectHealth**(*Object object*)  \n**Returns:** *int health*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/071E/)*",
        "type": "function"
      },
      "getObjectMass": {
        "args": [
          {
            "displayName": "int int",
            "name": "int"
          }
        ],
        "description": "**getObjectMass**(*int int*)  \n**Returns:** *float mass*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0907/)*",
        "type": "function"
      },
      "getObjectModel": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectModel**(*Object object*)  \n**Returns:** *Model modelId*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0984/)*",
        "type": "function"
      },
      "getObjectPointer": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectPointer**(*Object object*)  \n**Returns:** *int struct*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A98/) / [ru](http://blast.hk/wiki/lua:getObjectPointer)*",
        "type": "function"
      },
      "getObjectPointerHandle": {
        "args": [
          {
            "displayName": "int ptr",
            "name": "ptr"
          }
        ],
        "description": "**getObjectPointerHandle**(*int ptr*)  \n**Returns:** *Object handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AEC/) / [ru](http://blast.hk/wiki/lua:getObjectPointerHandle)*",
        "type": "function"
      },
      "getObjectQuaternion": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectQuaternion**(*Object object*)  \n**Returns:** *float x, float y, float z, float w*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C3/)*",
        "type": "function"
      },
      "getObjectRotationVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectRotationVelocity**(*Object object*)  \n**Returns:** *float axisX, float axisY, float axisZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A6/)*",
        "type": "function"
      },
      "getObjectSpeed": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectSpeed**(*Object object*)  \n**Returns:** *float speed*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A8/)*",
        "type": "function"
      },
      "getObjectTurnMass": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectTurnMass**(*Object object*)  \n**Returns:** *float turnMass*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0909/)*",
        "type": "function"
      },
      "getObjectVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**getObjectVelocity**(*Object object*)  \n**Returns:** *float vecX, float vecY, float vecZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/059F/)*",
        "type": "function"
      },
      "getOffsetFromCarInWorldCoords": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          }
        ],
        "description": "**getOffsetFromCarInWorldCoords**(*Vehicle car, float offsetX, float offsetY, float offsetZ*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0407/)*",
        "type": "function"
      },
      "getOffsetFromCharInWorldCoords": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          }
        ],
        "description": "**getOffsetFromCharInWorldCoords**(*Ped ped, float offsetX, float offsetY, float offsetZ*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04C4/)*",
        "type": "function"
      },
      "getOffsetFromObjectInWorldCoords": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          }
        ],
        "description": "**getOffsetFromObjectInWorldCoords**(*Object object, float offsetX, float offsetY, float offsetZ*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0400/)*",
        "type": "function"
      },
      "getPadState": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**getPadState**(*Player player, int key*)  \n**Returns:** *int state*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00E2/)*",
        "type": "function"
      },
      "getParkingNodeInArea": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          }
        ],
        "description": "**getParkingNodeInArea**(*float x1, float y1, float z1, float x2, float y2, float z2*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0810/)*",
        "type": "function"
      },
      "getPcMouseMovement": {
        "description": "**getPcMouseMovement**()  \n**Returns:** *float x, float y*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A4A/)*",
        "type": "function"
      },
      "getPedType": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getPedType**(*Ped ped*)  \n**Returns:** *int pedtype*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/089F/)*",
        "type": "function"
      },
      "getPercentageTaggedInArea": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          }
        ],
        "description": "**getPercentageTaggedInArea**(*float x1, float y1, float x2, float y2*)  \n**Returns:** *int percentage*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0702/)*",
        "type": "function"
      },
      "getPickupCoordinates": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          }
        ],
        "description": "**getPickupCoordinates**(*Pickup pickup*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/065B/)*",
        "type": "function"
      },
      "getPlaneUndercarriagePosition": {
        "args": [
          {
            "displayName": "int plane",
            "name": "plane"
          }
        ],
        "description": "**getPlaneUndercarriagePosition**(*int plane*)  \n**Returns:** *int landingGearStatus*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/091F/)*",
        "type": "function"
      },
      "getPlayerChar": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getPlayerChar**(*Player player*)  \n**Returns:** *bool result, Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F5/)*",
        "type": "function"
      },
      "getPlayerGroup": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getPlayerGroup**(*Player player*)  \n**Returns:** *int group*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07AF/)*",
        "type": "function"
      },
      "getPlayerInCarCameraMode": {
        "description": "**getPlayerInCarCameraMode**()  \n**Returns:** *int mode*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A39/)*",
        "type": "function"
      },
      "getPlayerMaxArmour": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getPlayerMaxArmour**(*Player player*)  \n**Returns:** *int maxArmour*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0945/)*",
        "type": "function"
      },
      "getPlayerMoney": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getPlayerMoney**(*Player player*)  \n**Returns:** *int money*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/010B/) / [ru](http://blast.hk/wiki/opcodes:010B)*",
        "type": "function"
      },
      "getPositionOfAnalogueSticks": {
        "args": [
          {
            "displayName": "int joystick",
            "name": "joystick"
          }
        ],
        "description": "**getPositionOfAnalogueSticks**(*int joystick*)  \n**Returns:** *int offset1, int offset2, int offset3, int offset4*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0494/)*",
        "type": "function"
      },
      "getPositionOfEntryExitCharUsed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getPositionOfEntryExitCharUsed**(*Ped ped*)  \n**Returns:** *float coordX, float coordY, float coordZ, int number*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/094C/)*",
        "type": "function"
      },
      "getPriceOfItem": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          }
        ],
        "description": "**getPriceOfItem**(*int item*)  \n**Returns:** *int price*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0761/)*",
        "type": "function"
      },
      "getProgressPercentage": {
        "description": "**getProgressPercentage**()  \n**Returns:** *float progress*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/058C/)*",
        "type": "function"
      },
      "getRadioChannel": {
        "description": "**getRadioChannel**()  \n**Returns:** *int radio*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/051E/)*",
        "type": "function"
      },
      "getRandomCarInSphereNoSave": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int model",
            "name": "model"
          }
        ],
        "description": "**getRandomCarInSphereNoSave**(*float X, float Y, float Z, float radius, int model*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/073E/)*",
        "type": "function"
      },
      "getRandomCarModelInMemory": {
        "args": [
          {
            "displayName": "bool unk",
            "name": "unk"
          }
        ],
        "description": "**getRandomCarModelInMemory**(*bool unk*)  \n**Returns:** *Model modelId, int class*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B2/)*",
        "type": "function"
      },
      "getRandomCarOfTypeInAngledAreaNoSave": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "int int6",
            "name": "int6"
          }
        ],
        "description": "**getRandomCarOfTypeInAngledAreaNoSave**(*float x1, float y1, float x2, float y2, float angle, int int6*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C0/)*",
        "type": "function"
      },
      "getRandomCarOfTypeInArea": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**getRandomCarOfTypeInArea**(*float cornerAX, float cornerAY, float cornerBX, float cornerBY, Model modelId*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0327/)*",
        "type": "function"
      },
      "getRandomCarOfTypeInAreaNoSave": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**getRandomCarOfTypeInAreaNoSave**(*float x1, float y1, float x2, float y2, Model modelId*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/053E/)*",
        "type": "function"
      },
      "getRandomCharInAreaOffsetNoSave": {
        "args": [
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          }
        ],
        "description": "**getRandomCharInAreaOffsetNoSave**(*float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A3E/)*",
        "type": "function"
      },
      "getRandomCharInSphere": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool pedtypeCivilian",
            "name": "pedtypeCivilian"
          },
          {
            "displayName": "bool gang",
            "name": "gang"
          },
          {
            "displayName": "bool prostitute",
            "name": "prostitute"
          }
        ],
        "description": "**getRandomCharInSphere**(*float X, float Y, float Z, float radius, bool pedtypeCivilian, bool gang, bool prostitute*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/073F/)*",
        "type": "function"
      },
      "getRandomCharInSphereNoBrain": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**getRandomCharInSphereNoBrain**(*float X, float Y, float Z, float radius*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E5/)*",
        "type": "function"
      },
      "getRandomCharInSphereOnlyDrugsBuyers": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**getRandomCharInSphereOnlyDrugsBuyers**(*float X, float Y, float Z, float radius*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/089E/)*",
        "type": "function"
      },
      "getRandomCharInZone": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "bool pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "bool gang",
            "name": "gang"
          },
          {
            "displayName": "bool criminal_prostitute",
            "name": "criminal_prostitute"
          }
        ],
        "description": "**getRandomCharInZone**(*GxtString zone, bool pedtype, bool gang, bool criminal_prostitute*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02DD/)*",
        "type": "function"
      },
      "getRandomCopInArea": {
        "args": [
          {
            "displayName": "float float1",
            "name": "float1"
          },
          {
            "displayName": "float float2",
            "name": "float2"
          },
          {
            "displayName": "float float3",
            "name": "float3"
          },
          {
            "displayName": "float float4",
            "name": "float4"
          },
          {
            "displayName": "bool int5",
            "name": "int5"
          },
          {
            "displayName": "bool int6",
            "name": "int6"
          },
          {
            "displayName": "bool int7",
            "name": "int7"
          },
          {
            "displayName": "bool int8",
            "name": "int8"
          },
          {
            "displayName": "bool int9",
            "name": "int9"
          }
        ],
        "description": "**getRandomCopInArea**(*float float1, float float2, float float3, float float4, bool int5, bool int6, bool int7, bool int8, bool int9*)  \n**Returns:** *int int10*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0469/)*",
        "type": "function"
      },
      "getRemoteControlledCar": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getRemoteControlledCar**(*Player player*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0484/)*",
        "type": "function"
      },
      "getRidOfPlayerProstitute": {
        "description": "**getRidOfPlayerProstitute**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A43/)*",
        "type": "function"
      },
      "getRopeHeightForObject": {
        "args": [
          {
            "displayName": "int magnet",
            "name": "magnet"
          }
        ],
        "description": "**getRopeHeightForObject**(*int magnet*)  \n**Returns:** *float length*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0796/)*",
        "type": "function"
      },
      "getSampfuncsGlobalVar": {
        "args": [
          {
            "displayName": "zstring var",
            "name": "var"
          }
        ],
        "description": "**getSampfuncsGlobalVar**(*zstring var*)  \n**Returns:** *bool result, int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BFD)*",
        "type": "function"
      },
      "getSampfuncsGlobalVarAccessForThread": {
        "args": [
          {
            "displayName": "zstring var",
            "name": "var"
          },
          {
            "displayName": "int thread",
            "name": "thread"
          }
        ],
        "description": "**getSampfuncsGlobalVarAccessForThread**(*zstring var, int thread*)  \n**Returns:** *int read, int write*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C61)*",
        "type": "function"
      },
      "getScmThreadLocalVar": {
        "args": [
          {
            "displayName": "int thread",
            "name": "thread"
          },
          {
            "displayName": "int var",
            "name": "var"
          }
        ],
        "description": "**getScmThreadLocalVar**(*int thread, int var*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C6D)*",
        "type": "function"
      },
      "getScmThreadStructNamed": {
        "args": [
          {
            "displayName": "GxtString thread",
            "name": "thread"
          }
        ],
        "description": "**getScmThreadStructNamed**(*GxtString thread*)  \n**Returns:** *int handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AAA/)*",
        "type": "function"
      },
      "getScreenResolution": {
        "description": "**getScreenResolution**()  \n**Returns:** *int resX, int resY*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B5A)*",
        "type": "function"
      },
      "getScriptFireCoords": {
        "args": [
          {
            "displayName": "int fire",
            "name": "fire"
          }
        ],
        "description": "**getScriptFireCoords**(*int fire*)  \n**Returns:** *float X, float Y, float Z*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06F5/)*",
        "type": "function"
      },
      "getScriptTaskStatus": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int task",
            "name": "task"
          }
        ],
        "description": "**getScriptTaskStatus**(*Ped ped, int task*)  \n**Returns:** *int status*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/062E/)*",
        "type": "function"
      },
      "getSequenceProgress": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getSequenceProgress**(*Ped ped*)  \n**Returns:** *int progess*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0646/)*",
        "type": "function"
      },
      "getSequenceProgressRecursive": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**getSequenceProgressRecursive**(*Ped ped*)  \n**Returns:** *int unkProgress1, int unkProgress2*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A4/)*",
        "type": "function"
      },
      "getShoppingExtraInfo": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**getShoppingExtraInfo**(*int item, int flag*)  \n**Returns:** *int info*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0783/)*",
        "type": "function"
      },
      "getSoundLevelAtCoords": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**getSoundLevelAtCoords**(*Ped ped, float X, float Y, float Z*)  \n**Returns:** *float level*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0855/)*",
        "type": "function"
      },
      "getStringWidth": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**getStringWidth**(*GxtString gxtString*)  \n**Returns:** *int width*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09FD/)*",
        "type": "function"
      },
      "getStringWidthWithNumber": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int number",
            "name": "number"
          }
        ],
        "description": "**getStringWidthWithNumber**(*GxtString gxtString, int number*)  \n**Returns:** *int width*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A08/)*",
        "type": "function"
      },
      "getStructElement": {
        "args": [
          {
            "displayName": "int struct",
            "name": "struct"
          },
          {
            "displayName": "int offset",
            "name": "offset"
          },
          {
            "displayName": "int size",
            "name": "size"
          },
          {
            "displayName": "[bool unprotect=false]",
            "name": "unprotect"
          }
        ],
        "description": "**getStructElement**(*int struct, int offset, int size, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getStructElement)*",
        "type": "function"
      },
      "getStructFloatElement": {
        "args": [
          {
            "displayName": "int struct",
            "name": "struct"
          },
          {
            "displayName": "int offset",
            "name": "offset"
          },
          {
            "displayName": "[bool unprotect=false]",
            "name": "unprotect"
          }
        ],
        "description": "**getStructFloatElement**(*int struct, int offset, [bool unprotect=false]*)  \n**Returns:** *float value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getStructFloatElement)*",
        "type": "function"
      },
      "getTargetBlipCoordinates": {
        "description": "**getTargetBlipCoordinates**()  \n**Returns:** *bool result, float posX, float posY, float posZ*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB6/) / [ru](http://blast.hk/wiki/lua:getTargetBlipCoordinates)*",
        "type": "function"
      },
      "getTerritoryUnderControlPercentage": {
        "description": "**getTerritoryUnderControlPercentage**()  \n**Returns:** *int percentage*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E2/)*",
        "type": "function"
      },
      "getTimeOfDay": {
        "description": "**getTimeOfDay**()  \n**Returns:** *int hours, int mins*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00BF/)*",
        "type": "function"
      },
      "getTotalNumberOfPedsKilledByPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getTotalNumberOfPedsKilledByPlayer**(*Player player*)  \n**Returns:** *int number*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0806/)*",
        "type": "function"
      },
      "getTrainCaboose": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**getTrainCaboose**(*Vehicle train*)  \n**Returns:** *int caboose*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06DE/)*",
        "type": "function"
      },
      "getTrainCarriage": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          },
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**getTrainCarriage**(*Vehicle train, int handle*)  \n**Returns:** *int carriage*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/078A/)*",
        "type": "function"
      },
      "getUserOfClosestMapAttractor": {
        "args": [
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "string externalScriptNamed",
            "name": "externalScriptNamed"
          }
        ],
        "description": "**getUserOfClosestMapAttractor**(*float sphereX, float sphereY, float sphereZ, float radius, Model modelId, string externalScriptNamed*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/091C/)*",
        "type": "function"
      },
      "getVehicleClass": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getVehicleClass**(*Vehicle car*)  \n**Returns:** *int class*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08EC/)*",
        "type": "function"
      },
      "getVehicleModType": {
        "args": [
          {
            "displayName": "Model component",
            "name": "component"
          }
        ],
        "description": "**getVehicleModType**(*Model component*)  \n**Returns:** *int type*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E6/)*",
        "type": "function"
      },
      "getVehiclePointerHandle": {
        "args": [
          {
            "displayName": "int ptr",
            "name": "ptr"
          }
        ],
        "description": "**getVehiclePointerHandle**(*int ptr*)  \n**Returns:** *Vehicle handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AEB/) / [ru](http://blast.hk/wiki/lua:getVehiclePointerHandle)*",
        "type": "function"
      },
      "getVehicleQuaternion": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**getVehicleQuaternion**(*Vehicle car*)  \n**Returns:** *float x, float y, float z, float w*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C5/)*",
        "type": "function"
      },
      "getWaterHeightAtCoords": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "bool ignoreWaves",
            "name": "ignoreWaves"
          }
        ],
        "description": "**getWaterHeightAtCoords**(*float atX, float atY, bool ignoreWaves*)  \n**Returns:** *float height*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/092E/)*",
        "type": "function"
      },
      "getWeapontypeModel": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**getWeapontypeModel**(*int id*)  \n**Returns:** *int model*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0781/)*",
        "type": "function"
      },
      "getWeapontypeSlot": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**getWeapontypeSlot**(*int id*)  \n**Returns:** *int slot*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0782/)*",
        "type": "function"
      },
      "getWheelieStats": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**getWheelieStats**(*Player player*)  \n**Returns:** *int twowheelstime, float twowheelsdistance, int wheelietime, float wheelieDistance, int stoppieTime, float stoppieDistance*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04FC/)*",
        "type": "function"
      },
      "getWorkingDirectory": {
        "description": "**getWorkingDirectory**()  \n**Returns:** *string path*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:getWorkingDirectory)*",
        "type": "function"
      },
      "getZoneDealerStrength": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          }
        ],
        "description": "**getZoneDealerStrength**(*GxtString zone*)  \n**Returns:** *int strength*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/076B/)*",
        "type": "function"
      },
      "getZoneGangStrength": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "int gang",
            "name": "gang"
          }
        ],
        "description": "**getZoneGangStrength**(*GxtString zone, int gang*)  \n**Returns:** *int density*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/076D/)*",
        "type": "function"
      },
      "giveMeleeAttackToChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int fightingStyle",
            "name": "fightingStyle"
          },
          {
            "displayName": "int moves",
            "name": "moves"
          }
        ],
        "description": "**giveMeleeAttackToChar**(*Ped ped, int fightingStyle, int moves*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07FE/)*",
        "type": "function"
      },
      "giveNonPlayerCarNitro": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**giveNonPlayerCarNitro**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E9/)*",
        "type": "function"
      },
      "givePlayerClothes": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int texture",
            "name": "texture"
          },
          {
            "displayName": "int model",
            "name": "model"
          },
          {
            "displayName": "int bodypart",
            "name": "bodypart"
          }
        ],
        "description": "**givePlayerClothes**(*Player player, int texture, int model, int bodypart*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0784/)*",
        "type": "function"
      },
      "givePlayerClothesOutsideShop": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "string clothes",
            "name": "clothes"
          },
          {
            "displayName": "string model",
            "name": "model"
          },
          {
            "displayName": "int bodyPart",
            "name": "bodyPart"
          }
        ],
        "description": "**givePlayerClothesOutsideShop**(*Player player, string clothes, string model, int bodyPart*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/087B/)*",
        "type": "function"
      },
      "givePlayerMoney": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int money",
            "name": "money"
          }
        ],
        "description": "**givePlayerMoney**(*Player player, int money*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0109/)*",
        "type": "function"
      },
      "giveRemoteControlledCarToPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "float float2",
            "name": "float2"
          },
          {
            "displayName": "float float3",
            "name": "float3"
          },
          {
            "displayName": "float float4",
            "name": "float4"
          }
        ],
        "description": "**giveRemoteControlledCarToPlayer**(*Player player, float float2, float float3, float float4*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/010C/)*",
        "type": "function"
      },
      "giveRemoteControlledModelToPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "Model RCModel",
            "name": "RCModel"
          }
        ],
        "description": "**giveRemoteControlledModelToPlayer**(*Player player, float atX, float atY, float atZ, float angle, Model RCModel*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/046E/)*",
        "type": "function"
      },
      "giveVehiclePaintjob": {
        "args": [
          {
            "displayName": "int set",
            "name": "set"
          },
          {
            "displayName": "int paintjob",
            "name": "paintjob"
          }
        ],
        "description": "**giveVehiclePaintjob**(*int set, int paintjob*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06ED/)*",
        "type": "function"
      },
      "giveWeaponToChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int ammo",
            "name": "ammo"
          }
        ],
        "description": "**giveWeaponToChar**(*Ped ped, int weapon, int ammo*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B2/)*",
        "type": "function"
      },
      "grabEntityOnRopeForObject": {
        "args": [
          {
            "displayName": "int magnet",
            "name": "magnet"
          }
        ],
        "description": "**grabEntityOnRopeForObject**(*int magnet*)  \n**Returns:** *Vehicle carHandle, Ped pedHandle, Object objectHandle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0798/)*",
        "type": "function"
      },
      "grabEntityOnWinch": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          }
        ],
        "description": "**grabEntityOnWinch**(*Vehicle heli*)  \n**Returns:** *Vehicle carHandle, Ped pedHandle, Object objectHandle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/078B/)*",
        "type": "function"
      },
      "hasAnimationLoaded": {
        "args": [
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**hasAnimationLoaded**(*string animation*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04EE/) / [ru](http://blast.hk/wiki/opcodes:04EE)*",
        "type": "function"
      },
      "hasCarBeenDamagedByCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Vehicle byCar",
            "name": "byCar"
          }
        ],
        "description": "**hasCarBeenDamagedByCar**(*Vehicle car, Vehicle byCar*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/051D/)*",
        "type": "function"
      },
      "hasCarBeenDamagedByChar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Ped byActor",
            "name": "byActor"
          }
        ],
        "description": "**hasCarBeenDamagedByChar**(*Vehicle car, Ped byActor*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/051C/)*",
        "type": "function"
      },
      "hasCarBeenDamagedByWeapon": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**hasCarBeenDamagedByWeapon**(*Vehicle car, int weapon*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/031E/)*",
        "type": "function"
      },
      "hasCarBeenResprayed": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**hasCarBeenResprayed**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A15/)*",
        "type": "function"
      },
      "hasCarRecordingBeenLoaded": {
        "args": [
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**hasCarRecordingBeenLoaded**(*int path*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C1/)*",
        "type": "function"
      },
      "hasCharBeenArrested": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**hasCharBeenArrested**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0741/)*",
        "type": "function"
      },
      "hasCharBeenDamagedByCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle byCar",
            "name": "byCar"
          }
        ],
        "description": "**hasCharBeenDamagedByCar**(*Ped ped, Vehicle byCar*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/051B/)*",
        "type": "function"
      },
      "hasCharBeenDamagedByChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped byActor",
            "name": "byActor"
          }
        ],
        "description": "**hasCharBeenDamagedByChar**(*Ped ped, Ped byActor*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/051A/)*",
        "type": "function"
      },
      "hasCharBeenDamagedByWeapon": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**hasCharBeenDamagedByWeapon**(*Ped ped, int weapon*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/031D/)*",
        "type": "function"
      },
      "hasCharBeenPhotographed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**hasCharBeenPhotographed**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04C5/)*",
        "type": "function"
      },
      "hasCharGotWeapon": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**hasCharGotWeapon**(*Ped ped, int weapon*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0491/) / [ru](http://blast.hk/wiki/opcodes:0491)*",
        "type": "function"
      },
      "hasCharSpottedChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**hasCharSpottedChar**(*Ped ped, Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0364/)*",
        "type": "function"
      },
      "hasCharSpottedCharInFront": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped ped2",
            "name": "ped2"
          }
        ],
        "description": "**hasCharSpottedCharInFront**(*Ped ped, Ped ped2*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09ED/)*",
        "type": "function"
      },
      "hasCutsceneFinished": {
        "description": "**hasCutsceneFinished**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E9/)*",
        "type": "function"
      },
      "hasCutsceneLoaded": {
        "description": "**hasCutsceneLoaded**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B9/)*",
        "type": "function"
      },
      "hasDeatharrestBeenExecuted": {
        "description": "**hasDeatharrestBeenExecuted**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0112/)*",
        "type": "function"
      },
      "hasGameJustReturnedFromFrontend": {
        "description": "**hasGameJustReturnedFromFrontend**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09FA/)*",
        "type": "function"
      },
      "hasImportGarageSlotBeenFilled": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          },
          {
            "displayName": "int int2",
            "name": "int2"
          }
        ],
        "description": "**hasImportGarageSlotBeenFilled**(*int int1, int int2*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D4/)*",
        "type": "function"
      },
      "hasLanguageChanged": {
        "description": "**hasLanguageChanged**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A0F/)*",
        "type": "function"
      },
      "hasMissionAudioFinished": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**hasMissionAudioFinished**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D2/)*",
        "type": "function"
      },
      "hasMissionAudioLoaded": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**hasMissionAudioLoaded**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D0/)*",
        "type": "function"
      },
      "hasModelLoaded": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**hasModelLoaded**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0248/) / [ru](http://blast.hk/wiki/opcodes:0248)*",
        "type": "function"
      },
      "hasObjectBeenDamaged": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**hasObjectBeenDamaged**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0366/)*",
        "type": "function"
      },
      "hasObjectBeenDamagedByWeapon": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**hasObjectBeenDamagedByWeapon**(*Object object, int type*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08FF/)*",
        "type": "function"
      },
      "hasObjectBeenPhotographed": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**hasObjectBeenPhotographed**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0833/)*",
        "type": "function"
      },
      "hasObjectBeenUprooted": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**hasObjectBeenUprooted**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/095B/)*",
        "type": "function"
      },
      "hasObjectCollidedWithAnything": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**hasObjectCollidedWithAnything**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04DA/)*",
        "type": "function"
      },
      "hasObjectOfTypeBeenSmashed": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**hasObjectOfTypeBeenSmashed**(*float X, float Y, float Z, float radius, Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F0/)*",
        "type": "function"
      },
      "hasPickupBeenCollected": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          }
        ],
        "description": "**hasPickupBeenCollected**(*Pickup pickup*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0214/)*",
        "type": "function"
      },
      "hasPlayerBoughtItem": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          }
        ],
        "description": "**hasPlayerBoughtItem**(*int item*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0942/)*",
        "type": "function"
      },
      "hasResprayHappened": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**hasResprayHappened**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0329/)*",
        "type": "function"
      },
      "hasSaveGameFinished": {
        "description": "**hasSaveGameFinished**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D9/)*",
        "type": "function"
      },
      "hasSpecialCharacterLoaded": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**hasSpecialCharacterLoaded**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/023D/)*",
        "type": "function"
      },
      "hasStreamedScriptLoaded": {
        "args": [
          {
            "displayName": "int script",
            "name": "script"
          }
        ],
        "description": "**hasStreamedScriptLoaded**(*int script*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08AB/)*",
        "type": "function"
      },
      "hasTrainDerailed": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**hasTrainDerailed**(*Vehicle train*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0981/)*",
        "type": "function"
      },
      "hasVehicleModLoaded": {
        "args": [
          {
            "displayName": "Model component",
            "name": "component"
          }
        ],
        "description": "**hasVehicleModLoaded**(*Model component*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06EA/)*",
        "type": "function"
      },
      "heliAttackPlayer": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**heliAttackPlayer**(*Vehicle heli, Player player, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0724/)*",
        "type": "function"
      },
      "heliFollowEntity": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**heliFollowEntity**(*Vehicle heli, Ped ped, Vehicle car, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0726/)*",
        "type": "function"
      },
      "heliGotoCoords": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float altitudeMin",
            "name": "altitudeMin"
          },
          {
            "displayName": "float altitudeMax",
            "name": "altitudeMax"
          }
        ],
        "description": "**heliGotoCoords**(*Vehicle heli, float toX, float toY, float toZ, float altitudeMin, float altitudeMax*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04A2/)*",
        "type": "function"
      },
      "heliKeepEntityInView": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float minaltitude",
            "name": "minaltitude"
          },
          {
            "displayName": "float maxaltitude",
            "name": "maxaltitude"
          }
        ],
        "description": "**heliKeepEntityInView**(*Vehicle heli, Ped ped, Vehicle car, float minaltitude, float maxaltitude*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0780/)*",
        "type": "function"
      },
      "heliLandAtCoords": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float minaltitude",
            "name": "minaltitude"
          },
          {
            "displayName": "float maxaltitude",
            "name": "maxaltitude"
          }
        ],
        "description": "**heliLandAtCoords**(*Vehicle heli, float X, float Y, float Z, float minaltitude, float maxaltitude*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0743/)*",
        "type": "function"
      },
      "hideAllFrontendBlips": {
        "args": [
          {
            "displayName": "bool hide",
            "name": "hide"
          }
        ],
        "description": "**hideAllFrontendBlips**(*bool hide*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09AC/)*",
        "type": "function"
      },
      "hideCharWeaponForScriptedCutscene": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool hide",
            "name": "hide"
          }
        ],
        "description": "**hideCharWeaponForScriptedCutscene**(*Ped ped, bool hide*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06AB/)*",
        "type": "function"
      },
      "highlightMenuItem": {
        "args": [
          {
            "displayName": "int panel",
            "name": "panel"
          },
          {
            "displayName": "int row",
            "name": "row"
          },
          {
            "displayName": "bool highlight",
            "name": "highlight"
          }
        ],
        "description": "**highlightMenuItem**(*int panel, int row, bool highlight*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A23/)*",
        "type": "function"
      },
      "ignoreHeightDifferenceFollowingNodes": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool ignore",
            "name": "ignore"
          }
        ],
        "description": "**ignoreHeightDifferenceFollowingNodes**(*Ped ped, bool ignore*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F4/)*",
        "type": "function"
      },
      "import": {
        "args": [
          {
            "displayName": "string filename",
            "name": "filename"
          }
        ],
        "description": "**import**(*string filename*)  \n**Returns:** *any imports, string error*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:import)*",
        "type": "function"
      },
      "improveCarByCheating": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool affectedByCheats",
            "name": "affectedByCheats"
          }
        ],
        "description": "**improveCarByCheating**(*Vehicle car, bool affectedByCheats*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A21/)*",
        "type": "function"
      },
      "increasePlayerMaxArmour": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int increase",
            "name": "increase"
          }
        ],
        "description": "**increasePlayerMaxArmour**(*Player player, int increase*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/055F/)*",
        "type": "function"
      },
      "increasePlayerMaxHealth": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int increase",
            "name": "increase"
          }
        ],
        "description": "**increasePlayerMaxHealth**(*Player player, int increase*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/055E/)*",
        "type": "function"
      },
      "incrementFloatStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "float add",
            "name": "add"
          }
        ],
        "description": "**incrementFloatStat**(*int stat, float add*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0624/)*",
        "type": "function"
      },
      "incrementFloatStatNoMessage": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "float value",
            "name": "value"
          }
        ],
        "description": "**incrementFloatStatNoMessage**(*int stat, float value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A1F/)*",
        "type": "function"
      },
      "incrementIntStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "int add",
            "name": "add"
          }
        ],
        "description": "**incrementIntStat**(*int stat, int add*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0623/)*",
        "type": "function"
      },
      "incrementIntStatNoMessage": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**incrementIntStatNoMessage**(*int stat, int value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A10/)*",
        "type": "function"
      },
      "inicfg": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/lua:inicfg)*",
        "fields": {
          "load": {
            "args": [
              {
                "displayName": "[table default]",
                "name": "default"
              },
              {
                "displayName": "[string file]",
                "name": "file"
              }
            ],
            "description": "**inicfg.load**(*[table default], [string file]*)  \n**Returns:** *table data*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:inicfg#inicfgload)*",
            "type": "function"
          },
          "save": {
            "args": [
              {
                "displayName": "table data",
                "name": "data"
              },
              {
                "displayName": "[string file]",
                "name": "file"
              }
            ],
            "description": "**inicfg.save**(*table data, [string file]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:inicfg#inicfgsave)*",
            "type": "function"
          }
        },
        "type": "table"
      },
      "initZonePopulationSettings": {
        "description": "**initZonePopulationSettings**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08CA/)*",
        "type": "function"
      },
      "initialiseObjectPath": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          },
          {
            "displayName": "float float2",
            "name": "float2"
          }
        ],
        "description": "**initialiseObjectPath**(*int int1, float float2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/049C/)*",
        "type": "function"
      },
      "is2playerGameGoingOn": {
        "description": "**is2playerGameGoingOn**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0800/)*",
        "type": "function"
      },
      "isAnyPickupAtCoords": {
        "args": [
          {
            "displayName": "float pickupX",
            "name": "pickupX"
          },
          {
            "displayName": "float pickupY",
            "name": "pickupY"
          },
          {
            "displayName": "float pickupZ",
            "name": "pickupZ"
          }
        ],
        "description": "**isAnyPickupAtCoords**(*float pickupX, float pickupY, float pickupZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/048C/)*",
        "type": "function"
      },
      "isAreaOccupied": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool solid",
            "name": "solid"
          },
          {
            "displayName": "bool car",
            "name": "car"
          },
          {
            "displayName": "bool actor",
            "name": "actor"
          },
          {
            "displayName": "bool object",
            "name": "object"
          },
          {
            "displayName": "bool particle",
            "name": "particle"
          }
        ],
        "description": "**isAreaOccupied**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool solid, bool car, bool actor, bool object, bool particle*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0339/)*",
        "type": "function"
      },
      "isAttachedPlayerHeadingAchieved": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isAttachedPlayerHeadingAchieved**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0861/)*",
        "type": "function"
      },
      "isBigVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isBigVehicle**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0969/)*",
        "type": "function"
      },
      "isButtonPressed": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**isButtonPressed**(*Player player, int key*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00E1/)*",
        "type": "function"
      },
      "isCarDead": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarDead**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0119/)*",
        "type": "function"
      },
      "isCarDoorDamaged": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**isCarDoorDamaged**(*Vehicle car, int door*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09BB/)*",
        "type": "function"
      },
      "isCarDoorFullyOpen": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**isCarDoorFullyOpen**(*Vehicle car, int door*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A7/)*",
        "type": "function"
      },
      "isCarEngineOn": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarEngineOn**(*Vehicle car*)  \n**Returns:** *bool state*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ABE/) / [ru](http://blast.hk/wiki/lua:isCarEngineOn)*",
        "type": "function"
      },
      "isCarInAirProper": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarInAirProper**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F3/)*",
        "type": "function"
      },
      "isCarInArea2d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCarInArea2d**(*Vehicle car, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00B0/)*",
        "type": "function"
      },
      "isCarInArea3d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCarInArea3d**(*Vehicle car, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00B1/)*",
        "type": "function"
      },
      "isCarInWater": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarInWater**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02BF/)*",
        "type": "function"
      },
      "isCarLowRider": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarLowRider**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/096E/)*",
        "type": "function"
      },
      "isCarModel": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isCarModel**(*Vehicle car, Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0137/)*",
        "type": "function"
      },
      "isCarOnFire": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarOnFire**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0495/)*",
        "type": "function"
      },
      "isCarOnScreen": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarOnScreen**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02CA/)*",
        "type": "function"
      },
      "isCarPassengerSeatFree": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int seat",
            "name": "seat"
          }
        ],
        "description": "**isCarPassengerSeatFree**(*Vehicle car, int seat*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0431/)*",
        "type": "function"
      },
      "isCarSirenOn": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarSirenOn**(*Vehicle car*)  \n**Returns:** *bool state*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ABD/) / [ru](http://blast.hk/wiki/lua:isCarSirenOn)*",
        "type": "function"
      },
      "isCarStopped": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarStopped**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C1/)*",
        "type": "function"
      },
      "isCarStoppedInArea2d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCarStoppedInArea2d**(*Vehicle car, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01AB/)*",
        "type": "function"
      },
      "isCarStoppedInArea3d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCarStoppedInArea3d**(*Vehicle car, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01AC/)*",
        "type": "function"
      },
      "isCarStreetRacer": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarStreetRacer**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/096F/)*",
        "type": "function"
      },
      "isCarStuck": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarStuck**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03CE/)*",
        "type": "function"
      },
      "isCarStuckOnRoof": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarStuckOnRoof**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/018F/)*",
        "type": "function"
      },
      "isCarTireBurst": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int tire",
            "name": "tire"
          }
        ],
        "description": "**isCarTireBurst**(*Vehicle car, int tire*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0496/)*",
        "type": "function"
      },
      "isCarTouchingCar": {
        "args": [
          {
            "displayName": "Vehicle car1",
            "name": "car1"
          },
          {
            "displayName": "Vehicle car2",
            "name": "car2"
          }
        ],
        "description": "**isCarTouchingCar**(*Vehicle car1, Vehicle car2*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09CB/)*",
        "type": "function"
      },
      "isCarUpright": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarUpright**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/020D/)*",
        "type": "function"
      },
      "isCarUpsidedown": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarUpsidedown**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F4/)*",
        "type": "function"
      },
      "isCarVisiblyDamaged": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarVisiblyDamaged**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C9/)*",
        "type": "function"
      },
      "isCarWaitingForWorldCollision": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCarWaitingForWorldCollision**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04F1/)*",
        "type": "function"
      },
      "isCharAtScriptedAttractor": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int origin",
            "name": "origin"
          }
        ],
        "description": "**isCharAtScriptedAttractor**(*Ped ped, int origin*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0642/)*",
        "type": "function"
      },
      "isCharAttachedToAnyCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharAttachedToAnyCar**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A32/)*",
        "type": "function"
      },
      "isCharDead": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharDead**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0118/) / [ru](http://blast.hk/wiki/opcodes:0118)*",
        "type": "function"
      },
      "isCharDucking": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharDucking**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0597/)*",
        "type": "function"
      },
      "isCharGettingInToACar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharGettingInToACar**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09DE/)*",
        "type": "function"
      },
      "isCharHeadMissing": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharHeadMissing**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A8/)*",
        "type": "function"
      },
      "isCharHoldingObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int liftingObject",
            "name": "liftingObject"
          }
        ],
        "description": "**isCharHoldingObject**(*Ped ped, int liftingObject*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0737/)*",
        "type": "function"
      },
      "isCharInAir": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAir**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0818/) / [ru](http://blast.hk/wiki/opcodes:0818)*",
        "type": "function"
      },
      "isCharInAngledArea2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAngledArea2d**(*Ped ped, float x1, float y1, float x2, float y2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F6/)*",
        "type": "function"
      },
      "isCharInAngledArea3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAngledArea3d**(*Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05FC/)*",
        "type": "function"
      },
      "isCharInAngledAreaInCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAngledAreaInCar2d**(*Ped ped, float x1, float y1, float x2, float y2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F8/)*",
        "type": "function"
      },
      "isCharInAngledAreaInCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float depth",
            "name": "depth"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isCharInAngledAreaInCar3d**(*Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float depth, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05FE/)*",
        "type": "function"
      },
      "isCharInAngledAreaOnFoot2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAngledAreaOnFoot2d**(*Ped ped, float x1, float y1, float x2, float y2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F7/)*",
        "type": "function"
      },
      "isCharInAngledAreaOnFoot3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAngledAreaOnFoot3d**(*Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05FD/)*",
        "type": "function"
      },
      "isCharInAnyBoat": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnyBoat**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04A7/)*",
        "type": "function"
      },
      "isCharInAnyCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnyCar**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00DF/)*",
        "type": "function"
      },
      "isCharInAnyHeli": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnyHeli**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04A9/)*",
        "type": "function"
      },
      "isCharInAnyPlane": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnyPlane**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04AB/)*",
        "type": "function"
      },
      "isCharInAnyPoliceVehicle": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnyPoliceVehicle**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/056C/)*",
        "type": "function"
      },
      "isCharInAnySearchlight": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnySearchlight**(*Ped ped*)  \n**Returns:** *bool result, Searchlight searchlight*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A9/)*",
        "type": "function"
      },
      "isCharInAnyTrain": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInAnyTrain**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09AE/)*",
        "type": "function"
      },
      "isCharInArea2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInArea2d**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A3/)*",
        "type": "function"
      },
      "isCharInArea3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInArea3d**(*Ped ped, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A4/) / [ru](http://blast.hk/wiki/opcodes:00A4)*",
        "type": "function"
      },
      "isCharInAreaInCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAreaInCar2d**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A2/)*",
        "type": "function"
      },
      "isCharInAreaInCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAreaInCar3d**(*Ped ped, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A7/)*",
        "type": "function"
      },
      "isCharInAreaOnFoot2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAreaOnFoot2d**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A1/)*",
        "type": "function"
      },
      "isCharInAreaOnFoot3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharInAreaOnFoot3d**(*Ped ped, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A6/)*",
        "type": "function"
      },
      "isCharInCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCharInCar**(*Ped ped, Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00DB/)*",
        "type": "function"
      },
      "isCharInFlyingVehicle": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInFlyingVehicle**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04C8/)*",
        "type": "function"
      },
      "isCharInModel": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Model carModel",
            "name": "carModel"
          }
        ],
        "description": "**isCharInModel**(*Ped ped, Model carModel*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00DD/)*",
        "type": "function"
      },
      "isCharInSearchlight": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInSearchlight**(*Searchlight searchlight, Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B7/)*",
        "type": "function"
      },
      "isCharInTaxi": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInTaxi**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0602/)*",
        "type": "function"
      },
      "isCharInWater": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharInWater**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04AD/)*",
        "type": "function"
      },
      "isCharInZone": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "GxtString zoneName",
            "name": "zoneName"
          }
        ],
        "description": "**isCharInZone**(*Ped ped, GxtString zoneName*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0154/)*",
        "type": "function"
      },
      "isCharMale": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharMale**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03A3/)*",
        "type": "function"
      },
      "isCharModel": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isCharModel**(*Ped ped, Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02F2/) / [ru](http://blast.hk/wiki/opcodes:02F2)*",
        "type": "function"
      },
      "isCharOnAnyBike": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharOnAnyBike**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/047A/)*",
        "type": "function"
      },
      "isCharOnFoot": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharOnFoot**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/044B/)*",
        "type": "function"
      },
      "isCharOnScreen": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharOnScreen**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02CB/)*",
        "type": "function"
      },
      "isCharPlayingAnim": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**isCharPlayingAnim**(*Ped ped, string animation*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0611/)*",
        "type": "function"
      },
      "isCharRespondingToEvent": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**isCharRespondingToEvent**(*Ped ped, int event*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/074F/)*",
        "type": "function"
      },
      "isCharShooting": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharShooting**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E0/)*",
        "type": "function"
      },
      "isCharShootingInArea": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**isCharShootingInArea**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, int weapon*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02D6/)*",
        "type": "function"
      },
      "isCharSittingInAnyCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharSittingInAnyCar**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0449/)*",
        "type": "function"
      },
      "isCharSittingInCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCharSittingInCar**(*Ped ped, Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0448/)*",
        "type": "function"
      },
      "isCharStopped": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharStopped**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02A0/)*",
        "type": "function"
      },
      "isCharStoppedInAngledArea2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float height",
            "name": "height"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isCharStoppedInAngledArea2d**(*Ped ped, float x1, float y1, float x2, float y2, float height, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F9/)*",
        "type": "function"
      },
      "isCharStoppedInAngledArea3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float depth",
            "name": "depth"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isCharStoppedInAngledArea3d**(*Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float depth, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05FF/)*",
        "type": "function"
      },
      "isCharStoppedInAngledAreaInCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float height",
            "name": "height"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isCharStoppedInAngledAreaInCar2d**(*Ped ped, float x1, float y1, float x2, float y2, float height, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05FB/)*",
        "type": "function"
      },
      "isCharStoppedInAngledAreaInCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float depth",
            "name": "depth"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isCharStoppedInAngledAreaInCar3d**(*Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float depth, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0601/)*",
        "type": "function"
      },
      "isCharStoppedInAngledAreaOnFoot2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInAngledAreaOnFoot2d**(*Ped ped, float x1, float y1, float x2, float y2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05FA/)*",
        "type": "function"
      },
      "isCharStoppedInAngledAreaOnFoot3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float depth",
            "name": "depth"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isCharStoppedInAngledAreaOnFoot3d**(*Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, float depth, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0600/)*",
        "type": "function"
      },
      "isCharStoppedInArea2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInArea2d**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A3/)*",
        "type": "function"
      },
      "isCharStoppedInArea3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInArea3d**(*Ped ped, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A8/)*",
        "type": "function"
      },
      "isCharStoppedInAreaInCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInAreaInCar2d**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A5/)*",
        "type": "function"
      },
      "isCharStoppedInAreaInCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInAreaInCar3d**(*Ped ped, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01AA/)*",
        "type": "function"
      },
      "isCharStoppedInAreaOnFoot2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInAreaOnFoot2d**(*Ped ped, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A4/)*",
        "type": "function"
      },
      "isCharStoppedInAreaOnFoot3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isCharStoppedInAreaOnFoot3d**(*Ped ped, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01A9/)*",
        "type": "function"
      },
      "isCharStuckUnderCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharStuckUnderCar**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/095D/)*",
        "type": "function"
      },
      "isCharSwimming": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharSwimming**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0965/)*",
        "type": "function"
      },
      "isCharTalking": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharTalking**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/094D/)*",
        "type": "function"
      },
      "isCharTouchingChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped ped2",
            "name": "ped2"
          }
        ],
        "description": "**isCharTouchingChar**(*Ped ped, Ped ped2*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A1B/)*",
        "type": "function"
      },
      "isCharTouchingObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isCharTouchingObject**(*Ped ped, Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0179/)*",
        "type": "function"
      },
      "isCharTouchingObjectOnFoot": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isCharTouchingObjectOnFoot**(*Ped ped, Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/023B/)*",
        "type": "function"
      },
      "isCharTouchingVehicle": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isCharTouchingVehicle**(*Ped ped, Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0547/)*",
        "type": "function"
      },
      "isCharUsingMapAttractor": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharUsingMapAttractor**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C5/)*",
        "type": "function"
      },
      "isCharWaitingForWorldCollision": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isCharWaitingForWorldCollision**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04F0/)*",
        "type": "function"
      },
      "isCleoLoaded": {
        "description": "**isCleoLoaded**()  \n**Returns:** *bool loaded*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isCleoLoaded)*",
        "type": "function"
      },
      "isClosestObjectOfTypeSmashedOrDamaged": {
        "args": [
          {
            "displayName": "Model object",
            "name": "object"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool smashed",
            "name": "smashed"
          },
          {
            "displayName": "bool damaged",
            "name": "damaged"
          }
        ],
        "description": "**isClosestObjectOfTypeSmashedOrDamaged**(*Model object, float atX, float atY, float atZ, float radius, bool smashed, bool damaged*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0716/)*",
        "type": "function"
      },
      "isConversationAtNode": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**isConversationAtNode**(*Ped ped, GxtString gxtString*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/071A/)*",
        "type": "function"
      },
      "isCopVehicleInArea3dNoSave": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**isCopVehicleInArea3dNoSave**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C3/)*",
        "type": "function"
      },
      "isCurrentCharWeapon": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**isCurrentCharWeapon**(*Ped ped, int weapon*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02D8/) / [ru](http://blast.hk/wiki/opcodes:02D8)*",
        "type": "function"
      },
      "isDebugCameraOn": {
        "description": "**isDebugCameraOn**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A0/)*",
        "type": "function"
      },
      "isEmergencyServicesVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isEmergencyServicesVehicle**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0975/)*",
        "type": "function"
      },
      "isExplosionInArea": {
        "args": [
          {
            "displayName": "int explosionType",
            "name": "explosionType"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**isExplosionInArea**(*int explosionType, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0356/)*",
        "type": "function"
      },
      "isFlameInAngledArea2d": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isFlameInAngledArea2d**(*float x1, float y1, float x2, float y2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/072D/)*",
        "type": "function"
      },
      "isFlameInAngledArea3d": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isFlameInAngledArea3d**(*float x1, float y1, float z1, float x2, float y2, float z2, float angle, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/072E/)*",
        "type": "function"
      },
      "isGamePaused": {
        "description": "**isGamePaused**()  \n**Returns:** *bool paused*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isGamePaused)*",
        "type": "function"
      },
      "isGameVersionOriginal": {
        "description": "**isGameVersionOriginal**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AA9/) / [ru](http://blast.hk/wiki/lua:isGameVersionOriginal)*",
        "type": "function"
      },
      "isGameWindowForeground": {
        "description": "**isGameWindowForeground**()  \n**Returns:** *bool foreground*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isGameWindowForeground)*",
        "type": "function"
      },
      "isGangWarFightingGoingOn": {
        "description": "**isGangWarFightingGoingOn**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A03/)*",
        "type": "function"
      },
      "isGangWarGoingOn": {
        "description": "**isGangWarGoingOn**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/087A/)*",
        "type": "function"
      },
      "isGarageClosed": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          }
        ],
        "description": "**isGarageClosed**(*GxtString garage*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03B1/)*",
        "type": "function"
      },
      "isGarageOpen": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          }
        ],
        "description": "**isGarageOpen**(*GxtString garage*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03B0/)*",
        "type": "function"
      },
      "isGroupLeader": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**isGroupLeader**(*Ped ped, int group*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06EF/)*",
        "type": "function"
      },
      "isGroupMember": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**isGroupMember**(*Ped ped, int group*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06EE/)*",
        "type": "function"
      },
      "isHelpMessageBeingDisplayed": {
        "description": "**isHelpMessageBeingDisplayed**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08FE/)*",
        "type": "function"
      },
      "isKeyDown": {
        "args": [
          {
            "displayName": "int keyId",
            "name": "keyId"
          }
        ],
        "description": "**isKeyDown**(*int keyId*)  \n**Returns:** *bool state*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isKeyDown)*",
        "type": "function"
      },
      "isKeyJustPressed": {
        "args": [
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**isKeyJustPressed**(*int key*)  \n**Returns:** *bool state*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isKeyJustPressed)*",
        "type": "function"
      },
      "isLastBuildingModelShotByPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isLastBuildingModelShotByPlayer**(*Player player, Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A3A/)*",
        "type": "function"
      },
      "isLineOfSightClear": {
        "args": [
          {
            "displayName": "float fromX",
            "name": "fromX"
          },
          {
            "displayName": "float fromY",
            "name": "fromY"
          },
          {
            "displayName": "float fromZ",
            "name": "fromZ"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "bool checkBuildings",
            "name": "checkBuildings"
          },
          {
            "displayName": "bool checkVehicles",
            "name": "checkVehicles"
          },
          {
            "displayName": "bool checkActors",
            "name": "checkActors"
          },
          {
            "displayName": "bool checkObjects",
            "name": "checkObjects"
          },
          {
            "displayName": "bool checkParticles",
            "name": "checkParticles"
          }
        ],
        "description": "**isLineOfSightClear**(*float fromX, float fromY, float fromZ, float toX, float toY, float toZ, bool checkBuildings, bool checkVehicles, bool checkActors, bool checkObjects, bool checkParticles*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06BD/)*",
        "type": "function"
      },
      "isMessageBeingDisplayed": {
        "description": "**isMessageBeingDisplayed**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/076F/)*",
        "type": "function"
      },
      "isMinigameInProgress": {
        "description": "**isMinigameInProgress**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09BE/)*",
        "type": "function"
      },
      "isModelAvailable": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isModelAvailable**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0488/)*",
        "type": "function"
      },
      "isModelInCdimage": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isModelInCdimage**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07DE/)*",
        "type": "function"
      },
      "isMoneyPickupAtCoords": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**isMoneyPickupAtCoords**(*float atX, float atY, float atZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09DA/)*",
        "type": "function"
      },
      "isMouseUsingVerticalInversion": {
        "description": "**isMouseUsingVerticalInversion**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A4C/)*",
        "type": "function"
      },
      "isNextStationAllowed": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**isNextStationAllowed**(*Vehicle train*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A06/)*",
        "type": "function"
      },
      "isNightVisionActive": {
        "description": "**isNightVisionActive**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/099D/)*",
        "type": "function"
      },
      "isObjectAttached": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isObjectAttached**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0685/)*",
        "type": "function"
      },
      "isObjectInAngledArea2d": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isObjectInAngledArea2d**(*Object object, float x1, float y1, float x2, float y2, float radius, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E3/)*",
        "type": "function"
      },
      "isObjectInAngledArea3d": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          },
          {
            "displayName": "float depth",
            "name": "depth"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isObjectInAngledArea3d**(*Object object, float x1, float y1, float z1, float x2, float y2, float z2, float depth, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E4/)*",
        "type": "function"
      },
      "isObjectInArea2d": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**isObjectInArea2d**(*Object object, float cornerAX, float cornerAY, float cornerBX, float cornerBY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E9/)*",
        "type": "function"
      },
      "isObjectInArea3d": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**isObjectInArea3d**(*Object object, float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04EA/)*",
        "type": "function"
      },
      "isObjectInWater": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isObjectInWater**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E7/)*",
        "type": "function"
      },
      "isObjectIntersectingWorld": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isObjectIntersectingWorld**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09FC/)*",
        "type": "function"
      },
      "isObjectOnScreen": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isObjectOnScreen**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02CC/)*",
        "type": "function"
      },
      "isObjectPlayingAnim": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "string anim",
            "name": "anim"
          }
        ],
        "description": "**isObjectPlayingAnim**(*Object object, string anim*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0837/)*",
        "type": "function"
      },
      "isObjectStatic": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isObjectStatic**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A3/)*",
        "type": "function"
      },
      "isObjectWithinBrainActivationRange": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isObjectWithinBrainActivationRange**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0977/)*",
        "type": "function"
      },
      "isOpcodesAvailable": {
        "description": "**isOpcodesAvailable**()  \n**Returns:** *bool status*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isOpcodesAvailable)*",
        "type": "function"
      },
      "isPauseMenuActive": {
        "description": "**isPauseMenuActive**()  \n**Returns:** *bool active*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isPauseMenuActive)*",
        "type": "function"
      },
      "isPcUsingJoypad": {
        "description": "**isPcUsingJoypad**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A4B/)*",
        "type": "function"
      },
      "isPcVersion": {
        "description": "**isPcVersion**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0485/) / [ru](http://blast.hk/wiki/opcodes:0485)*",
        "type": "function"
      },
      "isPlaybackGoingOnForCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isPlaybackGoingOnForCar**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/060E/)*",
        "type": "function"
      },
      "isPlayerClimbing": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerClimbing**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A29/)*",
        "type": "function"
      },
      "isPlayerControlOn": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerControlOn**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E7/)*",
        "type": "function"
      },
      "isPlayerControllable": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerControllable**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03EE/)*",
        "type": "function"
      },
      "isPlayerDead": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerDead**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0117/)*",
        "type": "function"
      },
      "isPlayerInInfoZone": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "GxtString zone",
            "name": "zone"
          }
        ],
        "description": "**isPlayerInInfoZone**(*Player player, GxtString zone*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0583/)*",
        "type": "function"
      },
      "isPlayerInPositionForConversation": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isPlayerInPositionForConversation**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/089B/)*",
        "type": "function"
      },
      "isPlayerInRemoteMode": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerInRemoteMode**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0241/)*",
        "type": "function"
      },
      "isPlayerInShortcutTaxi": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerInShortcutTaxi**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0596/)*",
        "type": "function"
      },
      "isPlayerPerformingStoppie": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerPerformingStoppie**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F2/)*",
        "type": "function"
      },
      "isPlayerPerformingWheelie": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerPerformingWheelie**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F1/)*",
        "type": "function"
      },
      "isPlayerPlaying": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerPlaying**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0256/)*",
        "type": "function"
      },
      "isPlayerPressingHorn": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerPressingHorn**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0122/)*",
        "type": "function"
      },
      "isPlayerTargettingAnything": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerTargettingAnything**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/068C/)*",
        "type": "function"
      },
      "isPlayerTargettingChar": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**isPlayerTargettingChar**(*Player player, Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0457/)*",
        "type": "function"
      },
      "isPlayerTargettingObject": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isPlayerTargettingObject**(*Player player, Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0458/)*",
        "type": "function"
      },
      "isPlayerUsingJetpack": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**isPlayerUsingJetpack**(*Player player*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A0C/)*",
        "type": "function"
      },
      "isPlayerWearing": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "string bodypart",
            "name": "bodypart"
          },
          {
            "displayName": "int skin",
            "name": "skin"
          }
        ],
        "description": "**isPlayerWearing**(*Player player, string bodypart, int skin*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0500/)*",
        "type": "function"
      },
      "isPointObscuredByAMissionEntity": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**isPointObscuredByAMissionEntity**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/038A/)*",
        "type": "function"
      },
      "isPointOnScreen": {
        "args": [
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**isPointOnScreen**(*float sphereX, float sphereY, float sphereZ, float radius*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00C2/)*",
        "type": "function"
      },
      "isProceduralInteriorActive": {
        "args": [
          {
            "displayName": "int interior",
            "name": "interior"
          }
        ],
        "description": "**isProceduralInteriorActive**(*int interior*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0867/)*",
        "type": "function"
      },
      "isProjectileInArea": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**isProjectileInArea**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02EE/)*",
        "type": "function"
      },
      "isPs2KeyboardKeyJustPressed": {
        "args": [
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**isPs2KeyboardKeyJustPressed**(*int key*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0736/)*",
        "type": "function"
      },
      "isPs2KeyboardKeyPressed": {
        "args": [
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**isPs2KeyboardKeyPressed**(*int key*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0735/)*",
        "type": "function"
      },
      "isRelationshipSet": {
        "args": [
          {
            "displayName": "int acquaintance",
            "name": "acquaintance"
          },
          {
            "displayName": "int ofActors",
            "name": "ofActors"
          },
          {
            "displayName": "int toActors",
            "name": "toActors"
          }
        ],
        "description": "**isRelationshipSet**(*int acquaintance, int ofActors, int toActors*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E8/)*",
        "type": "function"
      },
      "isSampAvailable": {
        "description": "**isSampAvailable**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AFA)*",
        "type": "function"
      },
      "isSampLoaded": {
        "description": "**isSampLoaded**()  \n**Returns:** *bool loaded*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isSampLoaded)*",
        "type": "function"
      },
      "isSampfuncsConsoleActive": {
        "description": "**isSampfuncsConsoleActive**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C7E)*",
        "type": "function"
      },
      "isSampfuncsConsoleCommandDefined": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          }
        ],
        "description": "**isSampfuncsConsoleCommandDefined**(*zstring cmd*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C91)*",
        "type": "function"
      },
      "isSampfuncsGlobalVarDefined": {
        "args": [
          {
            "displayName": "zstring var",
            "name": "var"
          }
        ],
        "description": "**isSampfuncsGlobalVarDefined**(*zstring var*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C5F)*",
        "type": "function"
      },
      "isSampfuncsLoaded": {
        "description": "**isSampfuncsLoaded**()  \n**Returns:** *bool loaded*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:isSampfuncsLoaded)*",
        "type": "function"
      },
      "isScriptFireExtinguished": {
        "args": [
          {
            "displayName": "int fire",
            "name": "fire"
          }
        ],
        "description": "**isScriptFireExtinguished**(*int fire*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02D0/)*",
        "type": "function"
      },
      "isSkipCutsceneButtonPressed": {
        "description": "**isSkipCutsceneButtonPressed**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D0/)*",
        "type": "function"
      },
      "isSkipWaitingForScriptToFadeIn": {
        "description": "**isSkipWaitingForScriptToFadeIn**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A36/)*",
        "type": "function"
      },
      "isSniperBulletInArea": {
        "args": [
          {
            "displayName": "float float1",
            "name": "float1"
          },
          {
            "displayName": "float float2",
            "name": "float2"
          },
          {
            "displayName": "float float3",
            "name": "float3"
          },
          {
            "displayName": "float float4",
            "name": "float4"
          },
          {
            "displayName": "float float5",
            "name": "float5"
          },
          {
            "displayName": "float float6",
            "name": "float6"
          }
        ],
        "description": "**isSniperBulletInArea**(*float float1, float float2, float float3, float float4, float float5, float float6*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/037E/)*",
        "type": "function"
      },
      "isThisHelpMessageBeingDisplayed": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**isThisHelpMessageBeingDisplayed**(*GxtString gxtString*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A2A/)*",
        "type": "function"
      },
      "isThisModelABoat": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isThisModelABoat**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/081E/) / [ru](http://blast.hk/wiki/opcodes:081E)*",
        "type": "function"
      },
      "isThisModelACar": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isThisModelACar**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A01/)*",
        "type": "function"
      },
      "isThisModelAHeli": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isThisModelAHeli**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0820/) / [ru](http://blast.hk/wiki/opcodes:0820)*",
        "type": "function"
      },
      "isThisModelAPlane": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**isThisModelAPlane**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/081F/) / [ru](http://blast.hk/wiki/opcodes:081F)*",
        "type": "function"
      },
      "isTrailerAttachedToCab": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int trailer",
            "name": "trailer"
          }
        ],
        "description": "**isTrailerAttachedToCab**(*Vehicle car, int trailer*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07AB/)*",
        "type": "function"
      },
      "isVehicleAttached": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isVehicleAttached**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0686/)*",
        "type": "function"
      },
      "isVehicleInSearchlight": {
        "args": [
          {
            "displayName": "int int",
            "name": "int"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isVehicleInSearchlight**(*int int, Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C0/)*",
        "type": "function"
      },
      "isVehicleOnAllWheels": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**isVehicleOnAllWheels**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D0/)*",
        "type": "function"
      },
      "isVehicleTouchingObject": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**isVehicleTouchingObject**(*Vehicle car, Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0897/)*",
        "type": "function"
      },
      "isWantedLevelGreater": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int level",
            "name": "level"
          }
        ],
        "description": "**isWantedLevelGreater**(*Player player, int level*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/010F/)*",
        "type": "function"
      },
      "isWidescreenOnInOptions": {
        "description": "**isWidescreenOnInOptions**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A2B/)*",
        "type": "function"
      },
      "killFxSystem": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          }
        ],
        "description": "**killFxSystem**(*Particle particle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0650/)*",
        "type": "function"
      },
      "killFxSystemNow": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          }
        ],
        "description": "**killFxSystemNow**(*Particle particle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0976/)*",
        "type": "function"
      },
      "launchCustomMission": {
        "args": [
          {
            "displayName": "zstring filepath",
            "name": "filepath"
          },
          {
            "displayName": "table args",
            "name": "args"
          }
        ],
        "description": "**launchCustomMission**(*zstring filepath, table args*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A94/)*",
        "type": "function"
      },
      "limitAngle": {
        "args": [
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**limitAngle**(*float angle*)  \n**Returns:** *float float*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0656/)*",
        "type": "function"
      },
      "limitTwoPlayerDistance": {
        "args": [
          {
            "displayName": "float distance",
            "name": "distance"
          }
        ],
        "description": "**limitTwoPlayerDistance**(*float distance*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06F1/)*",
        "type": "function"
      },
      "linkObjectToInterior": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int interior",
            "name": "interior"
          }
        ],
        "description": "**linkObjectToInterior**(*Object object, int interior*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0566/)*",
        "type": "function"
      },
      "listenToPlayerGroupCommands": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool listen",
            "name": "listen"
          }
        ],
        "description": "**listenToPlayerGroupCommands**(*Ped ped, bool listen*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07CB/)*",
        "type": "function"
      },
      "load3dAudioStream": {
        "args": [
          {
            "displayName": "zstring audio",
            "name": "audio"
          }
        ],
        "description": "**load3dAudioStream**(*zstring audio*)  \n**Returns:** *int handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC1/)*",
        "type": "function"
      },
      "loadAllModelsNow": {
        "description": "**loadAllModelsNow**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/038B/) / [ru](http://blast.hk/wiki/opcodes:038B)*",
        "type": "function"
      },
      "loadAndLaunchMissionInternal": {
        "args": [
          {
            "displayName": "int mission",
            "name": "mission"
          }
        ],
        "description": "**loadAndLaunchMissionInternal**(*int mission*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0417/)*",
        "type": "function"
      },
      "loadAudioStream": {
        "args": [
          {
            "displayName": "zstring audio",
            "name": "audio"
          }
        ],
        "description": "**loadAudioStream**(*zstring audio*)  \n**Returns:** *bool result, int handle*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AAC/)*",
        "type": "function"
      },
      "loadCharDecisionMaker": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**loadCharDecisionMaker**(*int type*)  \n**Returns:** *int maker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/060A/)*",
        "type": "function"
      },
      "loadCutscene": {
        "args": [
          {
            "displayName": "GxtString cutscene",
            "name": "cutscene"
          }
        ],
        "description": "**loadCutscene**(*GxtString cutscene*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E4/)*",
        "type": "function"
      },
      "loadDynamicLibrary": {
        "args": [
          {
            "displayName": "string library",
            "name": "library"
          }
        ],
        "description": "**loadDynamicLibrary**(*string library*)  \n**Returns:** *bool result, int handle*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:loadDynamicLibrary)*",
        "type": "function"
      },
      "loadGroupDecisionMaker": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**loadGroupDecisionMaker**(*int type*)  \n**Returns:** *int maker*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06AE/)*",
        "type": "function"
      },
      "loadMissionAudio": {
        "args": [
          {
            "displayName": "int asId",
            "name": "asId"
          },
          {
            "displayName": "int name",
            "name": "name"
          }
        ],
        "description": "**loadMissionAudio**(*int asId, int name*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03CF/)*",
        "type": "function"
      },
      "loadMissionText": {
        "args": [
          {
            "displayName": "GxtString table",
            "name": "table"
          }
        ],
        "description": "**loadMissionText**(*GxtString table*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/054C/)*",
        "type": "function"
      },
      "loadPathNodesInArea": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          }
        ],
        "description": "**loadPathNodesInArea**(*float x1, float y1, float x2, float y2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0606/)*",
        "type": "function"
      },
      "loadPrices": {
        "args": [
          {
            "displayName": "GxtString shopping",
            "name": "shopping"
          }
        ],
        "description": "**loadPrices**(*GxtString shopping*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/075D/)*",
        "type": "function"
      },
      "loadScene": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**loadScene**(*float atX, float atY, float atZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03CB/)*",
        "type": "function"
      },
      "loadSceneInDirection": {
        "args": [
          {
            "displayName": "float coordX",
            "name": "coordX"
          },
          {
            "displayName": "float coordY",
            "name": "coordY"
          },
          {
            "displayName": "float coordZ",
            "name": "coordZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**loadSceneInDirection**(*float coordX, float coordY, float coordZ, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A0B/)*",
        "type": "function"
      },
      "loadShop": {
        "args": [
          {
            "displayName": "GxtString shopping",
            "name": "shopping"
          }
        ],
        "description": "**loadShop**(*GxtString shopping*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/075E/)*",
        "type": "function"
      },
      "loadSpecialCharacter": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**loadSpecialCharacter**(*GxtString gxtString, int id*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/023C/)*",
        "type": "function"
      },
      "loadSpecialModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**loadSpecialModel**(*Model modelId, GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02F3/)*",
        "type": "function"
      },
      "loadSplashScreen": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**loadSplashScreen**(*GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/044D/)*",
        "type": "function"
      },
      "loadSprite": {
        "args": [
          {
            "displayName": "string name",
            "name": "name"
          }
        ],
        "description": "**loadSprite**(*string name*)  \n**Returns:** *int id*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/038F/)*",
        "type": "function"
      },
      "loadTextureDictionary": {
        "args": [
          {
            "displayName": "zstring txd",
            "name": "txd"
          }
        ],
        "description": "**loadTextureDictionary**(*zstring txd*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0390/)*",
        "type": "function"
      },
      "localClock": {
        "description": "**localClock**()  \n**Returns:** *double time*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:localClock)*",
        "type": "function"
      },
      "locateCar2d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCar2d**(*Vehicle car, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01AD/)*",
        "type": "function"
      },
      "locateCar3d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCar3d**(*Vehicle car, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01AF/)*",
        "type": "function"
      },
      "locateCharAnyMeans2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeans2d**(*Ped ped, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00EC/)*",
        "type": "function"
      },
      "locateCharAnyMeans3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeans3d**(*Ped ped, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00FE/)*",
        "type": "function"
      },
      "locateCharAnyMeansCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeansCar2d**(*Ped ped, Vehicle car, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0202/)*",
        "type": "function"
      },
      "locateCharAnyMeansCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**locateCharAnyMeansCar3d**(*Ped ped, Vehicle car, float radiusX, float radiusY, float radiusZ, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0205/)*",
        "type": "function"
      },
      "locateCharAnyMeansChar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped nearPed",
            "name": "nearPed"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeansChar2d**(*Ped ped, Ped nearPed, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00F2/)*",
        "type": "function"
      },
      "locateCharAnyMeansChar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped nearPed",
            "name": "nearPed"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeansChar3d**(*Ped ped, Ped nearPed, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0104/)*",
        "type": "function"
      },
      "locateCharAnyMeansObject2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeansObject2d**(*Ped ped, Object object, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0471/)*",
        "type": "function"
      },
      "locateCharAnyMeansObject3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharAnyMeansObject3d**(*Ped ped, Object object, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0474/)*",
        "type": "function"
      },
      "locateCharInCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCar2d**(*Ped ped, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00EE/)*",
        "type": "function"
      },
      "locateCharInCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCar3d**(*Ped ped, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0100/)*",
        "type": "function"
      },
      "locateCharInCarCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCarCar2d**(*Ped ped, Vehicle car, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0204/)*",
        "type": "function"
      },
      "locateCharInCarCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**locateCharInCarCar3d**(*Ped ped, Vehicle car, float radiusX, float radiusY, float radiusZ, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0207/)*",
        "type": "function"
      },
      "locateCharInCarChar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped nearPed",
            "name": "nearPed"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCarChar2d**(*Ped ped, Ped nearPed, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00F4/)*",
        "type": "function"
      },
      "locateCharInCarChar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped nearPed",
            "name": "nearPed"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCarChar3d**(*Ped ped, Ped nearPed, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0106/)*",
        "type": "function"
      },
      "locateCharInCarObject2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCarObject2d**(*Ped ped, Object object, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0473/)*",
        "type": "function"
      },
      "locateCharInCarObject3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharInCarObject3d**(*Ped ped, Object object, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0476/)*",
        "type": "function"
      },
      "locateCharOnFoot2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharOnFoot2d**(*Ped ped, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00ED/)*",
        "type": "function"
      },
      "locateCharOnFoot3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharOnFoot3d**(*Ped ped, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00FF/)*",
        "type": "function"
      },
      "locateCharOnFootCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**locateCharOnFootCar2d**(*Ped ped, Vehicle car, float radiusX, float radiusY, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0203/)*",
        "type": "function"
      },
      "locateCharOnFootCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**locateCharOnFootCar3d**(*Ped ped, Vehicle car, float radiusX, float radiusY, float radiusZ, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0206/)*",
        "type": "function"
      },
      "locateCharOnFootChar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped nearPed",
            "name": "nearPed"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharOnFootChar2d**(*Ped ped, Ped nearPed, float radiusX, float radiusY, bool sphere*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00F3/)*",
        "type": "function"
      },
      "locateCharOnFootChar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped nearPed",
            "name": "nearPed"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharOnFootChar3d**(*Ped ped, Ped nearPed, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0105/)*",
        "type": "function"
      },
      "locateCharOnFootObject2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharOnFootObject2d**(*Ped ped, Object object, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0472/)*",
        "type": "function"
      },
      "locateCharOnFootObject3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateCharOnFootObject3d**(*Ped ped, Object object, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0475/)*",
        "type": "function"
      },
      "locateObject2d": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateObject2d**(*Object object, float X, float Y, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E5/)*",
        "type": "function"
      },
      "locateObject3d": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**locateObject3d**(*Object object, float X, float Y, float Z, float radiusX, float radiusY, float radiusZ, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E6/)*",
        "type": "function"
      },
      "locateStoppedCar2d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCar2d**(*Vehicle car, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01AE/)*",
        "type": "function"
      },
      "locateStoppedCar3d": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCar3d**(*Vehicle car, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B0/)*",
        "type": "function"
      },
      "locateStoppedCharAnyMeans2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCharAnyMeans2d**(*Ped ped, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00EF/)*",
        "type": "function"
      },
      "locateStoppedCharAnyMeans3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCharAnyMeans3d**(*Ped ped, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0101/)*",
        "type": "function"
      },
      "locateStoppedCharInCar2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCharInCar2d**(*Ped ped, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00F1/)*",
        "type": "function"
      },
      "locateStoppedCharInCar3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCharInCar3d**(*Ped ped, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0103/)*",
        "type": "function"
      },
      "locateStoppedCharOnFoot2d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pointX",
            "name": "pointX"
          },
          {
            "displayName": "float pointY",
            "name": "pointY"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCharOnFoot2d**(*Ped ped, float pointX, float pointY, float radiusX, float radiusY, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00F0/)*",
        "type": "function"
      },
      "locateStoppedCharOnFoot3d": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "float radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "float radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "bool sphere",
            "name": "sphere"
          }
        ],
        "description": "**locateStoppedCharOnFoot3d**(*Ped ped, float sphereX, float sphereY, float sphereZ, float radiusX, float radiusY, float radiusZ, bool sphere*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0102/)*",
        "type": "function"
      },
      "lockCarDoors": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int status",
            "name": "status"
          }
        ],
        "description": "**lockCarDoors**(*Vehicle car, int status*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/020A/)*",
        "type": "function"
      },
      "lockDoor": {
        "args": [
          {
            "displayName": "int door",
            "name": "door"
          },
          {
            "displayName": "bool lock",
            "name": "lock"
          }
        ],
        "description": "**lockDoor**(*int door, bool lock*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0905/)*",
        "type": "function"
      },
      "lua_thread": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/lua:lua_thread)*",
        "fields": {
          "create": {
            "args": [
              {
                "displayName": "function func",
                "name": "func"
              },
              {
                "name": "..."
              }
            ],
            "description": "**lua_thread.create**(*function func, ...*)  \n**Returns:** *LuaThread thread*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:lua_thread#create)*",
            "returnTypes": [
              {
                "name": "LuaThread",
                "type": "ref"
              }
            ],
            "type": "function"
          },
          "create_suspended": {
            "args": [
              {
                "displayName": "function func",
                "name": "func"
              }
            ],
            "description": "**lua_thread.create_suspended**(*function func*)  \n**Returns:** *LuaThread thread*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:lua_thread#create_suspended)*",
            "returnTypes": [
              {
                "name": "LuaThread",
                "type": "ref"
              }
            ],
            "type": "function"
          }
        },
        "type": "table"
      },
      "makeHeliComeCrashingDown": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          }
        ],
        "description": "**makeHeliComeCrashingDown**(*Vehicle heli*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0564/)*",
        "type": "function"
      },
      "makeObjectTargettable": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool targetable",
            "name": "targetable"
          }
        ],
        "description": "**makeObjectTargettable**(*Object object, bool targetable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/035D/)*",
        "type": "function"
      },
      "makePlayerFireProof": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool fireproof",
            "name": "fireproof"
          }
        ],
        "description": "**makePlayerFireProof**(*Player player, bool fireproof*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/055D/)*",
        "type": "function"
      },
      "makePlayerGangDisappear": {
        "description": "**makePlayerGangDisappear**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F5/)*",
        "type": "function"
      },
      "makePlayerGangReappear": {
        "description": "**makePlayerGangReappear**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F6/)*",
        "type": "function"
      },
      "makePlayerSafe": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**makePlayerSafe**(*Player player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03EF/)*",
        "type": "function"
      },
      "makeRoomInPlayerGangForMissionPeds": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**makeRoomInPlayerGangForMissionPeds**(*int group*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09DD/)*",
        "type": "function"
      },
      "manageAllPopulation": {
        "description": "**manageAllPopulation**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A13/)*",
        "type": "function"
      },
      "markCarAsConvoyCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool convoy",
            "name": "convoy"
          }
        ],
        "description": "**markCarAsConvoyCar**(*Vehicle car, bool convoy*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04BD/)*",
        "type": "function"
      },
      "markCarAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**markCarAsNoLongerNeeded**(*Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C3/)*",
        "type": "function"
      },
      "markCharAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**markCharAsNoLongerNeeded**(*Ped ped*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C2/)*",
        "type": "function"
      },
      "markMissionTrainAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**markMissionTrainAsNoLongerNeeded**(*Vehicle train*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07BE/)*",
        "type": "function"
      },
      "markMissionTrainsAsNoLongerNeeded": {
        "description": "**markMissionTrainsAsNoLongerNeeded**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06DA/)*",
        "type": "function"
      },
      "markModelAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**markModelAsNoLongerNeeded**(*Model modelId*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0249/)*",
        "type": "function"
      },
      "markObjectAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**markObjectAsNoLongerNeeded**(*Object object*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C4/)*",
        "type": "function"
      },
      "markRoadNodeAsDontWander": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**markRoadNodeAsDontWander**(*float atX, float atY, float atZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0994/)*",
        "type": "function"
      },
      "markStreamedScriptAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          }
        ],
        "description": "**markStreamedScriptAsNoLongerNeeded**(*int externalScript*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/090F/)*",
        "type": "function"
      },
      "markVehicleModAsNoLongerNeeded": {
        "args": [
          {
            "displayName": "Model component",
            "name": "component"
          }
        ],
        "description": "**markVehicleModAsNoLongerNeeded**(*Model component*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06EB/)*",
        "type": "function"
      },
      "memory": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/lua:memory)*",
        "fields": {
          "compare": {
            "args": [
              {
                "displayName": "int address1",
                "name": "address1"
              },
              {
                "displayName": "int address2",
                "name": "address2"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.compare**(*int address1, int address2, uint size, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorycompare)*",
            "type": "function"
          },
          "copy": {
            "args": [
              {
                "displayName": "int destAddress",
                "name": "destAddress"
              },
              {
                "displayName": "int srcAddress",
                "name": "srcAddress"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.copy**(*int destAddress, int srcAddress, uint size, [bool unprotect=false]*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorycopy)*",
            "type": "function"
          },
          "fill": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int value",
                "name": "value"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.fill**(*int address, int value, uint size, [bool unprotect=false]*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memoryfill)*",
            "type": "function"
          },
          "getdouble": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getdouble**(*int address, [bool unprotect=false]*)  \n**Returns:** *double value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetdouble)*",
            "type": "function"
          },
          "getfloat": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getfloat**(*int address, [bool unprotect=false]*)  \n**Returns:** *float value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetfloat)*",
            "type": "function"
          },
          "getint16": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getint16**(*int address, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetint16)*",
            "type": "function"
          },
          "getint32": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getint32**(*int address, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetint32)*",
            "type": "function"
          },
          "getint64": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getint64**(*int address, [bool unprotect=false]*)  \n**Returns:** *double value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetint64)*",
            "type": "function"
          },
          "getint8": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getint8**(*int address, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetint8)*",
            "type": "function"
          },
          "getuint16": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getuint16**(*int address, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetuint16)*",
            "type": "function"
          },
          "getuint32": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getuint32**(*int address, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetuint32)*",
            "type": "function"
          },
          "getuint64": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getuint64**(*int address, [bool unprotect=false]*)  \n**Returns:** *double value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetuint64)*",
            "type": "function"
          },
          "getuint8": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.getuint8**(*int address, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorygetuint8)*",
            "type": "function"
          },
          "protect": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "int newProtection",
                "name": "newProtection"
              }
            ],
            "description": "**memory.protect**(*int address, uint size, int newProtection*)  \n**Returns:** *int oldProtection*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memoryprotect)*",
            "type": "function"
          },
          "read": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.read**(*int address, uint size, [bool unprotect=false]*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memoryread)*",
            "type": "function"
          },
          "setdouble": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "double value",
                "name": "value"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setdouble**(*int address, double value, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetdouble)*",
            "type": "function"
          },
          "setfloat": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "float value",
                "name": "value"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setfloat**(*int address, float value, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetfloat)*",
            "type": "function"
          },
          "setint16": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int word",
                "name": "word"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setint16**(*int address, int word, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetint16)*",
            "type": "function"
          },
          "setint32": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int dword",
                "name": "dword"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setint32**(*int address, int dword, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetint32)*",
            "type": "function"
          },
          "setint64": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "double qword",
                "name": "qword"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setint64**(*int address, double qword, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetint64)*",
            "type": "function"
          },
          "setint8": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int byte",
                "name": "byte"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setint8**(*int address, int byte, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetint8)*",
            "type": "function"
          },
          "setuint16": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int word",
                "name": "word"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setuint16**(*int address, int word, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetuint16)*",
            "type": "function"
          },
          "setuint32": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int dword",
                "name": "dword"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setuint32**(*int address, int dword, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetuint32)*",
            "type": "function"
          },
          "setuint64": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "double qword",
                "name": "qword"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setuint64**(*int address, double qword, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetuint64)*",
            "type": "function"
          },
          "setuint8": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int byte",
                "name": "byte"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.setuint8**(*int address, int byte, [bool unprotect=false]*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorysetuint8)*",
            "type": "function"
          },
          "tohex": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.tohex**(*int address, uint size, [bool unprotect=false]*)  \n**Returns:** *string hexstr*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorytohex)*",
            "type": "function"
          },
          "tostring": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "[uint size]",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.tostring**(*int address, [uint size], [bool unprotect=false]*)  \n**Returns:** *string str*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorytostring)*",
            "type": "function"
          },
          "unprotect": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "uint size",
                "name": "size"
              }
            ],
            "description": "**memory.unprotect**(*int address, uint size*)  \n**Returns:** *int oldProtection*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memoryunprotect)*",
            "type": "function"
          },
          "write": {
            "args": [
              {
                "displayName": "int address",
                "name": "address"
              },
              {
                "displayName": "int value",
                "name": "value"
              },
              {
                "displayName": "uint size",
                "name": "size"
              },
              {
                "displayName": "[bool unprotect=false]",
                "name": "unprotect"
              }
            ],
            "description": "**memory.write**(*int address, int value, uint size, [bool unprotect=false]*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:memory#memorywrite)*",
            "type": "function"
          }
        },
        "type": "table"
      },
      "moveSearchlightBetweenCoords": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "float fromX",
            "name": "fromX"
          },
          {
            "displayName": "float fromY",
            "name": "fromY"
          },
          {
            "displayName": "float fromZ",
            "name": "fromZ"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**moveSearchlightBetweenCoords**(*Searchlight searchlight, float fromX, float fromY, float fromZ, float toX, float toY, float toZ, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B4/)*",
        "type": "function"
      },
      "noSpecialCameraForThisGarage": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          }
        ],
        "description": "**noSpecialCameraForThisGarage**(*int int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03DA/)*",
        "type": "function"
      },
      "openCarDoor": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          }
        ],
        "description": "**openCarDoor**(*Vehicle car, int door*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0657/)*",
        "type": "function"
      },
      "openCarDoorABit": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          },
          {
            "displayName": "float rotation",
            "name": "rotation"
          }
        ],
        "description": "**openCarDoorABit**(*Vehicle car, int door, float rotation*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A6/)*",
        "type": "function"
      },
      "openGarage": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          }
        ],
        "description": "**openGarage**(*GxtString garage*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0360/)*",
        "type": "function"
      },
      "openSequenceTask": {
        "description": "**openSequenceTask**()  \n**Returns:** *int task*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0615/)*",
        "type": "function"
      },
      "overrideNextRestart": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**overrideNextRestart**(*float atX, float atY, float atZ, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/016E/)*",
        "type": "function"
      },
      "pauseCurrentBeatTrack": {
        "args": [
          {
            "displayName": "bool paused",
            "name": "paused"
          }
        ],
        "description": "**pauseCurrentBeatTrack**(*bool paused*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0991/)*",
        "type": "function"
      },
      "pausePlaybackRecordedCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**pausePlaybackRecordedCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05ED/)*",
        "type": "function"
      },
      "pauseScmThread": {
        "args": [
          {
            "displayName": "int thread",
            "name": "thread"
          }
        ],
        "description": "**pauseScmThread**(*int thread*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BDE)*",
        "type": "function"
      },
      "performSequenceTask": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int task",
            "name": "task"
          }
        ],
        "description": "**performSequenceTask**(*Ped ped, int task*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0618/)*",
        "type": "function"
      },
      "performSequenceTaskFromProgress": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int sequence",
            "name": "sequence"
          },
          {
            "displayName": "int unkProgress1",
            "name": "unkProgress1"
          },
          {
            "displayName": "int unkProgress2",
            "name": "unkProgress2"
          }
        ],
        "description": "**performSequenceTaskFromProgress**(*Ped ped, int sequence, int unkProgress1, int unkProgress2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A0/)*",
        "type": "function"
      },
      "placeObjectRelativeToCar": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          }
        ],
        "description": "**placeObjectRelativeToCar**(*Object object, Vehicle car, float offsetX, float offsetY, float offsetZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/035C/)*",
        "type": "function"
      },
      "planeAttackPlayer": {
        "args": [
          {
            "displayName": "int hydra",
            "name": "hydra"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**planeAttackPlayer**(*int hydra, Vehicle car, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/070E/)*",
        "type": "function"
      },
      "planeAttackPlayerUsingDogFight": {
        "args": [
          {
            "displayName": "int hydra",
            "name": "hydra"
          },
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**planeAttackPlayerUsingDogFight**(*int hydra, Player player, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A2/)*",
        "type": "function"
      },
      "planeFlyInDirection": {
        "args": [
          {
            "displayName": "int plane",
            "name": "plane"
          },
          {
            "displayName": "float direction",
            "name": "direction"
          },
          {
            "displayName": "float altitudemin",
            "name": "altitudemin"
          },
          {
            "displayName": "float altitudemax",
            "name": "altitudemax"
          }
        ],
        "description": "**planeFlyInDirection**(*int plane, float direction, float altitudemin, float altitudemax*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/070F/)*",
        "type": "function"
      },
      "planeFollowEntity": {
        "args": [
          {
            "displayName": "int plane",
            "name": "plane"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**planeFollowEntity**(*int plane, Ped ped, Vehicle car, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0710/)*",
        "type": "function"
      },
      "planeGotoCoords": {
        "args": [
          {
            "displayName": "int plane",
            "name": "plane"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          }
        ],
        "description": "**planeGotoCoords**(*int plane, float X, float Y, float Z, float z1, float z2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D2/)*",
        "type": "function"
      },
      "planeStartsInAir": {
        "args": [
          {
            "displayName": "int hydra",
            "name": "hydra"
          }
        ],
        "description": "**planeStartsInAir**(*int hydra*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0745/)*",
        "type": "function"
      },
      "playAndKillFxSystem": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          }
        ],
        "description": "**playAndKillFxSystem**(*Particle particle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/064F/)*",
        "type": "function"
      },
      "playBeatTrack": {
        "description": "**playBeatTrack**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0954/)*",
        "type": "function"
      },
      "playFxSystem": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          }
        ],
        "description": "**playFxSystem**(*Particle particle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/064C/)*",
        "type": "function"
      },
      "playMissionAudio": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**playMissionAudio**(*int id*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D1/)*",
        "type": "function"
      },
      "playMissionPassedTune": {
        "args": [
          {
            "displayName": "int music",
            "name": "music"
          }
        ],
        "description": "**playMissionPassedTune**(*int music*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0394/)*",
        "type": "function"
      },
      "playObjectAnim": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string IFPFile",
            "name": "IFPFile"
          },
          {
            "displayName": "float framedelta",
            "name": "framedelta"
          },
          {
            "displayName": "bool lockF",
            "name": "lockF"
          },
          {
            "displayName": "bool loop",
            "name": "loop"
          }
        ],
        "description": "**playObjectAnim**(*Object object, string animation, string IFPFile, float framedelta, bool lockF, bool loop*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/075A/)*",
        "type": "function"
      },
      "playerEnteredBuildingsiteCrane": {
        "description": "**playerEnteredBuildingsiteCrane**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/079E/)*",
        "type": "function"
      },
      "playerEnteredDockCrane": {
        "description": "**playerEnteredDockCrane**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/079D/)*",
        "type": "function"
      },
      "playerEnteredLasVegasCrane": {
        "description": "**playerEnteredLasVegasCrane**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07FA/)*",
        "type": "function"
      },
      "playerEnteredQuarryCrane": {
        "description": "**playerEnteredQuarryCrane**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F9/)*",
        "type": "function"
      },
      "playerHandle": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/moonloader:globals)*",
        "name": "Player",
        "type": "ref"
      },
      "playerLeftCrane": {
        "description": "**playerLeftCrane**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/079F/)*",
        "type": "function"
      },
      "playerMadeProgress": {
        "args": [
          {
            "displayName": "int progress",
            "name": "progress"
          }
        ],
        "description": "**playerMadeProgress**(*int progress*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/030C/)*",
        "type": "function"
      },
      "playerPed": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/moonloader:globals)*",
        "name": "Ped",
        "type": "ref"
      },
      "playerTakeOffGoggles": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool useAnim",
            "name": "useAnim"
          }
        ],
        "description": "**playerTakeOffGoggles**(*Player player, bool useAnim*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09EB/)*",
        "type": "function"
      },
      "pointCameraAtCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**pointCameraAtCar**(*Vehicle car, int mode, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0158/)*",
        "type": "function"
      },
      "pointCameraAtChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**pointCameraAtChar**(*Ped ped, int mode, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0159/)*",
        "type": "function"
      },
      "pointCameraAtPoint": {
        "args": [
          {
            "displayName": "float pointAtX",
            "name": "pointAtX"
          },
          {
            "displayName": "float pointAtY",
            "name": "pointAtY"
          },
          {
            "displayName": "float pointAtZ",
            "name": "pointAtZ"
          },
          {
            "displayName": "int switchstyle",
            "name": "switchstyle"
          }
        ],
        "description": "**pointCameraAtPoint**(*float pointAtX, float pointAtY, float pointAtZ, int switchstyle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0160/)*",
        "type": "function"
      },
      "pointSearchlightAtChar": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**pointSearchlightAtChar**(*Searchlight searchlight, Ped ped, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B6/)*",
        "type": "function"
      },
      "pointSearchlightAtCoord": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**pointSearchlightAtCoord**(*Searchlight searchlight, float toX, float toY, float toZ, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B5/)*",
        "type": "function"
      },
      "pointSearchlightAtVehicle": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**pointSearchlightAtVehicle**(*Searchlight searchlight, Vehicle car, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06BF/)*",
        "type": "function"
      },
      "policeHeliChaseEntity": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**policeHeliChaseEntity**(*Vehicle heli, Ped ped, Vehicle car, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0727/)*",
        "type": "function"
      },
      "policeRadioMessage": {
        "args": [
          {
            "displayName": "float float1",
            "name": "float1"
          },
          {
            "displayName": "float float2",
            "name": "float2"
          },
          {
            "displayName": "float float3",
            "name": "float3"
          }
        ],
        "description": "**policeRadioMessage**(*float float1, float float2, float float3*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03AA/)*",
        "type": "function"
      },
      "popCarBoot": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**popCarBoot**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E1/)*",
        "type": "function"
      },
      "popCarDoor": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int door",
            "name": "door"
          },
          {
            "displayName": "bool visible",
            "name": "visible"
          }
        ],
        "description": "**popCarDoor**(*Vehicle car, int door, bool visible*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0689/)*",
        "type": "function"
      },
      "popCarPanel": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int component",
            "name": "component"
          },
          {
            "displayName": "bool effectFlag",
            "name": "effectFlag"
          }
        ],
        "description": "**popCarPanel**(*Vehicle car, int component, bool effectFlag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0697/)*",
        "type": "function"
      },
      "popFloat": {
        "description": "**popFloat**()  \n**Returns:** *float val*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:popFloat)*",
        "type": "function"
      },
      "preloadBeatTrack": {
        "args": [
          {
            "displayName": "int soundtrack",
            "name": "soundtrack"
          }
        ],
        "description": "**preloadBeatTrack**(*int soundtrack*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0952/)*",
        "type": "function"
      },
      "print": {
        "args": [
          {
            "displayName": "any value",
            "name": "value"
          },
          {
            "name": "..."
          }
        ],
        "description": "**print**(*any value, ...*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:print)*",
        "type": "function"
      },
      "printBig": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**printBig**(*GxtString gxtString, int time, int style*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00BA/)*",
        "type": "function"
      },
      "printBigQ": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**printBigQ**(*GxtString gxtString, int time, int style*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0217/)*",
        "type": "function"
      },
      "printHelp": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**printHelp**(*GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E5/)*",
        "type": "function"
      },
      "printHelpForever": {
        "args": [
          {
            "displayName": "GxtString text",
            "name": "text"
          }
        ],
        "description": "**printHelpForever**(*GxtString text*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0512/)*",
        "type": "function"
      },
      "printHelpForeverWithNumber": {
        "args": [
          {
            "displayName": "GxtString text",
            "name": "text"
          },
          {
            "displayName": "int number",
            "name": "number"
          }
        ],
        "description": "**printHelpForeverWithNumber**(*GxtString text, int number*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0513/)*",
        "type": "function"
      },
      "printHelpString": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          }
        ],
        "description": "**printHelpString**(*string text*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ACA/) / [ru](http://blast.hk/wiki/lua:printHelpString)*",
        "type": "function"
      },
      "printString": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**printString**(*string text, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ACC/) / [ru](http://blast.hk/wiki/lua:printString)*",
        "type": "function"
      },
      "printStringInStringNow": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "GxtString string",
            "name": "string"
          },
          {
            "displayName": "int time1",
            "name": "time1"
          },
          {
            "displayName": "int time2",
            "name": "time2"
          }
        ],
        "description": "**printStringInStringNow**(*GxtString gxtString, GxtString string, int time1, int time2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0384/)*",
        "type": "function"
      },
      "printStringNow": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**printStringNow**(*string text, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ACD/) / [ru](http://blast.hk/wiki/lua:printStringNow)*",
        "type": "function"
      },
      "printStyledString": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**printStyledString**(*string text, int time, int style*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ACB/) / [ru](http://blast.hk/wiki/lua:printStyledString)*",
        "type": "function"
      },
      "printText": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printText**(*GxtString gxtString, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00BB/)*",
        "type": "function"
      },
      "printTextNow": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printTextNow**(*GxtString gxtString, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00BC/)*",
        "type": "function"
      },
      "printWith2NumbersBig": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**printWith2NumbersBig**(*GxtString gxtString, int numbers1, int numbers2, int time, int style*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/036D/)*",
        "type": "function"
      },
      "printWith2NumbersNow": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWith2NumbersNow**(*GxtString gxtString, int numbers1, int numbers2, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02FD/)*",
        "type": "function"
      },
      "printWith3Numbers": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          },
          {
            "displayName": "int numbers3",
            "name": "numbers3"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWith3Numbers**(*GxtString gxtString, int numbers1, int numbers2, int numbers3, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02FF/)*",
        "type": "function"
      },
      "printWith4Numbers": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          },
          {
            "displayName": "int numbers3",
            "name": "numbers3"
          },
          {
            "displayName": "int numbers4",
            "name": "numbers4"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWith4Numbers**(*GxtString gxtString, int numbers1, int numbers2, int numbers3, int numbers4, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0302/)*",
        "type": "function"
      },
      "printWith4NumbersNow": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          },
          {
            "displayName": "int numbers3",
            "name": "numbers3"
          },
          {
            "displayName": "int numbers4",
            "name": "numbers4"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWith4NumbersNow**(*GxtString gxtString, int numbers1, int numbers2, int numbers3, int numbers4, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0303/)*",
        "type": "function"
      },
      "printWith6Numbers": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          },
          {
            "displayName": "int numbers3",
            "name": "numbers3"
          },
          {
            "displayName": "int numbers4",
            "name": "numbers4"
          },
          {
            "displayName": "int numbers5",
            "name": "numbers5"
          },
          {
            "displayName": "int numbers6",
            "name": "numbers6"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWith6Numbers**(*GxtString gxtString, int numbers1, int numbers2, int numbers3, int numbers4, int numbers5, int numbers6, int time, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0308/)*",
        "type": "function"
      },
      "printWithNumber": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int number",
            "name": "number"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWithNumber**(*GxtString gxtString, int number, int time, int flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01E4/)*",
        "type": "function"
      },
      "printWithNumberBig": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int number",
            "name": "number"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**printWithNumberBig**(*GxtString gxtString, int number, int time, int style*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01E3/)*",
        "type": "function"
      },
      "printWithNumberNow": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int number",
            "name": "number"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**printWithNumberNow**(*GxtString gxtString, int number, int time, int flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01E5/)*",
        "type": "function"
      },
      "processLineOfSight": {
        "args": [
          {
            "displayName": "float originX",
            "name": "originX"
          },
          {
            "displayName": "float originY",
            "name": "originY"
          },
          {
            "displayName": "float originZ",
            "name": "originZ"
          },
          {
            "displayName": "float targetX",
            "name": "targetX"
          },
          {
            "displayName": "float targetY",
            "name": "targetY"
          },
          {
            "displayName": "float targetZ",
            "name": "targetZ"
          },
          {
            "displayName": "[bool checkSolid=true]",
            "name": "checkSolid"
          },
          {
            "displayName": "[bool car=false]",
            "name": "car"
          },
          {
            "displayName": "[bool ped=false]",
            "name": "ped"
          },
          {
            "displayName": "[bool object=false]",
            "name": "object"
          },
          {
            "displayName": "[bool particle=false]",
            "name": "particle"
          },
          {
            "displayName": "[bool seeThrough=false]",
            "name": "seeThrough"
          },
          {
            "displayName": "[bool ignoreSomeObjects=false]",
            "name": "ignoreSomeObjects"
          },
          {
            "displayName": "[bool shootThrough=false]",
            "name": "shootThrough"
          }
        ],
        "description": "**processLineOfSight**(*float originX, float originY, float originZ, float targetX, float targetY, float targetZ, [bool checkSolid=true], [bool car=false], [bool ped=false], [bool object=false], [bool particle=false], [bool seeThrough=false], [bool ignoreSomeObjects=false], [bool shootThrough=false]*)  \n**Returns:** *bool result, table colPoint*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:processLineOfSight)*",
        "type": "function"
      },
      "raknetBitStreamDecodeString": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**raknetBitStreamDecodeString**(*Bitstream bs, int size*)  \n**Returns:** *zstring string*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF4)*",
        "type": "function"
      },
      "raknetBitStreamEncodeString": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "zstring string",
            "name": "string"
          }
        ],
        "description": "**raknetBitStreamEncodeString**(*Bitstream bs, zstring string*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF5)*",
        "type": "function"
      },
      "raknetBitStreamGetDataPtr": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamGetDataPtr**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF3)*",
        "type": "function"
      },
      "raknetBitStreamGetNumberOfBitsUsed": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamGetNumberOfBitsUsed**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BEE)*",
        "type": "function"
      },
      "raknetBitStreamGetNumberOfBytesUsed": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamGetNumberOfBytesUsed**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BEF)*",
        "type": "function"
      },
      "raknetBitStreamGetNumberOfUnreadBits": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamGetNumberOfUnreadBits**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF0)*",
        "type": "function"
      },
      "raknetBitStreamGetReadOffset": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamGetReadOffset**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF2)*",
        "type": "function"
      },
      "raknetBitStreamGetWriteOffset": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamGetWriteOffset**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF1)*",
        "type": "function"
      },
      "raknetBitStreamIgnoreBits": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int amount",
            "name": "amount"
          }
        ],
        "description": "**raknetBitStreamIgnoreBits**(*Bitstream bs, int amount*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BEB)*",
        "type": "function"
      },
      "raknetBitStreamReadBool": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamReadBool**(*Bitstream bs*)  \n**Returns:** *bool value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE7)*",
        "type": "function"
      },
      "raknetBitStreamReadBuffer": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int dest",
            "name": "dest"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**raknetBitStreamReadBuffer**(*Bitstream bs, int dest, int size*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE8)*",
        "type": "function"
      },
      "raknetBitStreamReadFloat": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamReadFloat**(*Bitstream bs*)  \n**Returns:** *float value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE7)*",
        "type": "function"
      },
      "raknetBitStreamReadInt16": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamReadInt16**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE7)*",
        "type": "function"
      },
      "raknetBitStreamReadInt32": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamReadInt32**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE7)*",
        "type": "function"
      },
      "raknetBitStreamReadInt8": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamReadInt8**(*Bitstream bs*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE7)*",
        "type": "function"
      },
      "raknetBitStreamReadString": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**raknetBitStreamReadString**(*Bitstream bs, int size*)  \n**Returns:** *string value*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE8)*",
        "type": "function"
      },
      "raknetBitStreamResetReadPointer": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamResetReadPointer**(*Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BE9)*",
        "type": "function"
      },
      "raknetBitStreamResetWritePointer": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetBitStreamResetWritePointer**(*Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BEA)*",
        "type": "function"
      },
      "raknetBitStreamSetReadOffset": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int offset",
            "name": "offset"
          }
        ],
        "description": "**raknetBitStreamSetReadOffset**(*Bitstream bs, int offset*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BED)*",
        "type": "function"
      },
      "raknetBitStreamSetWriteOffset": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int offset",
            "name": "offset"
          }
        ],
        "description": "**raknetBitStreamSetWriteOffset**(*Bitstream bs, int offset*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BEC)*",
        "type": "function"
      },
      "raknetBitStreamWriteBitStream": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "Bitstream bitStream",
            "name": "bitStream"
          }
        ],
        "description": "**raknetBitStreamWriteBitStream**(*Bitstream bs, Bitstream bitStream*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteBool": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "bool value",
            "name": "value"
          }
        ],
        "description": "**raknetBitStreamWriteBool**(*Bitstream bs, bool value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteBuffer": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int dest",
            "name": "dest"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**raknetBitStreamWriteBuffer**(*Bitstream bs, int dest, int size*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteFloat": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "float value",
            "name": "value"
          }
        ],
        "description": "**raknetBitStreamWriteFloat**(*Bitstream bs, float value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteInt16": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**raknetBitStreamWriteInt16**(*Bitstream bs, int value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteInt32": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**raknetBitStreamWriteInt32**(*Bitstream bs, int value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteInt8": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**raknetBitStreamWriteInt8**(*Bitstream bs, int value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetBitStreamWriteString": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "string str",
            "name": "str"
          }
        ],
        "description": "**raknetBitStreamWriteString**(*Bitstream bs, string str*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B40)*",
        "type": "function"
      },
      "raknetDeleteBitStream": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetDeleteBitStream**(*Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B3E)*",
        "type": "function"
      },
      "raknetEmulPacketReceiveBitStream": {
        "args": [
          {
            "displayName": "int packet",
            "name": "packet"
          },
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetEmulPacketReceiveBitStream**(*int packet, Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF7)*",
        "type": "function"
      },
      "raknetEmulRpcReceiveBitStream": {
        "args": [
          {
            "displayName": "int rpc",
            "name": "rpc"
          },
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetEmulRpcReceiveBitStream**(*int rpc, Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF6)*",
        "type": "function"
      },
      "raknetGetPacketName": {
        "args": [
          {
            "displayName": "int packet",
            "name": "packet"
          }
        ],
        "description": "**raknetGetPacketName**(*int packet*)  \n**Returns:** *zstring name*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF9)*",
        "type": "function"
      },
      "raknetGetRpcName": {
        "args": [
          {
            "displayName": "int rpc",
            "name": "rpc"
          }
        ],
        "description": "**raknetGetRpcName**(*int rpc*)  \n**Returns:** *zstring name*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BF8)*",
        "type": "function"
      },
      "raknetNewBitStream": {
        "description": "**raknetNewBitStream**()  \n**Returns:** *Bitstream bs*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B3D)*",
        "type": "function"
      },
      "raknetResetBitStream": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetResetBitStream**(*Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B3F)*",
        "type": "function"
      },
      "raknetSendBitStream": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetSendBitStream**(*Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B8B)*",
        "type": "function"
      },
      "raknetSendBitStreamEx": {
        "args": [
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int priority",
            "name": "priority"
          },
          {
            "displayName": "int reliability",
            "name": "reliability"
          },
          {
            "displayName": "int channel",
            "name": "channel"
          }
        ],
        "description": "**raknetSendBitStreamEx**(*Bitstream bs, int priority, int reliability, int channel*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B42)*",
        "type": "function"
      },
      "raknetSendRpc": {
        "args": [
          {
            "displayName": "int rpc",
            "name": "rpc"
          },
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          }
        ],
        "description": "**raknetSendRpc**(*int rpc, Bitstream bs*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B8A)*",
        "type": "function"
      },
      "raknetSendRpcEx": {
        "args": [
          {
            "displayName": "int rpc",
            "name": "rpc"
          },
          {
            "displayName": "Bitstream bs",
            "name": "bs"
          },
          {
            "displayName": "int priority",
            "name": "priority"
          },
          {
            "displayName": "int reliability",
            "name": "reliability"
          },
          {
            "displayName": "int channel",
            "name": "channel"
          },
          {
            "displayName": "bool timestamp",
            "name": "timestamp"
          }
        ],
        "description": "**raknetSendRpcEx**(*int rpc, Bitstream bs, int priority, int reliability, int channel, bool timestamp*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B41)*",
        "type": "function"
      },
      "randomPassengerSay": {
        "args": [
          {
            "displayName": "int passengers",
            "name": "passengers"
          },
          {
            "displayName": "int audioTable",
            "name": "audioTable"
          }
        ],
        "description": "**randomPassengerSay**(*int passengers, int audioTable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09AB/)*",
        "type": "function"
      },
      "readKillFrenzyStatus": {
        "description": "**readKillFrenzyStatus**()  \n**Returns:** *bool result, int status*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01FA/)*",
        "type": "function"
      },
      "readMemory": {
        "args": [
          {
            "displayName": "int address",
            "name": "address"
          },
          {
            "displayName": "int size",
            "name": "size"
          },
          {
            "displayName": "bool virtualProtect",
            "name": "virtualProtect"
          }
        ],
        "description": "**readMemory**(*int address, int size, bool virtualProtect*)  \n**Returns:** *int value*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:readMemory)*",
        "type": "function"
      },
      "registerAttractorScriptBrainForCodeUse": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          },
          {
            "displayName": "GxtString script",
            "name": "script"
          }
        ],
        "description": "**registerAttractorScriptBrainForCodeUse**(*int handle, GxtString script*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0884/)*",
        "type": "function"
      },
      "registerBestPosition": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "float float",
            "name": "float"
          }
        ],
        "description": "**registerBestPosition**(*int stat, float float*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0582/)*",
        "type": "function"
      },
      "registerFastestTime": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "int to",
            "name": "to"
          }
        ],
        "description": "**registerFastestTime**(*int stat, int to*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/042E/)*",
        "type": "function"
      },
      "registerFloatStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "float value",
            "name": "value"
          }
        ],
        "description": "**registerFloatStat**(*int stat, float value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0628/)*",
        "type": "function"
      },
      "registerHighestScore": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          },
          {
            "displayName": "int int2",
            "name": "int2"
          }
        ],
        "description": "**registerHighestScore**(*int int1, int int2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/042F/)*",
        "type": "function"
      },
      "registerIntStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "int int",
            "name": "int"
          }
        ],
        "description": "**registerIntStat**(*int stat, int int*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0627/)*",
        "type": "function"
      },
      "registerMissionGiven": {
        "description": "**registerMissionGiven**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0317/)*",
        "type": "function"
      },
      "registerMissionPassed": {
        "args": [
          {
            "displayName": "GxtString mission",
            "name": "mission"
          }
        ],
        "description": "**registerMissionPassed**(*GxtString mission*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0318/)*",
        "type": "function"
      },
      "registerOddjobMissionPassed": {
        "description": "**registerOddjobMissionPassed**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0595/)*",
        "type": "function"
      },
      "registerScriptBrainForCodeUse": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**registerScriptBrainForCodeUse**(*int id, GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07D3/)*",
        "type": "function"
      },
      "releaseAudioStream": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          }
        ],
        "description": "**releaseAudioStream**(*int handle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AAE/)*",
        "type": "function"
      },
      "releaseEntityFromRopeForObject": {
        "args": [
          {
            "displayName": "int magnet",
            "name": "magnet"
          }
        ],
        "description": "**releaseEntityFromRopeForObject**(*int magnet*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0799/)*",
        "type": "function"
      },
      "releaseEntityFromWinch": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          }
        ],
        "description": "**releaseEntityFromWinch**(*Vehicle heli*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0789/)*",
        "type": "function"
      },
      "releasePathNodes": {
        "description": "**releasePathNodes**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0607/)*",
        "type": "function"
      },
      "releaseTwoPlayerDistance": {
        "description": "**releaseTwoPlayerDistance**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06F2/)*",
        "type": "function"
      },
      "releaseWeather": {
        "description": "**releaseWeather**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B7/)*",
        "type": "function"
      },
      "reloadScripts": {
        "description": "**reloadScripts**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:reloadScripts)*",
        "type": "function"
      },
      "removeAllCharWeapons": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**removeAllCharWeapons**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/048F/)*",
        "type": "function"
      },
      "removeAllScriptFires": {
        "description": "**removeAllScriptFires**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/031A/)*",
        "type": "function"
      },
      "removeAnimation": {
        "args": [
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**removeAnimation**(*string animation*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04EF/)*",
        "type": "function"
      },
      "removeBlip": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          }
        ],
        "description": "**removeBlip**(*Marker marker*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0164/)*",
        "type": "function"
      },
      "removeCarRecording": {
        "args": [
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**removeCarRecording**(*int path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0873/)*",
        "type": "function"
      },
      "removeCharElegantly": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**removeCharElegantly**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/034F/)*",
        "type": "function"
      },
      "removeCharFromCarMaintainPosition": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**removeCharFromCarMaintainPosition**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C9/)*",
        "type": "function"
      },
      "removeCharFromGroup": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**removeCharFromGroup**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C9/)*",
        "type": "function"
      },
      "removeDecisionMaker": {
        "args": [
          {
            "displayName": "int maker",
            "name": "maker"
          }
        ],
        "description": "**removeDecisionMaker**(*int maker*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/065C/)*",
        "type": "function"
      },
      "removeGroup": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          }
        ],
        "description": "**removeGroup**(*int group*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0632/)*",
        "type": "function"
      },
      "removeIpl": {
        "args": [
          {
            "displayName": "string group",
            "name": "group"
          }
        ],
        "description": "**removeIpl**(*string group*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0777/)*",
        "type": "function"
      },
      "removeIplDiscreetly": {
        "args": [
          {
            "displayName": "string group",
            "name": "group"
          }
        ],
        "description": "**removeIplDiscreetly**(*string group*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0778/)*",
        "type": "function"
      },
      "removeObjectElegantly": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**removeObjectElegantly**(*Object object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A2/)*",
        "type": "function"
      },
      "removeOilPuddlesInArea": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          }
        ],
        "description": "**removeOilPuddlesInArea**(*float x1, float y1, float x2, float y2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07DF/)*",
        "type": "function"
      },
      "removePickup": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          }
        ],
        "description": "**removePickup**(*Pickup pickup*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0215/)*",
        "type": "function"
      },
      "removePriceModifier": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          }
        ],
        "description": "**removePriceModifier**(*int item*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08C9/)*",
        "type": "function"
      },
      "removeRcBuggy": {
        "description": "**removeRcBuggy**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04DB/)*",
        "type": "function"
      },
      "removeScriptFire": {
        "args": [
          {
            "displayName": "int fire",
            "name": "fire"
          }
        ],
        "description": "**removeScriptFire**(*int fire*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02D1/)*",
        "type": "function"
      },
      "removeSound": {
        "args": [
          {
            "displayName": "int sound",
            "name": "sound"
          }
        ],
        "description": "**removeSound**(*int sound*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/018E/)*",
        "type": "function"
      },
      "removeSphere": {
        "args": [
          {
            "displayName": "int sphere",
            "name": "sphere"
          }
        ],
        "description": "**removeSphere**(*int sphere*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03BD/)*",
        "type": "function"
      },
      "removeStreamedScript": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          }
        ],
        "description": "**removeStreamedScript**(*int externalScript*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0910/)*",
        "type": "function"
      },
      "removeStuckCarCheck": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**removeStuckCarCheck**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03CD/)*",
        "type": "function"
      },
      "removeTextureDictionary": {
        "description": "**removeTextureDictionary**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0391/)*",
        "type": "function"
      },
      "removeUpsidedownCarCheck": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**removeUpsidedownCarCheck**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0191/)*",
        "type": "function"
      },
      "removeUser3dMarker": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          }
        ],
        "description": "**removeUser3dMarker**(*Marker marker*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A41/)*",
        "type": "function"
      },
      "removeVehicleMod": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int componentId",
            "name": "componentId"
          }
        ],
        "description": "**removeVehicleMod**(*Vehicle car, int componentId*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E8/)*",
        "type": "function"
      },
      "removeWeaponFromChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**removeWeaponFromChar**(*Ped ped, int weapon*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0555/)*",
        "type": "function"
      },
      "renderBegin": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**renderBegin**(*int type*)",
        "type": "function"
      },
      "renderBindTexture": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          }
        ],
        "description": "**renderBindTexture**(*int texture*)",
        "type": "function"
      },
      "renderColor": {
        "args": [
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**renderColor**(*int color*)",
        "type": "function"
      },
      "renderCreateFont": {
        "args": [
          {
            "displayName": "zstring font",
            "name": "font"
          },
          {
            "displayName": "int height",
            "name": "height"
          },
          {
            "displayName": "int flags",
            "name": "flags"
          }
        ],
        "description": "**renderCreateFont**(*zstring font, int height, int flags*)  \n**Returns:** *int font*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B6D)*",
        "type": "function"
      },
      "renderDrawBox": {
        "args": [
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**renderDrawBox**(*int posX, int posY, int sizeX, int sizeY, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B69)*",
        "type": "function"
      },
      "renderDrawBoxWithBorder": {
        "args": [
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          },
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "int bsize",
            "name": "bsize"
          },
          {
            "displayName": "int bcolor",
            "name": "bcolor"
          }
        ],
        "description": "**renderDrawBoxWithBorder**(*int posX, int posY, int sizeX, int sizeY, int color, int bsize, int bcolor*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B6A)*",
        "type": "function"
      },
      "renderDrawLine": {
        "args": [
          {
            "displayName": "int pos1X",
            "name": "pos1X"
          },
          {
            "displayName": "int pos1Y",
            "name": "pos1Y"
          },
          {
            "displayName": "int pos2X",
            "name": "pos2X"
          },
          {
            "displayName": "int pos2Y",
            "name": "pos2Y"
          },
          {
            "displayName": "int width",
            "name": "width"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**renderDrawLine**(*int pos1X, int pos1Y, int pos2X, int pos2Y, int width, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B68)*",
        "type": "function"
      },
      "renderDrawPolygon": {
        "args": [
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          },
          {
            "displayName": "int corners",
            "name": "corners"
          },
          {
            "displayName": "float rotation",
            "name": "rotation"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**renderDrawPolygon**(*int posX, int posY, int sizeX, int sizeY, int corners, float rotation, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B70)*",
        "type": "function"
      },
      "renderDrawTexture": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "int sizeY",
            "name": "sizeY"
          },
          {
            "displayName": "float rotation",
            "name": "rotation"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**renderDrawTexture**(*int texture, int posX, int posY, int sizeX, int sizeY, float rotation, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B73)*",
        "type": "function"
      },
      "renderEnd": {
        "type": "function"
      },
      "renderFontDrawText": {
        "args": [
          {
            "displayName": "int font",
            "name": "font"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int posX",
            "name": "posX"
          },
          {
            "displayName": "int posY",
            "name": "posY"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**renderFontDrawText**(*int font, zstring text, int posX, int posY, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B6F)*",
        "type": "function"
      },
      "renderGetFontDrawHeight": {
        "args": [
          {
            "displayName": "int font",
            "name": "font"
          }
        ],
        "description": "**renderGetFontDrawHeight**(*int font*)  \n**Returns:** *int height*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B6C)*",
        "type": "function"
      },
      "renderGetFontDrawTextLength": {
        "args": [
          {
            "displayName": "int font",
            "name": "font"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**renderGetFontDrawTextLength**(*int font, zstring text*)  \n**Returns:** *int length*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B6B)*",
        "type": "function"
      },
      "renderGetTextureSize": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          }
        ],
        "description": "**renderGetTextureSize**(*int texture*)  \n**Returns:** *int sizeX, int sizeY*",
        "type": "function"
      },
      "renderGetTextureSprite": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          }
        ],
        "description": "**renderGetTextureSprite**(*int texture*)  \n**Returns:** *int sprite*",
        "type": "function"
      },
      "renderGetTextureStruct": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          }
        ],
        "description": "**renderGetTextureStruct**(*int texture*)  \n**Returns:** *int struct*",
        "type": "function"
      },
      "renderLoadTextureFromFile": {
        "args": [
          {
            "displayName": "zstring file",
            "name": "file"
          }
        ],
        "description": "**renderLoadTextureFromFile**(*zstring file*)  \n**Returns:** *int texture*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B71)*",
        "type": "function"
      },
      "renderLoadTextureFromFileInMemory": {
        "args": [
          {
            "displayName": "int pointer",
            "name": "pointer"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**renderLoadTextureFromFileInMemory**(*int pointer, int size*)  \n**Returns:** *bool result, int texture*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C8C)*",
        "type": "function"
      },
      "renderReleaseFont": {
        "args": [
          {
            "displayName": "int font",
            "name": "font"
          }
        ],
        "description": "**renderReleaseFont**(*int font*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B6E)*",
        "type": "function"
      },
      "renderReleaseTexture": {
        "args": [
          {
            "displayName": "int texture",
            "name": "texture"
          }
        ],
        "description": "**renderReleaseTexture**(*int texture*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B72)*",
        "type": "function"
      },
      "renderSetRenderState": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "int state",
            "name": "state"
          }
        ],
        "description": "**renderSetRenderState**(*int type, int state*)",
        "type": "function"
      },
      "renderSetTexCoord": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          }
        ],
        "description": "**renderSetTexCoord**(*float posX, float posY*)",
        "type": "function"
      },
      "renderVertex": {
        "args": [
          {
            "displayName": "float vX",
            "name": "vX"
          },
          {
            "displayName": "float vY",
            "name": "vY"
          }
        ],
        "description": "**renderVertex**(*float vX, float vY*)",
        "type": "function"
      },
      "reportMissionAudioEventAtCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**reportMissionAudioEventAtCar**(*Vehicle car, int event*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F7/)*",
        "type": "function"
      },
      "reportMissionAudioEventAtChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**reportMissionAudioEventAtChar**(*Ped ped, int event*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F1/)*",
        "type": "function"
      },
      "reportMissionAudioEventAtObject": {
        "args": [
          {
            "displayName": "int at",
            "name": "at"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**reportMissionAudioEventAtObject**(*int at, int event*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/097B/)*",
        "type": "function"
      },
      "reportMissionAudioEventAtPosition": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int event",
            "name": "event"
          }
        ],
        "description": "**reportMissionAudioEventAtPosition**(*float atX, float atY, float atZ, int event*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/097A/)*",
        "type": "function"
      },
      "representFloatAsInt": {
        "args": [
          {
            "displayName": "float f",
            "name": "f"
          }
        ],
        "description": "**representFloatAsInt**(*float f*)  \n**Returns:** *int i*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:representFloatAsInt)*",
        "type": "function"
      },
      "representIntAsFloat": {
        "args": [
          {
            "displayName": "int i",
            "name": "i"
          }
        ],
        "description": "**representIntAsFloat**(*int i*)  \n**Returns:** *float i*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:representIntAsFloat)*",
        "type": "function"
      },
      "requestAnimation": {
        "args": [
          {
            "displayName": "string animation",
            "name": "animation"
          }
        ],
        "description": "**requestAnimation**(*string animation*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04ED/) / [ru](http://blast.hk/wiki/opcodes:04ED)*",
        "type": "function"
      },
      "requestCarRecording": {
        "args": [
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**requestCarRecording**(*int path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C0/)*",
        "type": "function"
      },
      "requestCollision": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          }
        ],
        "description": "**requestCollision**(*float X, float Y*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E4/)*",
        "type": "function"
      },
      "requestIpl": {
        "args": [
          {
            "displayName": "string group",
            "name": "group"
          }
        ],
        "description": "**requestIpl**(*string group*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0776/)*",
        "type": "function"
      },
      "requestModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**requestModel**(*Model modelId*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0247/) / [ru](http://blast.hk/wiki/opcodes:0247)*",
        "type": "function"
      },
      "requestVehicleMod": {
        "args": [
          {
            "displayName": "Model component",
            "name": "component"
          }
        ],
        "description": "**requestVehicleMod**(*Model component*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E9/)*",
        "type": "function"
      },
      "resetHavocCausedByPlayer": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          }
        ],
        "description": "**resetHavocCausedByPlayer**(*int int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04BE/)*",
        "type": "function"
      },
      "resetNumOfModelsKilledByPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**resetNumOfModelsKilledByPlayer**(*Player player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0297/)*",
        "type": "function"
      },
      "resetStuffUponResurrection": {
        "description": "**resetStuffUponResurrection**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0974/)*",
        "type": "function"
      },
      "resetVehicleCameraTweak": {
        "description": "**resetVehicleCameraTweak**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F0/)*",
        "type": "function"
      },
      "resetVehicleHydraulics": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**resetVehicleHydraulics**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09FE/)*",
        "type": "function"
      },
      "restartScmThread": {
        "args": [
          {
            "displayName": "int thread",
            "name": "thread"
          },
          {
            "displayName": "table args",
            "name": "args"
          }
        ],
        "description": "**restartScmThread**(*int thread, table args*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C6F)*",
        "type": "function"
      },
      "restoreCamera": {
        "description": "**restoreCamera**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/015A/)*",
        "type": "function"
      },
      "restoreCameraJumpcut": {
        "description": "**restoreCameraJumpcut**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02EB/) / [ru](http://blast.hk/wiki/opcodes:02EB)*",
        "type": "function"
      },
      "restoreCarModState": {
        "description": "**restoreCarModState**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/096C/)*",
        "type": "function"
      },
      "restoreClock": {
        "description": "**restoreClock**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0254/)*",
        "type": "function"
      },
      "restoreClothesState": {
        "description": "**restoreClothesState**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0794/)*",
        "type": "function"
      },
      "resumeScmThread": {
        "args": [
          {
            "displayName": "int thread",
            "name": "thread"
          }
        ],
        "description": "**resumeScmThread**(*int thread*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BDF)*",
        "type": "function"
      },
      "rotateObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float fromAngle",
            "name": "fromAngle"
          },
          {
            "displayName": "float toAngle",
            "name": "toAngle"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**rotateObject**(*Object object, float fromAngle, float toAngle, bool flag*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/034D/)*",
        "type": "function"
      },
      "runSampfuncsConsoleCommand": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          }
        ],
        "description": "**runSampfuncsConsoleCommand**(*zstring cmd*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C62)*",
        "type": "function"
      },
      "sampAddChatMessage": {
        "args": [
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**sampAddChatMessage**(*zstring text, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AF8)*",
        "type": "function"
      },
      "sampCloseCurrentDialogWithButton": {
        "args": [
          {
            "displayName": "int button",
            "name": "button"
          }
        ],
        "description": "**sampCloseCurrentDialogWithButton**(*int button*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B47)*",
        "type": "function"
      },
      "sampConnectToServer": {
        "args": [
          {
            "displayName": "zstring ip",
            "name": "ip"
          },
          {
            "displayName": "int port",
            "name": "port"
          }
        ],
        "description": "**sampConnectToServer**(*zstring ip, int port*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B38)*",
        "type": "function"
      },
      "sampCreate3dText": {
        "args": [
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float distance",
            "name": "distance"
          },
          {
            "displayName": "bool ignoreWalls",
            "name": "ignoreWalls"
          },
          {
            "displayName": "int playerId",
            "name": "playerId"
          },
          {
            "displayName": "int vehicleId",
            "name": "vehicleId"
          }
        ],
        "description": "**sampCreate3dText**(*zstring text, int color, float posX, float posY, float posZ, float distance, bool ignoreWalls, int playerId, int vehicleId*)  \n**Returns:** *int textlabel*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B44)*",
        "type": "function"
      },
      "sampCreate3dTextEx": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float distance",
            "name": "distance"
          },
          {
            "displayName": "bool ignoreWalls",
            "name": "ignoreWalls"
          },
          {
            "displayName": "int playerId",
            "name": "playerId"
          },
          {
            "displayName": "int vehicleId",
            "name": "vehicleId"
          }
        ],
        "description": "**sampCreate3dTextEx**(*int id, zstring text, int color, float posX, float posY, float posZ, float distance, bool ignoreWalls, int playerId, int vehicleId*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C45)*",
        "type": "function"
      },
      "sampDestroy3dText": {
        "args": [
          {
            "displayName": "int textlabel",
            "name": "textlabel"
          }
        ],
        "description": "**sampDestroy3dText**(*int textlabel*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B45)*",
        "type": "function"
      },
      "sampDisconnectWithReason": {
        "args": [
          {
            "displayName": "bool timeout",
            "name": "timeout"
          }
        ],
        "description": "**sampDisconnectWithReason**(*bool timeout*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B28)*",
        "type": "function"
      },
      "sampFindAnimationIdByNameAndFile": {
        "args": [
          {
            "displayName": "zstring name",
            "name": "name"
          },
          {
            "displayName": "zstring file",
            "name": "file"
          }
        ],
        "description": "**sampFindAnimationIdByNameAndFile**(*zstring name, zstring file*)  \n**Returns:** *int id*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B59)*",
        "type": "function"
      },
      "sampForceAimSync": {
        "description": "**sampForceAimSync**()  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C84)*",
        "type": "function"
      },
      "sampForceOnfootSync": {
        "description": "**sampForceOnfootSync**()  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C83)*",
        "type": "function"
      },
      "sampForcePassengerSyncSeatId": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int seatId",
            "name": "seatId"
          }
        ],
        "description": "**sampForcePassengerSyncSeatId**(*int id, int seatId*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C86)*",
        "type": "function"
      },
      "sampForceStatsSync": {
        "type": "function"
      },
      "sampForceTrailerSync": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampForceTrailerSync**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C85)*",
        "type": "function"
      },
      "sampForceUnoccupiedSyncSeatId": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int seatId",
            "name": "seatId"
          }
        ],
        "description": "**sampForceUnoccupiedSyncSeatId**(*int id, int seatId*)",
        "type": "function"
      },
      "sampForceVehicleSync": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampForceVehicleSync**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C81)*",
        "type": "function"
      },
      "sampForceWeaponsSync": {
        "type": "function"
      },
      "sampGet3dTextInfoById": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGet3dTextInfoById**(*int id*)  \n**Returns:** *zstring string, int color, float posX, float posY, float posZ, float distance, bool ignoreWalls, int playerId, int vehicleId*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C46)*",
        "type": "function"
      },
      "sampGetAnimationNameAndFile": {
        "args": [
          {
            "displayName": "int animid",
            "name": "animid"
          }
        ],
        "description": "**sampGetAnimationNameAndFile**(*int animid*)  \n**Returns:** *zstring name, zstring file*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B58)*",
        "type": "function"
      },
      "sampGetBase": {
        "description": "**sampGetBase**()  \n**Returns:** *int handle*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AF7)*",
        "type": "function"
      },
      "sampGetCarHandleBySampVehicleId": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetCarHandleBySampVehicleId**(*int id*)  \n**Returns:** *bool result, Vehicle car*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AFF)*",
        "type": "function"
      },
      "sampGetCharHandleBySampPlayerId": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetCharHandleBySampPlayerId**(*int id*)  \n**Returns:** *bool result, Ped ped*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B20)*",
        "type": "function"
      },
      "sampGetChatDisplayMode": {
        "description": "**sampGetChatDisplayMode**()  \n**Returns:** *int mode*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BDC)*",
        "type": "function"
      },
      "sampGetChatInfoPtr": {
        "description": "**sampGetChatInfoPtr**()  \n**Returns:** *int chat*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BAE)*",
        "type": "function"
      },
      "sampGetChatInputText": {
        "description": "**sampGetChatInputText**()  \n**Returns:** *zstring text*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B77)*",
        "type": "function"
      },
      "sampGetChatString": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetChatString**(*int id*)  \n**Returns:** *zstring text, zstring prefix, int color, int pcolor*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B75)*",
        "type": "function"
      },
      "sampGetCurrentDialogEditboxText": {
        "description": "**sampGetCurrentDialogEditboxText**()  \n**Returns:** *zstring text*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B4A)*",
        "type": "function"
      },
      "sampGetCurrentDialogId": {
        "description": "**sampGetCurrentDialogId**()  \n**Returns:** *int id*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B4E)*",
        "type": "function"
      },
      "sampGetCurrentDialogListItem": {
        "description": "**sampGetCurrentDialogListItem**()  \n**Returns:** *int list*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B48)*",
        "type": "function"
      },
      "sampGetCurrentDialogType": {
        "description": "**sampGetCurrentDialogType**()  \n**Returns:** *int type*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B4D)*",
        "type": "function"
      },
      "sampGetCurrentServerAddress": {
        "description": "**sampGetCurrentServerAddress**()  \n**Returns:** *zstring ip, int port*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B39)*",
        "type": "function"
      },
      "sampGetCurrentServerName": {
        "description": "**sampGetCurrentServerName**()  \n**Returns:** *zstring name*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B3A)*",
        "type": "function"
      },
      "sampGetCursorMode": {
        "description": "**sampGetCursorMode**()  \n**Returns:** *int mode*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B8E)*",
        "type": "function"
      },
      "sampGetDialogCaption": {
        "description": "**sampGetDialogCaption**()  \n**Returns:** *zstring caption*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD8)*",
        "type": "function"
      },
      "sampGetDialogInfoPtr": {
        "description": "**sampGetDialogInfoPtr**()  \n**Returns:** *int dialogInfo*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB0)*",
        "type": "function"
      },
      "sampGetDialogText": {
        "description": "**sampGetDialogText**()  \n**Returns:** *zstring text*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD7)*",
        "type": "function"
      },
      "sampGetGamestate": {
        "description": "**sampGetGamestate**()  \n**Returns:** *int gamestate*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B4F)*",
        "type": "function"
      },
      "sampGetGangzonePoolPtr": {
        "description": "**sampGetGangzonePoolPtr**()  \n**Returns:** *int gzpool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB5)*",
        "type": "function"
      },
      "sampGetInputInfoPtr": {
        "description": "**sampGetInputInfoPtr**()  \n**Returns:** *int input*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BAF)*",
        "type": "function"
      },
      "sampGetKillInfoPtr": {
        "description": "**sampGetKillInfoPtr**()  \n**Returns:** *int kill*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB1)*",
        "type": "function"
      },
      "sampGetListboxItemText": {
        "args": [
          {
            "displayName": "int item",
            "name": "item"
          }
        ],
        "description": "**sampGetListboxItemText**(*int item*)  \n**Returns:** *zstring text*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B5B)*",
        "type": "function"
      },
      "sampGetListboxItemsCount": {
        "description": "**sampGetListboxItemsCount**()  \n**Returns:** *int count*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B54)*",
        "type": "function"
      },
      "sampGetMaxPlayerId": {
        "args": [
          {
            "displayName": "bool streamed",
            "name": "streamed"
          }
        ],
        "description": "**sampGetMaxPlayerId**(*bool streamed*)  \n**Returns:** *int id*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C8A)*",
        "type": "function"
      },
      "sampGetMiscInfoPtr": {
        "description": "**sampGetMiscInfoPtr**()  \n**Returns:** *int misc*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB2)*",
        "type": "function"
      },
      "sampGetObjectHandleBySampId": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetObjectHandleBySampId**(*int id*)  \n**Returns:** *Object object*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B50)*",
        "type": "function"
      },
      "sampGetObjectPoolPtr": {
        "description": "**sampGetObjectPoolPtr**()  \n**Returns:** *int objpool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB4)*",
        "type": "function"
      },
      "sampGetObjectSampIdByHandle": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**sampGetObjectSampIdByHandle**(*Object object*)  \n**Returns:** *int objectId*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B52)*",
        "type": "function"
      },
      "sampGetPickupHandleBySampId": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPickupHandleBySampId**(*int id*)  \n**Returns:** *Pickup pickup*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B51)*",
        "type": "function"
      },
      "sampGetPickupPoolPtr": {
        "description": "**sampGetPickupPoolPtr**()  \n**Returns:** *int pupool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB9)*",
        "type": "function"
      },
      "sampGetPickupSampIdByHandle": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          }
        ],
        "description": "**sampGetPickupSampIdByHandle**(*Pickup pickup*)  \n**Returns:** *int pickupId*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B53)*",
        "type": "function"
      },
      "sampGetPlayerAnimationId": {
        "args": [
          {
            "displayName": "int playerId",
            "name": "playerId"
          }
        ],
        "description": "**sampGetPlayerAnimationId**(*int playerId*)  \n**Returns:** *int animid*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B57)*",
        "type": "function"
      },
      "sampGetPlayerArmor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerArmor**(*int id*)  \n**Returns:** *int armor*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B26)*",
        "type": "function"
      },
      "sampGetPlayerColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerColor**(*int id*)  \n**Returns:** *int color*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B37)*",
        "type": "function"
      },
      "sampGetPlayerCount": {
        "args": [
          {
            "displayName": "bool streamed",
            "name": "streamed"
          }
        ],
        "description": "**sampGetPlayerCount**(*bool streamed*)  \n**Returns:** *int count*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C8B)*",
        "type": "function"
      },
      "sampGetPlayerHealth": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerHealth**(*int id*)  \n**Returns:** *int health*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B25)*",
        "type": "function"
      },
      "sampGetPlayerIdByCharHandle": {
        "args": [
          {
            "displayName": "Ped handle",
            "name": "handle"
          }
        ],
        "description": "**sampGetPlayerIdByCharHandle**(*Ped handle*)  \n**Returns:** *bool result, int id*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B2B)*",
        "type": "function"
      },
      "sampGetPlayerNickname": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerNickname**(*int id*)  \n**Returns:** *zstring name*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B36)*",
        "type": "function"
      },
      "sampGetPlayerPing": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerPing**(*int id*)  \n**Returns:** *int ping*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B2A)*",
        "type": "function"
      },
      "sampGetPlayerPoolPtr": {
        "description": "**sampGetPlayerPoolPtr**()  \n**Returns:** *int plpool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB7)*",
        "type": "function"
      },
      "sampGetPlayerScore": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerScore**(*int id*)  \n**Returns:** *int score*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B65)*",
        "type": "function"
      },
      "sampGetPlayerSpecialAction": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerSpecialAction**(*int id*)  \n**Returns:** *int action*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B62)*",
        "type": "function"
      },
      "sampGetPlayerStructPtr": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetPlayerStructPtr**(*int id*)  \n**Returns:** *int structPtr*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B24)*",
        "type": "function"
      },
      "sampGetRakclientFuncAddressByIndex": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          }
        ],
        "description": "**sampGetRakclientFuncAddressByIndex**(*int index*)  \n**Returns:** *int address*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B7C)*",
        "type": "function"
      },
      "sampGetRakclientInterface": {
        "description": "**sampGetRakclientInterface**()  \n**Returns:** *int rakInt*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B7A)*",
        "type": "function"
      },
      "sampGetRakpeer": {
        "description": "**sampGetRakpeer**()  \n**Returns:** *int rakpeer*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B7B)*",
        "type": "function"
      },
      "sampGetRpcCallbackByRpcId": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          }
        ],
        "description": "**sampGetRpcCallbackByRpcId**(*int index*)  \n**Returns:** *int callback*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B7D)*",
        "type": "function"
      },
      "sampGetRpcNodeByRpcId": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          }
        ],
        "description": "**sampGetRpcNodeByRpcId**(*int index*)  \n**Returns:** *int node*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B7E)*",
        "type": "function"
      },
      "sampGetSampInfoPtr": {
        "description": "**sampGetSampInfoPtr**()  \n**Returns:** *int sampPtr*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B7F)*",
        "type": "function"
      },
      "sampGetSampPoolsPtr": {
        "description": "**sampGetSampPoolsPtr**()  \n**Returns:** *int pools*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BAD)*",
        "type": "function"
      },
      "sampGetServerSettingsPtr": {
        "description": "**sampGetServerSettingsPtr**()  \n**Returns:** *int settings*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BAC)*",
        "type": "function"
      },
      "sampGetStreamedOutPlayerPos": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampGetStreamedOutPlayerPos**(*int id*)  \n**Returns:** *bool result, float posX, float posY, float posZ*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B2F)*",
        "type": "function"
      },
      "sampGetTextdrawPoolPtr": {
        "description": "**sampGetTextdrawPoolPtr**()  \n**Returns:** *int tdpool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB3)*",
        "type": "function"
      },
      "sampGetTextlabelPoolPtr": {
        "description": "**sampGetTextlabelPoolPtr**()  \n**Returns:** *int tlabelpool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB6)*",
        "type": "function"
      },
      "sampGetVehicleIdByCarHandle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**sampGetVehicleIdByCarHandle**(*Vehicle car*)  \n**Returns:** *bool result, int id*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B2C)*",
        "type": "function"
      },
      "sampGetVehiclePoolPtr": {
        "description": "**sampGetVehiclePoolPtr**()  \n**Returns:** *int vehpool*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BB8)*",
        "type": "function"
      },
      "sampHasDialogRespond": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampHasDialogRespond**(*int id*)  \n**Returns:** *bool result, int button, int list, zstring input*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B3C)*",
        "type": "function"
      },
      "sampIs3dTextDefined": {
        "args": [
          {
            "displayName": "int 3dText",
            "name": "3dText"
          }
        ],
        "description": "**sampIs3dTextDefined**(*int 3dText*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B46)*",
        "type": "function"
      },
      "sampIsChatCommandDefined": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          }
        ],
        "description": "**sampIsChatCommandDefined**(*zstring cmd*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C90)*",
        "type": "function"
      },
      "sampIsChatInputActive": {
        "description": "**sampIsChatInputActive**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B21)*",
        "type": "function"
      },
      "sampIsChatVisible": {
        "description": "**sampIsChatVisible**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BDB)*",
        "type": "function"
      },
      "sampIsCursorActive": {
        "description": "**sampIsCursorActive**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B8C)*",
        "type": "function"
      },
      "sampIsDialogActive": {
        "description": "**sampIsDialogActive**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B4C)*",
        "type": "function"
      },
      "sampIsDialogClientside": {
        "description": "**sampIsDialogClientside**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BDA)*",
        "type": "function"
      },
      "sampIsLocalPlayerSpawned": {
        "description": "**sampIsLocalPlayerSpawned**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B61)*",
        "type": "function"
      },
      "sampIsPlayerConnected": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampIsPlayerConnected**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B23)*",
        "type": "function"
      },
      "sampIsPlayerNpc": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampIsPlayerNpc**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B64)*",
        "type": "function"
      },
      "sampIsPlayerPaused": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampIsPlayerPaused**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B5C)*",
        "type": "function"
      },
      "sampIsScoreboardOpen": {
        "description": "**sampIsScoreboardOpen**()  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD5)*",
        "type": "function"
      },
      "sampProcessChatInput": {
        "args": [
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampProcessChatInput**(*zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C8F)*",
        "type": "function"
      },
      "sampRegisterChatCommand": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          },
          {
            "displayName": "function func",
            "name": "func"
          }
        ],
        "description": "**sampRegisterChatCommand**(*zstring cmd, function func*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B34)*",
        "type": "function"
      },
      "sampRequestClass": {
        "args": [
          {
            "displayName": "int class",
            "name": "class"
          }
        ],
        "description": "**sampRequestClass**(*int class*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AFB)*",
        "type": "function"
      },
      "sampSendAimData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendAimData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC3)*",
        "type": "function"
      },
      "sampSendBulletData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendBulletData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC4)*",
        "type": "function"
      },
      "sampSendChat": {
        "args": [
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampSendChat**(*zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AF9)*",
        "type": "function"
      },
      "sampSendClickPlayer": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int source",
            "name": "source"
          }
        ],
        "description": "**sampSendClickPlayer**(*int id, int source*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC8)*",
        "type": "function"
      },
      "sampSendClickTextdraw": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampSendClickTextdraw**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BCA)*",
        "type": "function"
      },
      "sampSendDamageVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int panel",
            "name": "panel"
          },
          {
            "displayName": "int doors",
            "name": "doors"
          },
          {
            "displayName": "int lights",
            "name": "lights"
          },
          {
            "displayName": "int tires",
            "name": "tires"
          }
        ],
        "description": "**sampSendDamageVehicle**(*Vehicle car, int panel, int doors, int lights, int tires*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B33)*",
        "type": "function"
      },
      "sampSendDeathByPlayer": {
        "args": [
          {
            "displayName": "int playerId",
            "name": "playerId"
          },
          {
            "displayName": "int reason",
            "name": "reason"
          }
        ],
        "description": "**sampSendDeathByPlayer**(*int playerId, int reason*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AFE)*",
        "type": "function"
      },
      "sampSendDialogResponse": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int button",
            "name": "button"
          },
          {
            "displayName": "int listitem",
            "name": "listitem"
          },
          {
            "displayName": "zstring input",
            "name": "input"
          }
        ],
        "description": "**sampSendDialogResponse**(*int id, int button, int listitem, zstring input*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC9)*",
        "type": "function"
      },
      "sampSendEditAttachedObject": {
        "args": [
          {
            "displayName": "int response",
            "name": "response"
          },
          {
            "displayName": "int index",
            "name": "index"
          },
          {
            "displayName": "int model",
            "name": "model"
          },
          {
            "displayName": "int bone",
            "name": "bone"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "float rotX",
            "name": "rotX"
          },
          {
            "displayName": "float rotY",
            "name": "rotY"
          },
          {
            "displayName": "float rotZ",
            "name": "rotZ"
          },
          {
            "displayName": "float scaleX",
            "name": "scaleX"
          },
          {
            "displayName": "float scaleY",
            "name": "scaleY"
          },
          {
            "displayName": "float scaleZ",
            "name": "scaleZ"
          }
        ],
        "description": "**sampSendEditAttachedObject**(*int response, int index, int model, int bone, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BCE)*",
        "type": "function"
      },
      "sampSendEditObject": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int response",
            "name": "response"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float rotX",
            "name": "rotX"
          },
          {
            "displayName": "float rotY",
            "name": "rotY"
          },
          {
            "displayName": "float rotZ",
            "name": "rotZ"
          }
        ],
        "description": "**sampSendEditObject**(*int id, Object object, int response, float posX, float posY, float posZ, float rotX, float rotY, float rotZ*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BCD)*",
        "type": "function"
      },
      "sampSendEnterVehicle": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "bool passenger",
            "name": "passenger"
          }
        ],
        "description": "**sampSendEnterVehicle**(*int id, bool passenger*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B30)*",
        "type": "function"
      },
      "sampSendExitVehicle": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampSendExitVehicle**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B31)*",
        "type": "function"
      },
      "sampSendGiveDamage": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "float damage",
            "name": "damage"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int bodypart",
            "name": "bodypart"
          }
        ],
        "description": "**sampSendGiveDamage**(*int id, float damage, int weapon, int bodypart*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BCB)*",
        "type": "function"
      },
      "sampSendIncarData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendIncarData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC1)*",
        "type": "function"
      },
      "sampSendInteriorChange": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampSendInteriorChange**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BCF)*",
        "type": "function"
      },
      "sampSendMenuQuit": {
        "description": "**sampSendMenuQuit**()  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD3)*",
        "type": "function"
      },
      "sampSendMenuSelectRow": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampSendMenuSelectRow**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD2)*",
        "type": "function"
      },
      "sampSendOnfootData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendOnfootData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC0)*",
        "type": "function"
      },
      "sampSendPassengerData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendPassengerData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC2)*",
        "type": "function"
      },
      "sampSendPickedUpPickup": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampSendPickedUpPickup**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD1)*",
        "type": "function"
      },
      "sampSendRconCommand": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          }
        ],
        "description": "**sampSendRconCommand**(*zstring cmd*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BBF)*",
        "type": "function"
      },
      "sampSendRequestSpawn": {
        "description": "**sampSendRequestSpawn**()  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD0)*",
        "type": "function"
      },
      "sampSendScmEvent": {
        "args": [
          {
            "displayName": "int event",
            "name": "event"
          },
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int param1",
            "name": "param1"
          },
          {
            "displayName": "int param2",
            "name": "param2"
          }
        ],
        "description": "**sampSendScmEvent**(*int event, int id, int param1, int param2*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AFC)*",
        "type": "function"
      },
      "sampSendSpawn": {
        "description": "**sampSendSpawn**()  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B32)*",
        "type": "function"
      },
      "sampSendSpectatorData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendSpectatorData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC7)*",
        "type": "function"
      },
      "sampSendTakeDamage": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "float damage",
            "name": "damage"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int bodypart",
            "name": "bodypart"
          }
        ],
        "description": "**sampSendTakeDamage**(*int id, float damage, int weapon, int bodypart*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BCC)*",
        "type": "function"
      },
      "sampSendTrailerData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendTrailerData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC5)*",
        "type": "function"
      },
      "sampSendUnoccupiedData": {
        "args": [
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampSendUnoccupiedData**(*int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BC6)*",
        "type": "function"
      },
      "sampSendVehicleDestroyed": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampSendVehicleDestroyed**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD4)*",
        "type": "function"
      },
      "sampSet3dTextString": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampSet3dTextString**(*int id, zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C47)*",
        "type": "function"
      },
      "sampSetChatDisplayMode": {
        "args": [
          {
            "displayName": "int mode",
            "name": "mode"
          }
        ],
        "description": "**sampSetChatDisplayMode**(*int mode*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BDD)*",
        "type": "function"
      },
      "sampSetChatInputEnabled": {
        "args": [
          {
            "displayName": "bool enabled",
            "name": "enabled"
          }
        ],
        "description": "**sampSetChatInputEnabled**(*bool enabled*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B79)*",
        "type": "function"
      },
      "sampSetChatInputText": {
        "args": [
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampSetChatInputText**(*zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B76)*",
        "type": "function"
      },
      "sampSetChatString": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "zstring prefix",
            "name": "prefix"
          },
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "int pcolor",
            "name": "pcolor"
          }
        ],
        "description": "**sampSetChatString**(*int id, zstring text, zstring prefix, int color, int pcolor*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B74)*",
        "type": "function"
      },
      "sampSetClientCommandDescription": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampSetClientCommandDescription**(*zstring cmd, zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C7F)*",
        "type": "function"
      },
      "sampSetCurrentDialogEditboxText": {
        "args": [
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampSetCurrentDialogEditboxText**(*zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B4B)*",
        "type": "function"
      },
      "sampSetCurrentDialogListItem": {
        "args": [
          {
            "displayName": "int list",
            "name": "list"
          }
        ],
        "description": "**sampSetCurrentDialogListItem**(*int list*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B49)*",
        "type": "function"
      },
      "sampSetCursorMode": {
        "args": [
          {
            "displayName": "int mode",
            "name": "mode"
          }
        ],
        "description": "**sampSetCursorMode**(*int mode*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B8D)*",
        "type": "function"
      },
      "sampSetDialogClientside": {
        "args": [
          {
            "displayName": "bool clientside",
            "name": "clientside"
          }
        ],
        "description": "**sampSetDialogClientside**(*bool clientside*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD9)*",
        "type": "function"
      },
      "sampSetGamestate": {
        "args": [
          {
            "displayName": "int gamestate",
            "name": "gamestate"
          }
        ],
        "description": "**sampSetGamestate**(*int gamestate*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B27)*",
        "type": "function"
      },
      "sampSetLocalPlayerName": {
        "args": [
          {
            "displayName": "zstring name",
            "name": "name"
          }
        ],
        "description": "**sampSetLocalPlayerName**(*zstring name*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B29)*",
        "type": "function"
      },
      "sampSetSendrate": {
        "args": [
          {
            "displayName": "int type",
            "name": "type"
          },
          {
            "displayName": "int rate",
            "name": "rate"
          }
        ],
        "description": "**sampSetSendrate**(*int type, int rate*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B22)*",
        "type": "function"
      },
      "sampSetSpecialAction": {
        "args": [
          {
            "displayName": "int action",
            "name": "action"
          }
        ],
        "description": "**sampSetSpecialAction**(*int action*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AFD)*",
        "type": "function"
      },
      "sampShowDialog": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring caption",
            "name": "caption"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "zstring button1",
            "name": "button1"
          },
          {
            "displayName": "zstring button2",
            "name": "button2"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**sampShowDialog**(*int id, zstring caption, zstring text, zstring button1, zstring button2, int style*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B3B)*",
        "type": "function"
      },
      "sampSpawnPlayer": {
        "description": "**sampSpawnPlayer**()  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0AF6)*",
        "type": "function"
      },
      "sampStorePlayerAimData": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampStorePlayerAimData**(*int id, int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BBE)*",
        "type": "function"
      },
      "sampStorePlayerIncarData": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampStorePlayerIncarData**(*int id, int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BBB)*",
        "type": "function"
      },
      "sampStorePlayerOnfootData": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampStorePlayerOnfootData**(*int id, int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BBA)*",
        "type": "function"
      },
      "sampStorePlayerPassengerData": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampStorePlayerPassengerData**(*int id, int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BBC)*",
        "type": "function"
      },
      "sampStorePlayerTrailerData": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int data",
            "name": "data"
          }
        ],
        "description": "**sampStorePlayerTrailerData**(*int id, int data*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BBD)*",
        "type": "function"
      },
      "sampTextdrawCreate": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          }
        ],
        "description": "**sampTextdrawCreate**(*int id, zstring text, float posX, float posY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C48)*",
        "type": "function"
      },
      "sampTextdrawDelete": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawDelete**(*int id*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C5E)*",
        "type": "function"
      },
      "sampTextdrawGetAlign": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetAlign**(*int id*)  \n**Returns:** *int align*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C54)*",
        "type": "function"
      },
      "sampTextdrawGetBoxEnabledColorAndSize": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetBoxEnabledColorAndSize**(*int id*)  \n**Returns:** *int box, int color, float sizeX, float sizeY*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C53)*",
        "type": "function"
      },
      "sampTextdrawGetLetterSizeAndColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetLetterSizeAndColor**(*int id*)  \n**Returns:** *float letSizeX, float letSizeY, int color*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C5C)*",
        "type": "function"
      },
      "sampTextdrawGetModelRotationZoomVehColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetModelRotationZoomVehColor**(*int id*)  \n**Returns:** *int model, float rotX, float rotY, float rotZ, float zoom, int clr1, int clr2*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C59)*",
        "type": "function"
      },
      "sampTextdrawGetOutlineColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetOutlineColor**(*int id*)  \n**Returns:** *int outline, int color*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C58)*",
        "type": "function"
      },
      "sampTextdrawGetPos": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetPos**(*int id*)  \n**Returns:** *float posX, float posY*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C5B)*",
        "type": "function"
      },
      "sampTextdrawGetProportional": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetProportional**(*int id*)  \n**Returns:** *int prop*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C55)*",
        "type": "function"
      },
      "sampTextdrawGetShadowColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetShadowColor**(*int id*)  \n**Returns:** *int shadow, int color*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C57)*",
        "type": "function"
      },
      "sampTextdrawGetString": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetString**(*int id*)  \n**Returns:** *zstring text*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C5A)*",
        "type": "function"
      },
      "sampTextdrawGetStyle": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawGetStyle**(*int id*)  \n**Returns:** *int style*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C56)*",
        "type": "function"
      },
      "sampTextdrawIsExists": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**sampTextdrawIsExists**(*int id*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C5D)*",
        "type": "function"
      },
      "sampTextdrawSetAlign": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int align",
            "name": "align"
          }
        ],
        "description": "**sampTextdrawSetAlign**(*int id, int align*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C4A)*",
        "type": "function"
      },
      "sampTextdrawSetBoxColorAndSize": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int box",
            "name": "box"
          },
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "float sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "float sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**sampTextdrawSetBoxColorAndSize**(*int id, int box, int color, float sizeX, float sizeY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C49)*",
        "type": "function"
      },
      "sampTextdrawSetLetterSizeAndColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "float letSizeX",
            "name": "letSizeX"
          },
          {
            "displayName": "float letSizeY",
            "name": "letSizeY"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**sampTextdrawSetLetterSizeAndColor**(*int id, float letSizeX, float letSizeY, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C52)*",
        "type": "function"
      },
      "sampTextdrawSetModelRotationZoomVehColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int model",
            "name": "model"
          },
          {
            "displayName": "float rotX",
            "name": "rotX"
          },
          {
            "displayName": "float rotY",
            "name": "rotY"
          },
          {
            "displayName": "float rotZ",
            "name": "rotZ"
          },
          {
            "displayName": "float zoom",
            "name": "zoom"
          },
          {
            "displayName": "int clr1",
            "name": "clr1"
          },
          {
            "displayName": "int clr2",
            "name": "clr2"
          }
        ],
        "description": "**sampTextdrawSetModelRotationZoomVehColor**(*int id, int model, float rotX, float rotY, float rotZ, float zoom, int clr1, int clr2*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C4F)*",
        "type": "function"
      },
      "sampTextdrawSetOutlineColor": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int outline",
            "name": "outline"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**sampTextdrawSetOutlineColor**(*int id, int outline, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C4E)*",
        "type": "function"
      },
      "sampTextdrawSetPos": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          }
        ],
        "description": "**sampTextdrawSetPos**(*int id, float posX, float posY*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C51)*",
        "type": "function"
      },
      "sampTextdrawSetProportional": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int proportional",
            "name": "proportional"
          }
        ],
        "description": "**sampTextdrawSetProportional**(*int id, int proportional*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C4B)*",
        "type": "function"
      },
      "sampTextdrawSetShadow": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int shadow",
            "name": "shadow"
          },
          {
            "displayName": "int color",
            "name": "color"
          }
        ],
        "description": "**sampTextdrawSetShadow**(*int id, int shadow, int color*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C4D)*",
        "type": "function"
      },
      "sampTextdrawSetString": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**sampTextdrawSetString**(*int id, zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C50)*",
        "type": "function"
      },
      "sampTextdrawSetStyle": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "int style",
            "name": "style"
          }
        ],
        "description": "**sampTextdrawSetStyle**(*int id, int style*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C4C)*",
        "type": "function"
      },
      "sampToggleCursor": {
        "args": [
          {
            "displayName": "bool show",
            "name": "show"
          }
        ],
        "description": "**sampToggleCursor**(*bool show*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B5D)*",
        "type": "function"
      },
      "sampToggleScoreboard": {
        "args": [
          {
            "displayName": "bool show",
            "name": "show"
          }
        ],
        "description": "**sampToggleScoreboard**(*bool show*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BD6)*",
        "type": "function"
      },
      "sampUnregisterChatCommand": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          }
        ],
        "description": "**sampUnregisterChatCommand**(*zstring cmd*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B63)*",
        "type": "function"
      },
      "sampfuncsLog": {
        "args": [
          {
            "displayName": "zstring msg",
            "name": "msg"
          }
        ],
        "description": "**sampfuncsLog**(*zstring msg*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0B78)*",
        "type": "function"
      },
      "sampfuncsRegisterConsoleCommand": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          },
          {
            "displayName": "function func",
            "name": "func"
          }
        ],
        "description": "**sampfuncsRegisterConsoleCommand**(*zstring cmd, function func*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C63)*",
        "type": "function"
      },
      "sampfuncsUnregisterConsoleCommand": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          }
        ],
        "description": "**sampfuncsUnregisterConsoleCommand**(*zstring cmd*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C64)*",
        "type": "function"
      },
      "script": {
        "description": "**Wiki:** *[ru](http://blast.hk/wiki/lua:luascript)*",
        "fields": {
          "find": {
            "args": [
              {
                "displayName": "string name",
                "name": "name"
              }
            ],
            "description": "**script.find**(*string name*)  \n**Returns:** *LuaScript s*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:find)*",
            "returnTypes": [
              {
                "name": "LuaScript",
                "type": "ref"
              }
            ],
            "type": "function"
          },
          "get": {
            "args": [
              {
                "displayName": "int scriptId",
                "name": "scriptId"
              }
            ],
            "description": "**script.get**(*int scriptId*)  \n**Returns:** *LuaScript script*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:get)*",
            "returnTypes": [
              {
                "name": "LuaScript",
                "type": "ref"
              }
            ],
            "type": "function"
          },
          "list": {
            "description": "**script.list**()  \n**Returns:** *table list*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:list)*",
            "type": "function"
          },
          "load": {
            "args": [
              {
                "displayName": "string file",
                "name": "file"
              }
            ],
            "description": "**script.load**(*string file*)  \n**Returns:** *LuaScript s*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:load)*",
            "returnTypes": [
              {
                "name": "LuaScript",
                "type": "ref"
              }
            ],
            "type": "function"
          }
        },
        "type": "table"
      },
      "script_author": {
        "args": [
          {
            "displayName": "string author",
            "name": "author"
          }
        ],
        "description": "**script_author**(*string author*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_author)*",
        "type": "function"
      },
      "script_authors": {
        "args": [
          {
            "displayName": "string author",
            "name": "author"
          },
          {
            "name": "..."
          }
        ],
        "description": "**script_authors**(*string author, ...*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_authors)*",
        "type": "function"
      },
      "script_dependencies": {
        "args": [
          {
            "displayName": "string name",
            "name": "name"
          },
          {
            "name": "..."
          }
        ],
        "description": "**script_dependencies**(*string name, ...*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_dependencies)*",
        "type": "function"
      },
      "script_description": {
        "args": [
          {
            "displayName": "string description",
            "name": "description"
          }
        ],
        "description": "**script_description**(*string description*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_description)*",
        "type": "function"
      },
      "script_moonloader": {
        "args": [
          {
            "displayName": "int version",
            "name": "version"
          }
        ],
        "description": "**script_moonloader**(*int version*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_moonloader)*",
        "type": "function"
      },
      "script_name": {
        "args": [
          {
            "displayName": "string name",
            "name": "name"
          }
        ],
        "description": "**script_name**(*string name*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_name)*",
        "type": "function"
      },
      "script_properties": {
        "args": [
          {
            "displayName": "string property",
            "name": "property"
          },
          {
            "name": "..."
          }
        ],
        "description": "**script_properties**(*string property, ...*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_properties)*",
        "type": "function"
      },
      "script_url": {
        "args": [
          {
            "displayName": "string url",
            "name": "url"
          }
        ],
        "description": "**script_url**(*string url*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_url)*",
        "type": "function"
      },
      "script_version": {
        "args": [
          {
            "displayName": "string version",
            "name": "version"
          }
        ],
        "description": "**script_version**(*string version*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_version)*",
        "type": "function"
      },
      "script_version_number": {
        "args": [
          {
            "displayName": "int version",
            "name": "version"
          }
        ],
        "description": "**script_version_number**(*int version*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script_version_number)*",
        "type": "function"
      },
      "selectWeaponsForVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool gun",
            "name": "gun"
          }
        ],
        "description": "**selectWeaponsForVehicle**(*Vehicle car, bool gun*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0841/)*",
        "type": "function"
      },
      "setActiveMenuItem": {
        "args": [
          {
            "displayName": "int panel",
            "name": "panel"
          },
          {
            "displayName": "int activeRow",
            "name": "activeRow"
          }
        ],
        "description": "**setActiveMenuItem**(*int panel, int activeRow*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/090E/)*",
        "type": "function"
      },
      "setAircraftCarrierSamSite": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setAircraftCarrierSamSite**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E4/)*",
        "type": "function"
      },
      "setAllCarsCanBeDamaged": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setAllCarsCanBeDamaged**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03F4/)*",
        "type": "function"
      },
      "setAllTaxisHaveNitro": {
        "args": [
          {
            "displayName": "bool toggle",
            "name": "toggle"
          }
        ],
        "description": "**setAllTaxisHaveNitro**(*bool toggle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0572/)*",
        "type": "function"
      },
      "setAlwaysDraw3dMarkers": {
        "args": [
          {
            "displayName": "bool set",
            "name": "set"
          }
        ],
        "description": "**setAlwaysDraw3dMarkers**(*bool set*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A8/)*",
        "type": "function"
      },
      "setAnimGroupForChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string style",
            "name": "style"
          }
        ],
        "description": "**setAnimGroupForChar**(*Ped ped, string style*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0245/)*",
        "type": "function"
      },
      "setArea51SamSite": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setArea51SamSite**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A8/)*",
        "type": "function"
      },
      "setAreaName": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          }
        ],
        "description": "**setAreaName**(*GxtString gxtString*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A19/)*",
        "type": "function"
      },
      "setAudioStreamLooped": {
        "args": [
          {
            "displayName": "int audio",
            "name": "audio"
          },
          {
            "displayName": "bool loop",
            "name": "loop"
          }
        ],
        "description": "**setAudioStreamLooped**(*int audio, bool loop*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC0/)*",
        "type": "function"
      },
      "setAudioStreamState": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          },
          {
            "displayName": "int state",
            "name": "state"
          }
        ],
        "description": "**setAudioStreamState**(*int handle, int state*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AAD/)*",
        "type": "function"
      },
      "setAudioStreamVolume": {
        "args": [
          {
            "displayName": "int audio",
            "name": "audio"
          },
          {
            "displayName": "float volume",
            "name": "volume"
          }
        ],
        "description": "**setAudioStreamVolume**(*int audio, float volume*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ABC/)*",
        "type": "function"
      },
      "setBlipAlwaysDisplayOnZoomedRadar": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          },
          {
            "displayName": "bool displayAlways",
            "name": "displayAlways"
          }
        ],
        "description": "**setBlipAlwaysDisplayOnZoomedRadar**(*Marker marker, bool displayAlways*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07BF/)*",
        "type": "function"
      },
      "setBlipAsFriendly": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          },
          {
            "displayName": "bool type",
            "name": "type"
          }
        ],
        "description": "**setBlipAsFriendly**(*Marker marker, bool type*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E0/)*",
        "type": "function"
      },
      "setBlipEntryExit": {
        "args": [
          {
            "displayName": "Marker marker",
            "name": "marker"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**setBlipEntryExit**(*Marker marker, float X, float Y, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08DC/)*",
        "type": "function"
      },
      "setBoatCruiseSpeed": {
        "args": [
          {
            "displayName": "Vehicle boat",
            "name": "boat"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setBoatCruiseSpeed**(*Vehicle boat, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02DB/)*",
        "type": "function"
      },
      "setCameraBehindPlayer": {
        "description": "**setCameraBehindPlayer**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0373/)*",
        "type": "function"
      },
      "setCameraInFrontOfChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**setCameraInFrontOfChar**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0944/)*",
        "type": "function"
      },
      "setCameraInFrontOfPlayer": {
        "description": "**setCameraInFrontOfPlayer**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C8/)*",
        "type": "function"
      },
      "setCameraPositionUnfixed": {
        "args": [
          {
            "displayName": "float xAngle",
            "name": "xAngle"
          },
          {
            "displayName": "float zAngle",
            "name": "zAngle"
          }
        ],
        "description": "**setCameraPositionUnfixed**(*float xAngle, float zAngle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A25/)*",
        "type": "function"
      },
      "setCameraZoom": {
        "args": [
          {
            "displayName": "int mode",
            "name": "mode"
          }
        ],
        "description": "**setCameraZoom**(*int mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/032A/)*",
        "type": "function"
      },
      "setCanBurstCarTires": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool vulnerability",
            "name": "vulnerability"
          }
        ],
        "description": "**setCanBurstCarTires**(*Vehicle car, bool vulnerability*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/053F/)*",
        "type": "function"
      },
      "setCanResprayCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool sprayable",
            "name": "sprayable"
          }
        ],
        "description": "**setCanResprayCar**(*Vehicle car, bool sprayable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0294/)*",
        "type": "function"
      },
      "setCarAlwaysCreateSkids": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCarAlwaysCreateSkids**(*Vehicle car, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07EE/)*",
        "type": "function"
      },
      "setCarAsMissionCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**setCarAsMissionCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0763/)*",
        "type": "function"
      },
      "setCarAvoidLevelTransitions": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool avoidLevelTransitions",
            "name": "avoidLevelTransitions"
          }
        ],
        "description": "**setCarAvoidLevelTransitions**(*Vehicle car, bool avoidLevelTransitions*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0428/)*",
        "type": "function"
      },
      "setCarCanBeDamaged": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCarCanBeDamaged**(*Vehicle car, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03F5/)*",
        "type": "function"
      },
      "setCarCanBeVisiblyDamaged": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**setCarCanBeVisiblyDamaged**(*Vehicle car, bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0852/)*",
        "type": "function"
      },
      "setCarCanGoAgainstTraffic": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**setCarCanGoAgainstTraffic**(*Vehicle car, bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/073B/)*",
        "type": "function"
      },
      "setCarCollision": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool collision",
            "name": "collision"
          }
        ],
        "description": "**setCarCollision**(*Vehicle car, bool collision*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/099A/)*",
        "type": "function"
      },
      "setCarCoordinates": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**setCarCoordinates**(*Vehicle car, float atX, float atY, float atZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00AB/)*",
        "type": "function"
      },
      "setCarCoordinatesNoOffset": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**setCarCoordinatesNoOffset**(*Vehicle car, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/088C/)*",
        "type": "function"
      },
      "setCarCruiseSpeed": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float maxSpeed",
            "name": "maxSpeed"
          }
        ],
        "description": "**setCarCruiseSpeed**(*Vehicle car, float maxSpeed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00AD/)*",
        "type": "function"
      },
      "setCarDensityMultiplier": {
        "args": [
          {
            "displayName": "float multiplier",
            "name": "multiplier"
          }
        ],
        "description": "**setCarDensityMultiplier**(*float multiplier*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01EB/)*",
        "type": "function"
      },
      "setCarDrivingStyle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int behaviour",
            "name": "behaviour"
          }
        ],
        "description": "**setCarDrivingStyle**(*Vehicle car, int behaviour*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00AE/)*",
        "type": "function"
      },
      "setCarEngineBroken": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool broken",
            "name": "broken"
          }
        ],
        "description": "**setCarEngineBroken**(*Vehicle car, bool broken*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/081D/)*",
        "type": "function"
      },
      "setCarEngineOn": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool on",
            "name": "on"
          }
        ],
        "description": "**setCarEngineOn**(*Vehicle car, bool on*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0918/)*",
        "type": "function"
      },
      "setCarEscortCarFront": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Vehicle followCar",
            "name": "followCar"
          }
        ],
        "description": "**setCarEscortCarFront**(*Vehicle car, Vehicle followCar*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F4/)*",
        "type": "function"
      },
      "setCarEscortCarLeft": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Vehicle followCar",
            "name": "followCar"
          }
        ],
        "description": "**setCarEscortCarLeft**(*Vehicle car, Vehicle followCar*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F1/)*",
        "type": "function"
      },
      "setCarEscortCarRear": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Vehicle followCar",
            "name": "followCar"
          }
        ],
        "description": "**setCarEscortCarRear**(*Vehicle car, Vehicle followCar*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F3/)*",
        "type": "function"
      },
      "setCarEscortCarRight": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Vehicle followCar",
            "name": "followCar"
          }
        ],
        "description": "**setCarEscortCarRight**(*Vehicle car, Vehicle followCar*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F2/)*",
        "type": "function"
      },
      "setCarFollowCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int followCar",
            "name": "followCar"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**setCarFollowCar**(*Vehicle car, int followCar, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F8/)*",
        "type": "function"
      },
      "setCarForwardSpeed": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setCarForwardSpeed**(*Vehicle car, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04BA/)*",
        "type": "function"
      },
      "setCarHeading": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setCarHeading**(*Vehicle car, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0175/)*",
        "type": "function"
      },
      "setCarHealth": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int health",
            "name": "health"
          }
        ],
        "description": "**setCarHealth**(*Vehicle car, int health*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0224/)*",
        "type": "function"
      },
      "setCarHeavy": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool heavy",
            "name": "heavy"
          }
        ],
        "description": "**setCarHeavy**(*Vehicle car, bool heavy*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01EC/)*",
        "type": "function"
      },
      "setCarHydraulics": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool hydraulics",
            "name": "hydraulics"
          }
        ],
        "description": "**setCarHydraulics**(*Vehicle car, bool hydraulics*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07FF/)*",
        "type": "function"
      },
      "setCarLightsOn": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool lights",
            "name": "lights"
          }
        ],
        "description": "**setCarLightsOn**(*Vehicle car, bool lights*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0919/)*",
        "type": "function"
      },
      "setCarMission": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int driverBehaviour",
            "name": "driverBehaviour"
          }
        ],
        "description": "**setCarMission**(*Vehicle car, int driverBehaviour*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00AF/)*",
        "type": "function"
      },
      "setCarModelComponents": {
        "args": [
          {
            "displayName": "Model car",
            "name": "car"
          },
          {
            "displayName": "int variation1",
            "name": "variation1"
          },
          {
            "displayName": "int variation2",
            "name": "variation2"
          }
        ],
        "description": "**setCarModelComponents**(*Model car, int variation1, int variation2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0506/)*",
        "type": "function"
      },
      "setCarOnlyDamagedByPlayer": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool enabled",
            "name": "enabled"
          }
        ],
        "description": "**setCarOnlyDamagedByPlayer**(*Vehicle car, bool enabled*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02AA/)*",
        "type": "function"
      },
      "setCarProofs": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool BP",
            "name": "BP"
          },
          {
            "displayName": "bool FP",
            "name": "FP"
          },
          {
            "displayName": "bool EP",
            "name": "EP"
          },
          {
            "displayName": "bool CP",
            "name": "CP"
          },
          {
            "displayName": "bool MP",
            "name": "MP"
          }
        ],
        "description": "**setCarProofs**(*Vehicle car, bool BP, bool FP, bool EP, bool CP, bool MP*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02AC/)*",
        "type": "function"
      },
      "setCarRamCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**setCarRamCar**(*Vehicle car, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/032C/)*",
        "type": "function"
      },
      "setCarRandomRouteSeed": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int routeSeed",
            "name": "routeSeed"
          }
        ],
        "description": "**setCarRandomRouteSeed**(*Vehicle car, int routeSeed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/048B/)*",
        "type": "function"
      },
      "setCarRoll": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float roll",
            "name": "roll"
          }
        ],
        "description": "**setCarRoll**(*Vehicle car, float roll*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0731/)*",
        "type": "function"
      },
      "setCarRotationVelocity": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**setCarRotationVelocity**(*Vehicle car, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07DB/)*",
        "type": "function"
      },
      "setCarStatus": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int action",
            "name": "action"
          }
        ],
        "description": "**setCarStatus**(*Vehicle car, int action*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03A2/)*",
        "type": "function"
      },
      "setCarStayInFastLane": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**setCarStayInFastLane**(*Vehicle car, bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0466/)*",
        "type": "function"
      },
      "setCarStayInSlowLane": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool stay",
            "name": "stay"
          }
        ],
        "description": "**setCarStayInSlowLane**(*Vehicle car, bool stay*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0714/)*",
        "type": "function"
      },
      "setCarStraightLineDistance": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int radius",
            "name": "radius"
          }
        ],
        "description": "**setCarStraightLineDistance**(*Vehicle car, int radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E0/)*",
        "type": "function"
      },
      "setCarStrong": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool strong",
            "name": "strong"
          }
        ],
        "description": "**setCarStrong**(*Vehicle car, bool strong*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03AB/)*",
        "type": "function"
      },
      "setCarTempAction": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int action",
            "name": "action"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**setCarTempAction**(*Vehicle car, int action, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0477/)*",
        "type": "function"
      },
      "setCarTraction": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float traction",
            "name": "traction"
          }
        ],
        "description": "**setCarTraction**(*Vehicle car, float traction*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0423/)*",
        "type": "function"
      },
      "setCarVisible": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool visible",
            "name": "visible"
          }
        ],
        "description": "**setCarVisible**(*Vehicle car, bool visible*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0338/)*",
        "type": "function"
      },
      "setCarWatertight": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool watertight",
            "name": "watertight"
          }
        ],
        "description": "**setCarWatertight**(*Vehicle car, bool watertight*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/039C/)*",
        "type": "function"
      },
      "setCharAccuracy": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int accuracy",
            "name": "accuracy"
          }
        ],
        "description": "**setCharAccuracy**(*Ped ped, int accuracy*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E2/)*",
        "type": "function"
      },
      "setCharAllowedToDuck": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCharAllowedToDuck**(*Ped ped, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0856/)*",
        "type": "function"
      },
      "setCharAmmo": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int ammo",
            "name": "ammo"
          }
        ],
        "description": "**setCharAmmo**(*Ped ped, int weapon, int ammo*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/017B/)*",
        "type": "function"
      },
      "setCharAnimCurrentTime": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "float time",
            "name": "time"
          }
        ],
        "description": "**setCharAnimCurrentTime**(*Ped ped, string animation, float time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0614/)*",
        "type": "function"
      },
      "setCharAnimPlayingFlag": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**setCharAnimPlayingFlag**(*Ped ped, string animation, bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0612/)*",
        "type": "function"
      },
      "setCharAnimSpeed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setCharAnimSpeed**(*Ped ped, string animation, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0393/)*",
        "type": "function"
      },
      "setCharBleeding": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool bleeding",
            "name": "bleeding"
          }
        ],
        "description": "**setCharBleeding**(*Ped ped, bool bleeding*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0332/)*",
        "type": "function"
      },
      "setCharBulletproofVest": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCharBulletproofVest**(*Ped ped, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/093B/)*",
        "type": "function"
      },
      "setCharCanBeKnockedOffBike": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**setCharCanBeKnockedOffBike**(*Ped ped, bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08C6/)*",
        "type": "function"
      },
      "setCharCanBeShotInVehicle": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**setCharCanBeShotInVehicle**(*Ped ped, bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/054A/)*",
        "type": "function"
      },
      "setCharCantBeDraggedOut": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool locked",
            "name": "locked"
          }
        ],
        "description": "**setCharCantBeDraggedOut**(*Ped ped, bool locked*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/039E/)*",
        "type": "function"
      },
      "setCharCollision": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCharCollision**(*Ped ped, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0619/)*",
        "type": "function"
      },
      "setCharCoordinates": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          }
        ],
        "description": "**setCharCoordinates**(*Ped ped, float posX, float posY, float posZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00A1/) / [ru](http://blast.hk/wiki/opcodes:00A1)*",
        "type": "function"
      },
      "setCharCoordinatesDontWarpGang": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**setCharCoordinatesDontWarpGang**(*Ped ped, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08C7/)*",
        "type": "function"
      },
      "setCharCoordinatesDontWarpGangNoOffset": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**setCharCoordinatesDontWarpGangNoOffset**(*Ped ped, float atX, float atY, float atZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09BC/)*",
        "type": "function"
      },
      "setCharCoordinatesNoOffset": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**setCharCoordinatesNoOffset**(*Ped ped, float atX, float atY, float atZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0972/)*",
        "type": "function"
      },
      "setCharDecisionMaker": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int maker",
            "name": "maker"
          }
        ],
        "description": "**setCharDecisionMaker**(*Ped ped, int maker*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/060B/)*",
        "type": "function"
      },
      "setCharDropsWeaponsWhenDead": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool droppable",
            "name": "droppable"
          }
        ],
        "description": "**setCharDropsWeaponsWhenDead**(*Ped ped, bool droppable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/087E/)*",
        "type": "function"
      },
      "setCharDrownsInWater": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool drowns",
            "name": "drowns"
          }
        ],
        "description": "**setCharDrownsInWater**(*Ped ped, bool drowns*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D8/)*",
        "type": "function"
      },
      "setCharDruggedUp": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool druggedUp",
            "name": "druggedUp"
          }
        ],
        "description": "**setCharDruggedUp**(*Ped ped, bool druggedUp*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A7/)*",
        "type": "function"
      },
      "setCharFireDamageMultiplier": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float multiplier",
            "name": "multiplier"
          }
        ],
        "description": "**setCharFireDamageMultiplier**(*Ped ped, float multiplier*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/093E/)*",
        "type": "function"
      },
      "setCharForceDieInCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool stayInCarWhenDead",
            "name": "stayInCarWhenDead"
          }
        ],
        "description": "**setCharForceDieInCar**(*Ped ped, bool stayInCarWhenDead*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0982/)*",
        "type": "function"
      },
      "setCharGetOutUpsideDownCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool canGetOut",
            "name": "canGetOut"
          }
        ],
        "description": "**setCharGetOutUpsideDownCar**(*Ped ped, bool canGetOut*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F6/)*",
        "type": "function"
      },
      "setCharHasUsedEntryExit": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          }
        ],
        "description": "**setCharHasUsedEntryExit**(*Ped ped, float X, float Y, float radius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08AD/)*",
        "type": "function"
      },
      "setCharHeading": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setCharHeading**(*Ped ped, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0173/) / [ru](http://blast.hk/wiki/opcodes:0173)*",
        "type": "function"
      },
      "setCharHealth": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int health",
            "name": "health"
          }
        ],
        "description": "**setCharHealth**(*Ped ped, int health*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0223/)*",
        "type": "function"
      },
      "setCharInterior": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int interior",
            "name": "interior"
          }
        ],
        "description": "**setCharInterior**(*Ped ped, int interior*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0860/)*",
        "type": "function"
      },
      "setCharIsChrisCriminal": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**setCharIsChrisCriminal**(*Ped ped, bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0433/)*",
        "type": "function"
      },
      "setCharIsTargetPriority": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool targetPriority",
            "name": "targetPriority"
          }
        ],
        "description": "**setCharIsTargetPriority**(*Ped ped, bool targetPriority*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0770/)*",
        "type": "function"
      },
      "setCharKeepTask": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool keepTasks",
            "name": "keepTasks"
          }
        ],
        "description": "**setCharKeepTask**(*Ped ped, bool keepTasks*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0961/)*",
        "type": "function"
      },
      "setCharKeyDown": {
        "args": [
          {
            "displayName": "int ckey",
            "name": "ckey"
          },
          {
            "displayName": "bool down",
            "name": "down"
          }
        ],
        "description": "**setCharKeyDown**(*int ckey, bool down*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setCharKeyDown)*",
        "type": "function"
      },
      "setCharKindaStayInSamePlace": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool stay",
            "name": "stay"
          }
        ],
        "description": "**setCharKindaStayInSamePlace**(*Ped ped, bool stay*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0816/)*",
        "type": "function"
      },
      "setCharMaxHealth": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int health",
            "name": "health"
          }
        ],
        "description": "**setCharMaxHealth**(*Ped ped, int health*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08AF/)*",
        "type": "function"
      },
      "setCharMoney": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int money",
            "name": "money"
          }
        ],
        "description": "**setCharMoney**(*Ped ped, int money*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03FE/)*",
        "type": "function"
      },
      "setCharNeverLeavesGroup": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool set",
            "name": "set"
          }
        ],
        "description": "**setCharNeverLeavesGroup**(*Ped ped, bool set*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/087F/)*",
        "type": "function"
      },
      "setCharNeverTargetted": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool untargetable",
            "name": "untargetable"
          }
        ],
        "description": "**setCharNeverTargetted**(*Ped ped, bool untargetable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0568/)*",
        "type": "function"
      },
      "setCharOnlyDamagedByPlayer": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enabled",
            "name": "enabled"
          }
        ],
        "description": "**setCharOnlyDamagedByPlayer**(*Ped ped, bool enabled*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02A9/)*",
        "type": "function"
      },
      "setCharProofs": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool BP",
            "name": "BP"
          },
          {
            "displayName": "bool FP",
            "name": "FP"
          },
          {
            "displayName": "bool EP",
            "name": "EP"
          },
          {
            "displayName": "bool CP",
            "name": "CP"
          },
          {
            "displayName": "bool MP",
            "name": "MP"
          }
        ],
        "description": "**setCharProofs**(*Ped ped, bool BP, bool FP, bool EP, bool CP, bool MP*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02AB/) / [ru](http://blast.hk/wiki/opcodes:02AB)*",
        "type": "function"
      },
      "setCharRelationship": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int acquaintance",
            "name": "acquaintance"
          },
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          }
        ],
        "description": "**setCharRelationship**(*Ped ped, int acquaintance, int pedtype*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/077A/)*",
        "type": "function"
      },
      "setCharRotation": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**setCharRotation**(*Ped ped, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/083E/)*",
        "type": "function"
      },
      "setCharSayContext": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int speech",
            "name": "speech"
          }
        ],
        "description": "**setCharSayContext**(*Ped ped, int speech*)  \n**Returns:** *int spokenPhrase*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0947/)*",
        "type": "function"
      },
      "setCharSayContextImportant": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int soundslot",
            "name": "soundslot"
          },
          {
            "displayName": "bool flags1",
            "name": "flags1"
          },
          {
            "displayName": "bool flags2",
            "name": "flags2"
          },
          {
            "displayName": "bool flags3",
            "name": "flags3"
          }
        ],
        "description": "**setCharSayContextImportant**(*Ped ped, int soundslot, bool flags1, bool flags2, bool flags3*)  \n**Returns:** *int unk*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D5/)*",
        "type": "function"
      },
      "setCharSayScript": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int sound",
            "name": "sound"
          },
          {
            "displayName": "bool flags1",
            "name": "flags1"
          },
          {
            "displayName": "bool flags2",
            "name": "flags2"
          },
          {
            "displayName": "bool flags3",
            "name": "flags3"
          }
        ],
        "description": "**setCharSayScript**(*Ped ped, int sound, bool flags1, bool flags2, bool flags3*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D6/)*",
        "type": "function"
      },
      "setCharShootRate": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int rate",
            "name": "rate"
          }
        ],
        "description": "**setCharShootRate**(*Ped ped, int rate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07DD/)*",
        "type": "function"
      },
      "setCharSignalAfterKill": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool signal",
            "name": "signal"
          }
        ],
        "description": "**setCharSignalAfterKill**(*Ped ped, bool signal*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B5/)*",
        "type": "function"
      },
      "setCharStayInCarWhenJacked": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool stay",
            "name": "stay"
          }
        ],
        "description": "**setCharStayInCarWhenJacked**(*Ped ped, bool stay*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0526/)*",
        "type": "function"
      },
      "setCharStayInSamePlace": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enabled",
            "name": "enabled"
          }
        ],
        "description": "**setCharStayInSamePlace**(*Ped ped, bool enabled*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0350/)*",
        "type": "function"
      },
      "setCharSuffersCriticalHits": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCharSuffersCriticalHits**(*Ped ped, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0446/)*",
        "type": "function"
      },
      "setCharSwimSpeed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setCharSwimSpeed**(*Ped ped, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A28/)*",
        "type": "function"
      },
      "setCharUsesCollisionClosestObjectOfType": {
        "args": [
          {
            "displayName": "float sphereX",
            "name": "sphereX"
          },
          {
            "displayName": "float sphereY",
            "name": "sphereY"
          },
          {
            "displayName": "float sphereZ",
            "name": "sphereZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "bool solid",
            "name": "solid"
          },
          {
            "displayName": "int forActor",
            "name": "forActor"
          }
        ],
        "description": "**setCharUsesCollisionClosestObjectOfType**(*float sphereX, float sphereY, float sphereZ, float radius, Model modelId, bool solid, int forActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0985/)*",
        "type": "function"
      },
      "setCharUsesUpperbodyDamageAnimsOnly": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool uninterupted",
            "name": "uninterupted"
          }
        ],
        "description": "**setCharUsesUpperbodyDamageAnimsOnly**(*Ped ped, bool uninterupted*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0946/)*",
        "type": "function"
      },
      "setCharVelocity": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**setCharVelocity**(*Ped ped, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/083C/)*",
        "type": "function"
      },
      "setCharVisible": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool visible",
            "name": "visible"
          }
        ],
        "description": "**setCharVisible**(*Ped ped, bool visible*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0337/)*",
        "type": "function"
      },
      "setCharWantedByPolice": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool wanted",
            "name": "wanted"
          }
        ],
        "description": "**setCharWantedByPolice**(*Ped ped, bool wanted*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B6/)*",
        "type": "function"
      },
      "setCharWeaponSkill": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int skill",
            "name": "skill"
          }
        ],
        "description": "**setCharWeaponSkill**(*Ped ped, int skill*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/081A/) / [ru](http://blast.hk/wiki/opcodes:081A)*",
        "type": "function"
      },
      "setCheckpointCoords": {
        "args": [
          {
            "displayName": "Checkpoint checkpoint",
            "name": "checkpoint"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**setCheckpointCoords**(*Checkpoint checkpoint, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F3/)*",
        "type": "function"
      },
      "setCheckpointHeading": {
        "args": [
          {
            "displayName": "Checkpoint checkpoint",
            "name": "checkpoint"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setCheckpointHeading**(*Checkpoint checkpoint, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0996/)*",
        "type": "function"
      },
      "setCinemaCamera": {
        "args": [
          {
            "displayName": "bool lock",
            "name": "lock"
          }
        ],
        "description": "**setCinemaCamera**(*bool lock*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/093D/)*",
        "type": "function"
      },
      "setCleoSharedVar": {
        "args": [
          {
            "displayName": "int var",
            "name": "var"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**setCleoSharedVar**(*int var, int value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB3/)*",
        "type": "function"
      },
      "setClipboardText": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          }
        ],
        "description": "**setClipboardText**(*string text*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setClipboardText)*",
        "type": "function"
      },
      "setClosestEntryExitFlag": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int bitmask",
            "name": "bitmask"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**setClosestEntryExitFlag**(*float atX, float atY, float radius, int bitmask, bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B4/)*",
        "type": "function"
      },
      "setCollectable1Total": {
        "args": [
          {
            "displayName": "int total",
            "name": "total"
          }
        ],
        "description": "**setCollectable1Total**(*int total*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02ED/)*",
        "type": "function"
      },
      "setCoordBlipAppearance": {
        "args": [
          {
            "displayName": "Checkpoint checkpoint",
            "name": "checkpoint"
          },
          {
            "displayName": "int type",
            "name": "type"
          }
        ],
        "description": "**setCoordBlipAppearance**(*Checkpoint checkpoint, int type*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08FB/)*",
        "type": "function"
      },
      "setCreateRandomCops": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCreateRandomCops**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/099E/)*",
        "type": "function"
      },
      "setCreateRandomGangMembers": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setCreateRandomGangMembers**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08EA/)*",
        "type": "function"
      },
      "setCurrentCharWeapon": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          }
        ],
        "description": "**setCurrentCharWeapon**(*Ped ped, int weapon*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B9/)*",
        "type": "function"
      },
      "setCutsceneAnim": {
        "args": [
          {
            "displayName": "int cutscene",
            "name": "cutscene"
          },
          {
            "displayName": "GxtString anim",
            "name": "anim"
          }
        ],
        "description": "**setCutsceneAnim**(*int cutscene, GxtString anim*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E6/)*",
        "type": "function"
      },
      "setCutsceneModelTexture": {
        "args": [
          {
            "displayName": "GxtString cutsceneModel",
            "name": "cutsceneModel"
          },
          {
            "displayName": "GxtString textureName",
            "name": "textureName"
          }
        ],
        "description": "**setCutsceneModelTexture**(*GxtString cutsceneModel, GxtString textureName*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F0/)*",
        "type": "function"
      },
      "setCutsceneOffset": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          }
        ],
        "description": "**setCutsceneOffset**(*float posX, float posY, float posZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0244/)*",
        "type": "function"
      },
      "setDarknessEffect": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**setDarknessEffect**(*bool enable, int value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0924/)*",
        "type": "function"
      },
      "setDeathWeaponsPersist": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool persist",
            "name": "persist"
          }
        ],
        "description": "**setDeathWeaponsPersist**(*Ped ped, bool persist*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A27/)*",
        "type": "function"
      },
      "setDeatharrestState": {
        "args": [
          {
            "displayName": "bool value",
            "name": "value"
          }
        ],
        "description": "**setDeatharrestState**(*bool value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0111/)*",
        "type": "function"
      },
      "setDisableMilitaryZones": {
        "args": [
          {
            "displayName": "bool disable",
            "name": "disable"
          }
        ],
        "description": "**setDisableMilitaryZones**(*bool disable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A24/)*",
        "type": "function"
      },
      "setDrunkInputDelay": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int handlingResponsiveness",
            "name": "handlingResponsiveness"
          }
        ],
        "description": "**setDrunkInputDelay**(*Player player, int handlingResponsiveness*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03FD/)*",
        "type": "function"
      },
      "setEnableRcDetonate": {
        "args": [
          {
            "displayName": "bool detonation",
            "name": "detonation"
          }
        ],
        "description": "**setEnableRcDetonate**(*bool detonation*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/048A/)*",
        "type": "function"
      },
      "setEnableRcDetonateOnContact": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setEnableRcDetonateOnContact**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D6/)*",
        "type": "function"
      },
      "setEnterCarRangeMultiplier": {
        "args": [
          {
            "displayName": "float float1",
            "name": "float1"
          }
        ],
        "description": "**setEnterCarRangeMultiplier**(*float float1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0481/)*",
        "type": "function"
      },
      "setEveryoneIgnorePlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool ignored",
            "name": "ignored"
          }
        ],
        "description": "**setEveryoneIgnorePlayer**(*Player player, bool ignored*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03BF/)*",
        "type": "function"
      },
      "setExtraCarColours": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int tertiaryColor",
            "name": "tertiaryColor"
          },
          {
            "displayName": "int quaternaryColor",
            "name": "quaternaryColor"
          }
        ],
        "description": "**setExtraCarColours**(*Vehicle car, int tertiaryColor, int quaternaryColor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A11/)*",
        "type": "function"
      },
      "setExtraColours": {
        "args": [
          {
            "displayName": "int color",
            "name": "color"
          },
          {
            "displayName": "bool fade",
            "name": "fade"
          }
        ],
        "description": "**setExtraColours**(*int color, bool fade*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04F9/)*",
        "type": "function"
      },
      "setExtraHospitalRestartPoint": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setExtraHospitalRestartPoint**(*float X, float Y, float Z, float radius, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08DF/)*",
        "type": "function"
      },
      "setExtraPoliceStationRestartPoint": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setExtraPoliceStationRestartPoint**(*float X, float Y, float Z, float radius, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E0/)*",
        "type": "function"
      },
      "setFadingColour": {
        "args": [
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          }
        ],
        "description": "**setFadingColour**(*int r, int g, int b*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0169/)*",
        "type": "function"
      },
      "setFirstPersonInCarCameraMode": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setFirstPersonInCarCameraMode**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0822/)*",
        "type": "function"
      },
      "setFixedCameraPosition": {
        "args": [
          {
            "displayName": "float positionX",
            "name": "positionX"
          },
          {
            "displayName": "float positionY",
            "name": "positionY"
          },
          {
            "displayName": "float positionZ",
            "name": "positionZ"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**setFixedCameraPosition**(*float positionX, float positionY, float positionZ, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/015F/)*",
        "type": "function"
      },
      "setFloatStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "float float",
            "name": "float"
          }
        ],
        "description": "**setFloatStat**(*int stat, float float*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/062A/)*",
        "type": "function"
      },
      "setFollowNodeThresholdDistance": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float dist",
            "name": "dist"
          }
        ],
        "description": "**setFollowNodeThresholdDistance**(*Ped ped, float dist*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0648/)*",
        "type": "function"
      },
      "setForceRandomCarModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**setForceRandomCarModel**(*Model modelId*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09BF/)*",
        "type": "function"
      },
      "setFreeGxtEntry": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          }
        ],
        "description": "**setFreeGxtEntry**(*string text*)  \n**Returns:** *string key*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setFreeGxtEntry)*",
        "type": "function"
      },
      "setFreeHealthCare": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool free",
            "name": "free"
          }
        ],
        "description": "**setFreeHealthCare**(*Player player, bool free*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0414/)*",
        "type": "function"
      },
      "setFreeResprays": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setFreeResprays**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0335/)*",
        "type": "function"
      },
      "setFreebiesInVehicle": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool containsGoodies",
            "name": "containsGoodies"
          }
        ],
        "description": "**setFreebiesInVehicle**(*Vehicle car, bool containsGoodies*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F3/)*",
        "type": "function"
      },
      "setGameGlobal": {
        "args": [
          {
            "displayName": "int index",
            "name": "index"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**setGameGlobal**(*int index, int value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setGameGlobal)*",
        "type": "function"
      },
      "setGameKeyState": {
        "args": [
          {
            "displayName": "int key",
            "name": "key"
          },
          {
            "displayName": "int state",
            "name": "state"
          }
        ],
        "description": "**setGameKeyState**(*int key, int state*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setGameKeyState)*",
        "type": "function"
      },
      "setGangWarsActive": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setGangWarsActive**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0879/)*",
        "type": "function"
      },
      "setGangWarsTrainingMission": {
        "args": [
          {
            "displayName": "bool set",
            "name": "set"
          }
        ],
        "description": "**setGangWarsTrainingMission**(*bool set*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08AC/)*",
        "type": "function"
      },
      "setGangWeapons": {
        "args": [
          {
            "displayName": "int gang",
            "name": "gang"
          },
          {
            "displayName": "int weapons1",
            "name": "weapons1"
          },
          {
            "displayName": "int weapons2",
            "name": "weapons2"
          },
          {
            "displayName": "int weapons3",
            "name": "weapons3"
          }
        ],
        "description": "**setGangWeapons**(*int gang, int weapons1, int weapons2, int weapons3*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0237/)*",
        "type": "function"
      },
      "setGarageResprayFree": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          },
          {
            "displayName": "bool free",
            "name": "free"
          }
        ],
        "description": "**setGarageResprayFree**(*GxtString garage, bool free*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/093A/)*",
        "type": "function"
      },
      "setGenerateCarsAroundCamera": {
        "args": [
          {
            "displayName": "bool int1",
            "name": "int1"
          }
        ],
        "description": "**setGenerateCarsAroundCamera**(*bool int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03EA/)*",
        "type": "function"
      },
      "setGroupDecisionMaker": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "int maker",
            "name": "maker"
          }
        ],
        "description": "**setGroupDecisionMaker**(*int group, int maker*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06AD/)*",
        "type": "function"
      },
      "setGroupDefaultTaskAllocator": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "int command",
            "name": "command"
          }
        ],
        "description": "**setGroupDefaultTaskAllocator**(*int group, int command*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07B3/)*",
        "type": "function"
      },
      "setGroupFollowStatus": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "bool status",
            "name": "status"
          }
        ],
        "description": "**setGroupFollowStatus**(*int group, bool status*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0940/)*",
        "type": "function"
      },
      "setGroupLeader": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**setGroupLeader**(*int group, Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0630/)*",
        "type": "function"
      },
      "setGroupMember": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**setGroupMember**(*int group, Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0631/)*",
        "type": "function"
      },
      "setGroupSeparationRange": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "float range",
            "name": "range"
          }
        ],
        "description": "**setGroupSeparationRange**(*int group, float range*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06F0/)*",
        "type": "function"
      },
      "setGroupSequence": {
        "args": [
          {
            "displayName": "int group",
            "name": "group"
          },
          {
            "displayName": "int Aspack",
            "name": "Aspack"
          }
        ],
        "description": "**setGroupSequence**(*int group, int Aspack*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/087D/)*",
        "type": "function"
      },
      "setGunshotSenseRangeForRiot2": {
        "args": [
          {
            "displayName": "float range",
            "name": "range"
          }
        ],
        "description": "**setGunshotSenseRangeForRiot2**(*float range*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/098A/)*",
        "type": "function"
      },
      "setGxtEntry": {
        "args": [
          {
            "displayName": "string key",
            "name": "key"
          },
          {
            "displayName": "string text",
            "name": "text"
          }
        ],
        "description": "**setGxtEntry**(*string key, string text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setGxtEntry)*",
        "type": "function"
      },
      "setHasBeenOwnedForCarGenerator": {
        "args": [
          {
            "displayName": "int generator",
            "name": "generator"
          },
          {
            "displayName": "bool owned",
            "name": "owned"
          }
        ],
        "description": "**setHasBeenOwnedForCarGenerator**(*int generator, bool owned*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A17/)*",
        "type": "function"
      },
      "setHeadingForAttachedPlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "float toAngle",
            "name": "toAngle"
          },
          {
            "displayName": "float rotationSpeed",
            "name": "rotationSpeed"
          }
        ],
        "description": "**setHeadingForAttachedPlayer**(*Player player, float toAngle, float rotationSpeed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0858/)*",
        "type": "function"
      },
      "setHeadingLimitForAttachedChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int orientation",
            "name": "orientation"
          },
          {
            "displayName": "float limit",
            "name": "limit"
          }
        ],
        "description": "**setHeadingLimitForAttachedChar**(*Ped ped, int orientation, float limit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0887/)*",
        "type": "function"
      },
      "setHeathazeEffect": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setHeathazeEffect**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08FD/)*",
        "type": "function"
      },
      "setHeliBladesFullSpeed": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          }
        ],
        "description": "**setHeliBladesFullSpeed**(*Vehicle heli*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0825/)*",
        "type": "function"
      },
      "setHeliOrientation": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setHeliOrientation**(*Vehicle heli, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D0/)*",
        "type": "function"
      },
      "setHeliReachedTargetDistance": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "int dist",
            "name": "dist"
          }
        ],
        "description": "**setHeliReachedTargetDistance**(*Vehicle heli, int dist*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0853/)*",
        "type": "function"
      },
      "setHeliStabiliser": {
        "args": [
          {
            "displayName": "Vehicle heli",
            "name": "heli"
          },
          {
            "displayName": "bool limiter",
            "name": "limiter"
          }
        ],
        "description": "**setHeliStabiliser**(*Vehicle heli, bool limiter*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04DF/)*",
        "type": "function"
      },
      "setHelpMessageBoxSize": {
        "args": [
          {
            "displayName": "int width",
            "name": "width"
          }
        ],
        "description": "**setHelpMessageBoxSize**(*int width*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0989/)*",
        "type": "function"
      },
      "setInformRespectedFriends": {
        "args": [
          {
            "displayName": "int flags",
            "name": "flags"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int pedsToScan",
            "name": "pedsToScan"
          }
        ],
        "description": "**setInformRespectedFriends**(*int flags, float radius, int pedsToScan*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/074E/)*",
        "type": "function"
      },
      "setInfraredVision": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setInfraredVision**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08B2/)*",
        "type": "function"
      },
      "setIntStat": {
        "args": [
          {
            "displayName": "int stat",
            "name": "stat"
          },
          {
            "displayName": "int int",
            "name": "int"
          }
        ],
        "description": "**setIntStat**(*int stat, int int*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0629/)*",
        "type": "function"
      },
      "setInteriorVisible": {
        "args": [
          {
            "displayName": "int interior",
            "name": "interior"
          }
        ],
        "description": "**setInteriorVisible**(*int interior*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04BB/)*",
        "type": "function"
      },
      "setInterpolationParameters": {
        "args": [
          {
            "displayName": "float delay",
            "name": "delay"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**setInterpolationParameters**(*float delay, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0460/)*",
        "type": "function"
      },
      "setJamesCarOnPathToPlayer": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          }
        ],
        "description": "**setJamesCarOnPathToPlayer**(*int int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0450/)*",
        "type": "function"
      },
      "setLaRiots": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setLaRiots**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C8/)*",
        "type": "function"
      },
      "setLoadCollisionForCarFlag": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setLoadCollisionForCarFlag**(*Vehicle car, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0587/)*",
        "type": "function"
      },
      "setLoadCollisionForCharFlag": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setLoadCollisionForCharFlag**(*Ped ped, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0588/)*",
        "type": "function"
      },
      "setMaxFireGenerations": {
        "args": [
          {
            "displayName": "int max",
            "name": "max"
          }
        ],
        "description": "**setMaxFireGenerations**(*int max*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0828/)*",
        "type": "function"
      },
      "setMaxWantedLevel": {
        "args": [
          {
            "displayName": "int level",
            "name": "level"
          }
        ],
        "description": "**setMaxWantedLevel**(*int level*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F0/)*",
        "type": "function"
      },
      "setMenuColumn": {
        "args": [
          {
            "displayName": "int menu",
            "name": "menu"
          },
          {
            "displayName": "int column",
            "name": "column"
          },
          {
            "displayName": "GxtString header",
            "name": "header"
          },
          {
            "displayName": "GxtString data1",
            "name": "data1"
          },
          {
            "displayName": "GxtString data2",
            "name": "data2"
          },
          {
            "displayName": "GxtString data3",
            "name": "data3"
          },
          {
            "displayName": "GxtString data4",
            "name": "data4"
          },
          {
            "displayName": "GxtString data5",
            "name": "data5"
          },
          {
            "displayName": "GxtString data6",
            "name": "data6"
          },
          {
            "displayName": "GxtString data7",
            "name": "data7"
          },
          {
            "displayName": "GxtString data8",
            "name": "data8"
          },
          {
            "displayName": "GxtString data9",
            "name": "data9"
          },
          {
            "displayName": "GxtString data10",
            "name": "data10"
          },
          {
            "displayName": "GxtString data11",
            "name": "data11"
          },
          {
            "displayName": "GxtString data12",
            "name": "data12"
          }
        ],
        "description": "**setMenuColumn**(*int menu, int column, GxtString header, GxtString data1, GxtString data2, GxtString data3, GxtString data4, GxtString data5, GxtString data6, GxtString data7, GxtString data8, GxtString data9, GxtString data10, GxtString data11, GxtString data12*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08DB/)*",
        "type": "function"
      },
      "setMenuColumnOrientation": {
        "args": [
          {
            "displayName": "int menu",
            "name": "menu"
          },
          {
            "displayName": "int column",
            "name": "column"
          },
          {
            "displayName": "int alignment",
            "name": "alignment"
          }
        ],
        "description": "**setMenuColumnOrientation**(*int menu, int column, int alignment*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D6/)*",
        "type": "function"
      },
      "setMenuColumnWidth": {
        "args": [
          {
            "displayName": "int panel",
            "name": "panel"
          },
          {
            "displayName": "int column",
            "name": "column"
          },
          {
            "displayName": "int width",
            "name": "width"
          }
        ],
        "description": "**setMenuColumnWidth**(*int panel, int column, int width*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09DB/)*",
        "type": "function"
      },
      "setMenuItemWith2Numbers": {
        "args": [
          {
            "displayName": "int panel",
            "name": "panel"
          },
          {
            "displayName": "int column",
            "name": "column"
          },
          {
            "displayName": "int row",
            "name": "row"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int numbers1",
            "name": "numbers1"
          },
          {
            "displayName": "int numbers2",
            "name": "numbers2"
          }
        ],
        "description": "**setMenuItemWith2Numbers**(*int panel, int column, int row, GxtString gxtString, int numbers1, int numbers2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08EF/)*",
        "type": "function"
      },
      "setMenuItemWithNumber": {
        "args": [
          {
            "displayName": "int panel",
            "name": "panel"
          },
          {
            "displayName": "int column",
            "name": "column"
          },
          {
            "displayName": "int row",
            "name": "row"
          },
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int number",
            "name": "number"
          }
        ],
        "description": "**setMenuItemWithNumber**(*int panel, int column, int row, GxtString gxtString, int number*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08EE/)*",
        "type": "function"
      },
      "setMessageFormatting": {
        "args": [
          {
            "displayName": "bool priority",
            "name": "priority"
          },
          {
            "displayName": "int leftmargin",
            "name": "leftmargin"
          },
          {
            "displayName": "int maxwidth",
            "name": "maxwidth"
          }
        ],
        "description": "**setMessageFormatting**(*bool priority, int leftmargin, int maxwidth*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0912/)*",
        "type": "function"
      },
      "setMinigameInProgress": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setMinigameInProgress**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09BD/)*",
        "type": "function"
      },
      "setMissionAudioPosition": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          },
          {
            "displayName": "float locationX",
            "name": "locationX"
          },
          {
            "displayName": "float locationY",
            "name": "locationY"
          },
          {
            "displayName": "float locationZ",
            "name": "locationZ"
          }
        ],
        "description": "**setMissionAudioPosition**(*int id, float locationX, float locationY, float locationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03D7/)*",
        "type": "function"
      },
      "setMissionRespectTotal": {
        "args": [
          {
            "displayName": "int respect",
            "name": "respect"
          }
        ],
        "description": "**setMissionRespectTotal**(*int respect*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0997/)*",
        "type": "function"
      },
      "setMissionTrainCoordinates": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**setMissionTrainCoordinates**(*Vehicle train, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C7/)*",
        "type": "function"
      },
      "setMusicDoesFade": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setMusicDoesFade**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/043C/)*",
        "type": "function"
      },
      "setNamedEntryExitFlag": {
        "args": [
          {
            "displayName": "GxtString interior",
            "name": "interior"
          },
          {
            "displayName": "int bitmask",
            "name": "bitmask"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**setNamedEntryExitFlag**(*GxtString interior, int bitmask, bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/098E/)*",
        "type": "function"
      },
      "setNearClip": {
        "args": [
          {
            "displayName": "float clip",
            "name": "clip"
          }
        ],
        "description": "**setNearClip**(*float clip*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/041D/)*",
        "type": "function"
      },
      "setNextDesiredMoveState": {
        "args": [
          {
            "displayName": "int speed",
            "name": "speed"
          }
        ],
        "description": "**setNextDesiredMoveState**(*int speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A1/)*",
        "type": "function"
      },
      "setNightVision": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setNightVision**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08B1/)*",
        "type": "function"
      },
      "setNoResprays": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setNoResprays**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A14/)*",
        "type": "function"
      },
      "setObjectAnimCurrentTime": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "float progress",
            "name": "progress"
          }
        ],
        "description": "**setObjectAnimCurrentTime**(*Object object, string animation, float progress*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/083A/)*",
        "type": "function"
      },
      "setObjectAnimSpeed": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setObjectAnimSpeed**(*Object object, string animation, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0836/)*",
        "type": "function"
      },
      "setObjectAsStealable": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool liftable",
            "name": "liftable"
          }
        ],
        "description": "**setObjectAsStealable**(*Object object, bool liftable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E9/)*",
        "type": "function"
      },
      "setObjectCollision": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool collision",
            "name": "collision"
          }
        ],
        "description": "**setObjectCollision**(*Object object, bool collision*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0382/)*",
        "type": "function"
      },
      "setObjectCollisionDamageEffect": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool destructible",
            "name": "destructible"
          }
        ],
        "description": "**setObjectCollisionDamageEffect**(*Object object, bool destructible*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07F7/)*",
        "type": "function"
      },
      "setObjectCoordinates": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**setObjectCoordinates**(*Object object, float atX, float atY, float atZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01BC/)*",
        "type": "function"
      },
      "setObjectCoordinatesAndVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**setObjectCoordinatesAndVelocity**(*Object object, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0815/)*",
        "type": "function"
      },
      "setObjectDrawLast": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool drawLast",
            "name": "drawLast"
          }
        ],
        "description": "**setObjectDrawLast**(*Object object, bool drawLast*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0418/)*",
        "type": "function"
      },
      "setObjectDynamic": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool moveable",
            "name": "moveable"
          }
        ],
        "description": "**setObjectDynamic**(*Object object, bool moveable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0392/)*",
        "type": "function"
      },
      "setObjectHeading": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setObjectHeading**(*Object object, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0177/)*",
        "type": "function"
      },
      "setObjectHealth": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "int health",
            "name": "health"
          }
        ],
        "description": "**setObjectHealth**(*Object object, int health*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/071F/)*",
        "type": "function"
      },
      "setObjectMass": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float mass",
            "name": "mass"
          }
        ],
        "description": "**setObjectMass**(*Object object, float mass*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0906/)*",
        "type": "function"
      },
      "setObjectOnlyDamagedByPlayer": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool player",
            "name": "player"
          }
        ],
        "description": "**setObjectOnlyDamagedByPlayer**(*Object object, bool player*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0875/)*",
        "type": "function"
      },
      "setObjectPathPosition": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          },
          {
            "displayName": "float float2",
            "name": "float2"
          }
        ],
        "description": "**setObjectPathPosition**(*int int1, float float2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/049F/)*",
        "type": "function"
      },
      "setObjectPathSpeed": {
        "args": [
          {
            "displayName": "int int1",
            "name": "int1"
          },
          {
            "displayName": "int int2",
            "name": "int2"
          }
        ],
        "description": "**setObjectPathSpeed**(*int int1, int int2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/049E/)*",
        "type": "function"
      },
      "setObjectProofs": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool BP",
            "name": "BP"
          },
          {
            "displayName": "bool FP",
            "name": "FP"
          },
          {
            "displayName": "bool EP",
            "name": "EP"
          },
          {
            "displayName": "bool CP",
            "name": "CP"
          },
          {
            "displayName": "bool MP",
            "name": "MP"
          }
        ],
        "description": "**setObjectProofs**(*Object object, bool BP, bool FP, bool EP, bool CP, bool MP*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09CA/)*",
        "type": "function"
      },
      "setObjectQuaternion": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float x",
            "name": "x"
          },
          {
            "displayName": "float y",
            "name": "y"
          },
          {
            "displayName": "float z",
            "name": "z"
          },
          {
            "displayName": "float w",
            "name": "w"
          }
        ],
        "description": "**setObjectQuaternion**(*Object object, float x, float y, float z, float w*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C4/)*",
        "type": "function"
      },
      "setObjectRecordsCollisions": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool set",
            "name": "set"
          }
        ],
        "description": "**setObjectRecordsCollisions**(*Object object, bool set*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04D9/)*",
        "type": "function"
      },
      "setObjectRenderScorched": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool fireproof",
            "name": "fireproof"
          }
        ],
        "description": "**setObjectRenderScorched**(*Object object, bool fireproof*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0654/)*",
        "type": "function"
      },
      "setObjectRotation": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float rotationX",
            "name": "rotationX"
          },
          {
            "displayName": "float rotationY",
            "name": "rotationY"
          },
          {
            "displayName": "float rotationZ",
            "name": "rotationZ"
          }
        ],
        "description": "**setObjectRotation**(*Object object, float rotationX, float rotationY, float rotationZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0453/)*",
        "type": "function"
      },
      "setObjectRotationVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float vecX",
            "name": "vecX"
          },
          {
            "displayName": "float vecY",
            "name": "vecY"
          },
          {
            "displayName": "float vecZ",
            "name": "vecZ"
          }
        ],
        "description": "**setObjectRotationVelocity**(*Object object, float vecX, float vecY, float vecZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05A2/)*",
        "type": "function"
      },
      "setObjectScale": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float scale",
            "name": "scale"
          }
        ],
        "description": "**setObjectScale**(*Object object, float scale*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08D2/)*",
        "type": "function"
      },
      "setObjectTurnMass": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float turnMass",
            "name": "turnMass"
          }
        ],
        "description": "**setObjectTurnMass**(*Object object, float turnMass*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0908/)*",
        "type": "function"
      },
      "setObjectVelocity": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float velocityInDirectionX",
            "name": "velocityInDirectionX"
          },
          {
            "displayName": "float velocityInDirectionY",
            "name": "velocityInDirectionY"
          },
          {
            "displayName": "float velocityInDirectionZ",
            "name": "velocityInDirectionZ"
          }
        ],
        "description": "**setObjectVelocity**(*Object object, float velocityInDirectionX, float velocityInDirectionY, float velocityInDirectionZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0381/)*",
        "type": "function"
      },
      "setObjectVisible": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool visibility",
            "name": "visibility"
          }
        ],
        "description": "**setObjectVisible**(*Object object, bool visibility*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0750/)*",
        "type": "function"
      },
      "setOnlyCreateGangMembers": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setOnlyCreateGangMembers**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0983/)*",
        "type": "function"
      },
      "setOnscreenCounterFlashWhenFirstDisplayed": {
        "args": [
          {
            "displayName": "VarId text",
            "name": "text"
          },
          {
            "displayName": "bool flashing",
            "name": "flashing"
          }
        ],
        "description": "**setOnscreenCounterFlashWhenFirstDisplayed**(*VarId text, bool flashing*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/059C/)*",
        "type": "function"
      },
      "setPedDensityMultiplier": {
        "args": [
          {
            "displayName": "float multiplier",
            "name": "multiplier"
          }
        ],
        "description": "**setPedDensityMultiplier**(*float multiplier*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03DE/)*",
        "type": "function"
      },
      "setPetrolTankWeakpoint": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool enabled",
            "name": "enabled"
          }
        ],
        "description": "**setPetrolTankWeakpoint**(*Vehicle car, bool enabled*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C4/)*",
        "type": "function"
      },
      "setPhotoCameraEffect": {
        "args": [
          {
            "displayName": "bool firstPersonView",
            "name": "firstPersonView"
          }
        ],
        "description": "**setPhotoCameraEffect**(*bool firstPersonView*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A2F/)*",
        "type": "function"
      },
      "setPlaneThrottle": {
        "args": [
          {
            "displayName": "int plane",
            "name": "plane"
          },
          {
            "displayName": "float throttle",
            "name": "throttle"
          }
        ],
        "description": "**setPlaneThrottle**(*int plane, float throttle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0742/)*",
        "type": "function"
      },
      "setPlaneUndercarriageUp": {
        "args": [
          {
            "displayName": "int plane",
            "name": "plane"
          },
          {
            "displayName": "bool set",
            "name": "set"
          }
        ],
        "description": "**setPlaneUndercarriageUp**(*int plane, bool set*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08E6/)*",
        "type": "function"
      },
      "setPlay3dAudioStreamAtCar": {
        "args": [
          {
            "displayName": "int audio",
            "name": "audio"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**setPlay3dAudioStreamAtCar**(*int audio, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC5/)*",
        "type": "function"
      },
      "setPlay3dAudioStreamAtChar": {
        "args": [
          {
            "displayName": "int audio",
            "name": "audio"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**setPlay3dAudioStreamAtChar**(*int audio, Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC4/)*",
        "type": "function"
      },
      "setPlay3dAudioStreamAtCoordinates": {
        "args": [
          {
            "displayName": "int handle",
            "name": "handle"
          },
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          }
        ],
        "description": "**setPlay3dAudioStreamAtCoordinates**(*int handle, float posX, float posY, float posZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC2/)*",
        "type": "function"
      },
      "setPlay3dAudioStreamAtObject": {
        "args": [
          {
            "displayName": "int audio",
            "name": "audio"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**setPlay3dAudioStreamAtObject**(*int audio, Object object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AC3/)*",
        "type": "function"
      },
      "setPlaybackSpeed": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setPlaybackSpeed**(*Vehicle car, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06FD/)*",
        "type": "function"
      },
      "setPlayerCanDoDriveBy": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool mode",
            "name": "mode"
          }
        ],
        "description": "**setPlayerCanDoDriveBy**(*Player player, bool mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0501/)*",
        "type": "function"
      },
      "setPlayerControl": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool canMove",
            "name": "canMove"
          }
        ],
        "description": "**setPlayerControl**(*Player player, bool canMove*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01B4/) / [ru](http://blast.hk/wiki/opcodes:01B4)*",
        "type": "function"
      },
      "setPlayerDisplayVitalStatsButton": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool display",
            "name": "display"
          }
        ],
        "description": "**setPlayerDisplayVitalStatsButton**(*Player player, bool display*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0960/)*",
        "type": "function"
      },
      "setPlayerDrunkenness": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int drunk",
            "name": "drunk"
          }
        ],
        "description": "**setPlayerDrunkenness**(*Player player, int drunk*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/052C/)*",
        "type": "function"
      },
      "setPlayerDuckButton": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool able",
            "name": "able"
          }
        ],
        "description": "**setPlayerDuckButton**(*Player player, bool able*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/082A/)*",
        "type": "function"
      },
      "setPlayerEnterCarButton": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**setPlayerEnterCarButton**(*Player player, bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07CC/)*",
        "type": "function"
      },
      "setPlayerFastReload": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool fastReload",
            "name": "fastReload"
          }
        ],
        "description": "**setPlayerFastReload**(*Player player, bool fastReload*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0331/)*",
        "type": "function"
      },
      "setPlayerFireButton": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool able",
            "name": "able"
          }
        ],
        "description": "**setPlayerFireButton**(*Player player, bool able*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0881/)*",
        "type": "function"
      },
      "setPlayerGroupRecruitment": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool enabled",
            "name": "enabled"
          }
        ],
        "description": "**setPlayerGroupRecruitment**(*Player player, bool enabled*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07B4/)*",
        "type": "function"
      },
      "setPlayerGroupToFollowAlways": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool followAlways",
            "name": "followAlways"
          }
        ],
        "description": "**setPlayerGroupToFollowAlways**(*Player player, bool followAlways*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A20/)*",
        "type": "function"
      },
      "setPlayerGroupToFollowNever": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool neverFollow",
            "name": "neverFollow"
          }
        ],
        "description": "**setPlayerGroupToFollowNever**(*Player player, bool neverFollow*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A31/)*",
        "type": "function"
      },
      "setPlayerInCarCameraMode": {
        "args": [
          {
            "displayName": "int mode",
            "name": "mode"
          }
        ],
        "description": "**setPlayerInCarCameraMode**(*int mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09AD/)*",
        "type": "function"
      },
      "setPlayerIsInStadium": {
        "args": [
          {
            "displayName": "bool set",
            "name": "set"
          }
        ],
        "description": "**setPlayerIsInStadium**(*bool set*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/057E/)*",
        "type": "function"
      },
      "setPlayerJumpButton": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setPlayerJumpButton**(*Player player, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0901/)*",
        "type": "function"
      },
      "setPlayerModel": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**setPlayerModel**(*Player player, Model modelId*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09C7/)*",
        "type": "function"
      },
      "setPlayerMood": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**setPlayerMood**(*Player player, int flag, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E3/)*",
        "type": "function"
      },
      "setPlayerNeverGetsTired": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool infiniteRun",
            "name": "infiniteRun"
          }
        ],
        "description": "**setPlayerNeverGetsTired**(*Player player, bool infiniteRun*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0330/)*",
        "type": "function"
      },
      "setPlayerPlayerTargetting": {
        "args": [
          {
            "displayName": "bool can",
            "name": "can"
          }
        ],
        "description": "**setPlayerPlayerTargetting**(*bool can*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06F3/)*",
        "type": "function"
      },
      "setPlayerWeaponsScrollable": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool scrollable",
            "name": "scrollable"
          }
        ],
        "description": "**setPlayerWeaponsScrollable**(*Player player, bool scrollable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0992/)*",
        "type": "function"
      },
      "setPlayersCanBeInSeparateCars": {
        "args": [
          {
            "displayName": "bool allow",
            "name": "allow"
          }
        ],
        "description": "**setPlayersCanBeInSeparateCars**(*bool allow*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06FA/)*",
        "type": "function"
      },
      "setPoliceIgnorePlayer": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool ignored",
            "name": "ignored"
          }
        ],
        "description": "**setPoliceIgnorePlayer**(*Player player, bool ignored*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F7/)*",
        "type": "function"
      },
      "setPoolTableCoords": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float z1",
            "name": "z1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "float z2",
            "name": "z2"
          }
        ],
        "description": "**setPoolTableCoords**(*float x1, float y1, float z1, float x2, float y2, float z2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0830/)*",
        "type": "function"
      },
      "setProgressTotal": {
        "args": [
          {
            "displayName": "int maxProgress",
            "name": "maxProgress"
          }
        ],
        "description": "**setProgressTotal**(*int maxProgress*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/030D/)*",
        "type": "function"
      },
      "setRadarZoom": {
        "args": [
          {
            "displayName": "int zoom",
            "name": "zoom"
          }
        ],
        "description": "**setRadarZoom**(*int zoom*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/075B/)*",
        "type": "function"
      },
      "setRadioChannel": {
        "args": [
          {
            "displayName": "int radioStation",
            "name": "radioStation"
          }
        ],
        "description": "**setRadioChannel**(*int radioStation*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/041E/)*",
        "type": "function"
      },
      "setRadioToPlayersFavouriteStation": {
        "description": "**setRadioToPlayersFavouriteStation**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A26/)*",
        "type": "function"
      },
      "setRailtrackResistanceMult": {
        "args": [
          {
            "displayName": "float tracksFriction",
            "name": "tracksFriction"
          }
        ],
        "description": "**setRailtrackResistanceMult**(*float tracksFriction*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A45/)*",
        "type": "function"
      },
      "setRelationship": {
        "args": [
          {
            "displayName": "int acquaintance",
            "name": "acquaintance"
          },
          {
            "displayName": "int pedtype",
            "name": "pedtype"
          },
          {
            "displayName": "int toPedtype",
            "name": "toPedtype"
          }
        ],
        "description": "**setRelationship**(*int acquaintance, int pedtype, int toPedtype*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0746/)*",
        "type": "function"
      },
      "setRespawnPointForDurationOfMission": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          }
        ],
        "description": "**setRespawnPointForDurationOfMission**(*float posX, float posY, float posZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09FF/)*",
        "type": "function"
      },
      "setRopeHeightForObject": {
        "args": [
          {
            "displayName": "int magnet",
            "name": "magnet"
          },
          {
            "displayName": "float length",
            "name": "length"
          }
        ],
        "description": "**setRopeHeightForObject**(*int magnet, float length*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0797/)*",
        "type": "function"
      },
      "setSampfuncsConsoleCommandDescription": {
        "args": [
          {
            "displayName": "zstring cmd",
            "name": "cmd"
          },
          {
            "displayName": "zstring text",
            "name": "text"
          }
        ],
        "description": "**setSampfuncsConsoleCommandDescription**(*zstring cmd, zstring text*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C80)*",
        "type": "function"
      },
      "setSampfuncsGlobalVar": {
        "args": [
          {
            "displayName": "zstring var",
            "name": "var"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**setSampfuncsGlobalVar**(*zstring var, int value*)  \n**Returns:** *bool result*  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0BFC)*",
        "type": "function"
      },
      "setScmThreadLocalVar": {
        "args": [
          {
            "displayName": "int thread",
            "name": "thread"
          },
          {
            "displayName": "int var",
            "name": "var"
          },
          {
            "displayName": "int value",
            "name": "value"
          }
        ],
        "description": "**setScmThreadLocalVar**(*int thread, int var, int value*)  \n**Wiki:** *[ru](http://blast.hk/wiki/opcodes:0C6C)*",
        "type": "function"
      },
      "setScriptCoopGame": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**setScriptCoopGame**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A3F/)*",
        "type": "function"
      },
      "setScriptLimitToGangSize": {
        "args": [
          {
            "displayName": "bool max",
            "name": "max"
          }
        ],
        "description": "**setScriptLimitToGangSize**(*bool max*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F4/)*",
        "type": "function"
      },
      "setSearchlightClipIfColliding": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          }
        ],
        "description": "**setSearchlightClipIfColliding**(*Searchlight searchlight, bool flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0941/)*",
        "type": "function"
      },
      "setSenseRange": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float accuracy",
            "name": "accuracy"
          }
        ],
        "description": "**setSenseRange**(*Ped ped, float accuracy*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/060F/)*",
        "type": "function"
      },
      "setSequenceToRepeat": {
        "args": [
          {
            "displayName": "int pack",
            "name": "pack"
          },
          {
            "displayName": "bool loop",
            "name": "loop"
          }
        ],
        "description": "**setSequenceToRepeat**(*int pack, bool loop*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0643/)*",
        "type": "function"
      },
      "setSpecificZoneToTriggerGangWar": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          }
        ],
        "description": "**setSpecificZoneToTriggerGangWar**(*GxtString zone*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/090C/)*",
        "type": "function"
      },
      "setSpritesDrawBeforeFade": {
        "args": [
          {
            "displayName": "bool antialiased",
            "name": "antialiased"
          }
        ],
        "description": "**setSpritesDrawBeforeFade**(*bool antialiased*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E3/)*",
        "type": "function"
      },
      "setStructElement": {
        "args": [
          {
            "displayName": "int struct",
            "name": "struct"
          },
          {
            "displayName": "int offset",
            "name": "offset"
          },
          {
            "displayName": "int size",
            "name": "size"
          },
          {
            "displayName": "int value",
            "name": "value"
          },
          {
            "displayName": "[bool unprotect=false]",
            "name": "unprotect"
          }
        ],
        "description": "**setStructElement**(*int struct, int offset, int size, int value, [bool unprotect=false]*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setStructElement)*",
        "type": "function"
      },
      "setStructFloatElement": {
        "args": [
          {
            "displayName": "int struct",
            "name": "struct"
          },
          {
            "displayName": "int offset",
            "name": "offset"
          },
          {
            "displayName": "float value",
            "name": "value"
          },
          {
            "displayName": "[bool unprotect=false]",
            "name": "unprotect"
          }
        ],
        "description": "**setStructFloatElement**(*int struct, int offset, float value, [bool unprotect=false]*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setStructFloatElement)*",
        "type": "function"
      },
      "setTagStatusInArea": {
        "args": [
          {
            "displayName": "float x1",
            "name": "x1"
          },
          {
            "displayName": "float y1",
            "name": "y1"
          },
          {
            "displayName": "float x2",
            "name": "x2"
          },
          {
            "displayName": "float y2",
            "name": "y2"
          },
          {
            "displayName": "bool value",
            "name": "value"
          }
        ],
        "description": "**setTagStatusInArea**(*float x1, float y1, float x2, float y2, bool value*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0703/)*",
        "type": "function"
      },
      "setTankDetonateCars": {
        "args": [
          {
            "displayName": "int tank",
            "name": "tank"
          },
          {
            "displayName": "bool detonate",
            "name": "detonate"
          }
        ],
        "description": "**setTankDetonateCars**(*int tank, bool detonate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0493/)*",
        "type": "function"
      },
      "setTargetCarForMissionGarage": {
        "args": [
          {
            "displayName": "GxtString garage",
            "name": "garage"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**setTargetCarForMissionGarage**(*GxtString garage, Vehicle car*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/021B/)*",
        "type": "function"
      },
      "setTaxiLights": {
        "args": [
          {
            "displayName": "Vehicle taxi",
            "name": "taxi"
          },
          {
            "displayName": "bool light",
            "name": "light"
          }
        ],
        "description": "**setTaxiLights**(*Vehicle taxi, bool light*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0216/)*",
        "type": "function"
      },
      "setTextBackground": {
        "args": [
          {
            "displayName": "bool background",
            "name": "background"
          }
        ],
        "description": "**setTextBackground**(*bool background*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0345/)*",
        "type": "function"
      },
      "setTextCentre": {
        "args": [
          {
            "displayName": "bool centered",
            "name": "centered"
          }
        ],
        "description": "**setTextCentre**(*bool centered*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0342/)*",
        "type": "function"
      },
      "setTextCentreSize": {
        "args": [
          {
            "displayName": "float linewidth",
            "name": "linewidth"
          }
        ],
        "description": "**setTextCentreSize**(*float linewidth*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0344/)*",
        "type": "function"
      },
      "setTextColour": {
        "args": [
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          }
        ],
        "description": "**setTextColour**(*int r, int g, int b, int a*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0340/)*",
        "type": "function"
      },
      "setTextDrawBeforeFade": {
        "args": [
          {
            "displayName": "bool int1",
            "name": "int1"
          }
        ],
        "description": "**setTextDrawBeforeFade**(*bool int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E0/)*",
        "type": "function"
      },
      "setTextDropshadow": {
        "args": [
          {
            "displayName": "int shadow",
            "name": "shadow"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          }
        ],
        "description": "**setTextDropshadow**(*int shadow, int r, int g, int b, int a*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/060D/)*",
        "type": "function"
      },
      "setTextEdge": {
        "args": [
          {
            "displayName": "int size",
            "name": "size"
          },
          {
            "displayName": "int r",
            "name": "r"
          },
          {
            "displayName": "int g",
            "name": "g"
          },
          {
            "displayName": "int b",
            "name": "b"
          },
          {
            "displayName": "int a",
            "name": "a"
          }
        ],
        "description": "**setTextEdge**(*int size, int r, int g, int b, int a*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/081C/)*",
        "type": "function"
      },
      "setTextFont": {
        "args": [
          {
            "displayName": "int font",
            "name": "font"
          }
        ],
        "description": "**setTextFont**(*int font*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0349/)*",
        "type": "function"
      },
      "setTextJustify": {
        "args": [
          {
            "displayName": "bool alignJustify",
            "name": "alignJustify"
          }
        ],
        "description": "**setTextJustify**(*bool alignJustify*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0341/)*",
        "type": "function"
      },
      "setTextProportional": {
        "args": [
          {
            "displayName": "bool proportional",
            "name": "proportional"
          }
        ],
        "description": "**setTextProportional**(*bool proportional*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0348/)*",
        "type": "function"
      },
      "setTextRightJustify": {
        "args": [
          {
            "displayName": "bool alignRight",
            "name": "alignRight"
          }
        ],
        "description": "**setTextRightJustify**(*bool alignRight*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03E4/)*",
        "type": "function"
      },
      "setTextScale": {
        "args": [
          {
            "displayName": "float sizeX",
            "name": "sizeX"
          },
          {
            "displayName": "float sizeY",
            "name": "sizeY"
          }
        ],
        "description": "**setTextScale**(*float sizeX, float sizeY*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/033F/)*",
        "type": "function"
      },
      "setTextWrapx": {
        "args": [
          {
            "displayName": "float linewidth",
            "name": "linewidth"
          }
        ],
        "description": "**setTextWrapx**(*float linewidth*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0343/)*",
        "type": "function"
      },
      "setTimeOfDay": {
        "args": [
          {
            "displayName": "int hours",
            "name": "hours"
          },
          {
            "displayName": "int minutes",
            "name": "minutes"
          }
        ],
        "description": "**setTimeOfDay**(*int hours, int minutes*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00C0/)*",
        "type": "function"
      },
      "setTimeOneDayForward": {
        "description": "**setTimeOneDayForward**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/088E/)*",
        "type": "function"
      },
      "setTimeScale": {
        "args": [
          {
            "displayName": "float gamespeed",
            "name": "gamespeed"
          }
        ],
        "description": "**setTimeScale**(*float gamespeed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/015D/)*",
        "type": "function"
      },
      "setTimerBeepCountdownTime": {
        "args": [
          {
            "displayName": "VarId timer",
            "name": "timer"
          },
          {
            "displayName": "int reach",
            "name": "reach"
          }
        ],
        "description": "**setTimerBeepCountdownTime**(*VarId timer, int reach*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0890/)*",
        "type": "function"
      },
      "setTotalNumberOfMissions": {
        "args": [
          {
            "displayName": "int totalMissions",
            "name": "totalMissions"
          }
        ],
        "description": "**setTotalNumberOfMissions**(*int totalMissions*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/042C/)*",
        "type": "function"
      },
      "setTrainCruiseSpeed": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setTrainCruiseSpeed**(*Vehicle train, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06DD/)*",
        "type": "function"
      },
      "setTrainForcedToSlowDown": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          },
          {
            "displayName": "bool forced",
            "name": "forced"
          }
        ],
        "description": "**setTrainForcedToSlowDown**(*Vehicle train, bool forced*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09CF/)*",
        "type": "function"
      },
      "setTrainSpeed": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**setTrainSpeed**(*Vehicle train, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06DC/)*",
        "type": "function"
      },
      "setTwoPlayerCameraMode": {
        "args": [
          {
            "displayName": "bool mode",
            "name": "mode"
          }
        ],
        "description": "**setTwoPlayerCameraMode**(*bool mode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E0/)*",
        "type": "function"
      },
      "setUpConversationEndNodeWithScriptedSpeech": {
        "args": [
          {
            "displayName": "GxtString dialogueGxt",
            "name": "dialogueGxt"
          },
          {
            "displayName": "int wav",
            "name": "wav"
          }
        ],
        "description": "**setUpConversationEndNodeWithScriptedSpeech**(*GxtString dialogueGxt, int wav*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A3C/)*",
        "type": "function"
      },
      "setUpConversationEndNodeWithSpeech": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int speech",
            "name": "speech"
          }
        ],
        "description": "**setUpConversationEndNodeWithSpeech**(*GxtString gxtString, int speech*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09AA/)*",
        "type": "function"
      },
      "setUpConversationNodeWithScriptedSpeech": {
        "args": [
          {
            "displayName": "GxtString questionGXT",
            "name": "questionGXT"
          },
          {
            "displayName": "GxtString answerYesGXT",
            "name": "answerYesGXT"
          },
          {
            "displayName": "GxtString answerNoGXT",
            "name": "answerNoGXT"
          },
          {
            "displayName": "int questionWAV",
            "name": "questionWAV"
          },
          {
            "displayName": "int answerYesWAV",
            "name": "answerYesWAV"
          },
          {
            "displayName": "int answerNoWAV",
            "name": "answerNoWAV"
          }
        ],
        "description": "**setUpConversationNodeWithScriptedSpeech**(*GxtString questionGXT, GxtString answerYesGXT, GxtString answerNoGXT, int questionWAV, int answerYesWAV, int answerNoWAV*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A18/)*",
        "type": "function"
      },
      "setUpConversationNodeWithSpeech": {
        "args": [
          {
            "displayName": "GxtString question",
            "name": "question"
          },
          {
            "displayName": "GxtString answerY",
            "name": "answerY"
          },
          {
            "displayName": "GxtString answerN",
            "name": "answerN"
          },
          {
            "displayName": "int questionWav",
            "name": "questionWav"
          },
          {
            "displayName": "int answerYWav",
            "name": "answerYWav"
          },
          {
            "displayName": "int answerNWav",
            "name": "answerNWav"
          }
        ],
        "description": "**setUpConversationNodeWithSpeech**(*GxtString question, GxtString answerY, GxtString answerN, int questionWav, int answerYWav, int answerNWav*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A4/)*",
        "type": "function"
      },
      "setUpSkip": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setUpSkip**(*float posX, float posY, float posZ, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0950/)*",
        "type": "function"
      },
      "setUpSkipAfterMission": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**setUpSkipAfterMission**(*float posX, float posY, float posZ, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09AF/)*",
        "type": "function"
      },
      "setUpSkipForSpecificVehicle": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**setUpSkipForSpecificVehicle**(*float posX, float posY, float posZ, float angle, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09E0/)*",
        "type": "function"
      },
      "setUpSkipForVehicleFinishedByScript": {
        "args": [
          {
            "displayName": "float posX",
            "name": "posX"
          },
          {
            "displayName": "float posY",
            "name": "posY"
          },
          {
            "displayName": "float posZ",
            "name": "posZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**setUpSkipForVehicleFinishedByScript**(*float posX, float posY, float posZ, float angle, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A35/)*",
        "type": "function"
      },
      "setUpsidedownCarNotDamaged": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool disableFlippedExplosion",
            "name": "disableFlippedExplosion"
          }
        ],
        "description": "**setUpsidedownCarNotDamaged**(*Vehicle car, bool disableFlippedExplosion*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03ED/)*",
        "type": "function"
      },
      "setUsesCollisionOfClosestObjectOfType": {
        "args": [
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "bool collisionDetection",
            "name": "collisionDetection"
          }
        ],
        "description": "**setUsesCollisionOfClosestObjectOfType**(*float X, float Y, float Z, float radius, Model modelId, bool collisionDetection*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/088D/)*",
        "type": "function"
      },
      "setVehicleAirResistanceMultiplier": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float multiplier",
            "name": "multiplier"
          }
        ],
        "description": "**setVehicleAirResistanceMultiplier**(*Vehicle car, float multiplier*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/088B/)*",
        "type": "function"
      },
      "setVehicleCameraTweak": {
        "args": [
          {
            "displayName": "Model carModel",
            "name": "carModel"
          },
          {
            "displayName": "float distance",
            "name": "distance"
          },
          {
            "displayName": "float altitudeMultiplier",
            "name": "altitudeMultiplier"
          },
          {
            "displayName": "float angleX",
            "name": "angleX"
          }
        ],
        "description": "**setVehicleCameraTweak**(*Model carModel, float distance, float altitudeMultiplier, float angleX*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09EF/)*",
        "type": "function"
      },
      "setVehicleCanBeTargetted": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool unk",
            "name": "unk"
          }
        ],
        "description": "**setVehicleCanBeTargetted**(*Vehicle car, bool unk*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/084E/)*",
        "type": "function"
      },
      "setVehicleDirtLevel": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float level",
            "name": "level"
          }
        ],
        "description": "**setVehicleDirtLevel**(*Vehicle car, float level*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0878/)*",
        "type": "function"
      },
      "setVehicleInterior": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int interior",
            "name": "interior"
          }
        ],
        "description": "**setVehicleInterior**(*Vehicle car, int interior*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0840/)*",
        "type": "function"
      },
      "setVehicleIsConsideredByPlayer": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool accessible",
            "name": "accessible"
          }
        ],
        "description": "**setVehicleIsConsideredByPlayer**(*Vehicle car, bool accessible*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B0/)*",
        "type": "function"
      },
      "setVehicleQuaternion": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float x",
            "name": "x"
          },
          {
            "displayName": "float y",
            "name": "y"
          },
          {
            "displayName": "float z",
            "name": "z"
          },
          {
            "displayName": "float w",
            "name": "w"
          }
        ],
        "description": "**setVehicleQuaternion**(*Vehicle car, float x, float y, float z, float w*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C6/)*",
        "type": "function"
      },
      "setVehicleToFadeIn": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int flag",
            "name": "flag"
          }
        ],
        "description": "**setVehicleToFadeIn**(*Vehicle car, int flag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0594/)*",
        "type": "function"
      },
      "setVirtualKeyDown": {
        "args": [
          {
            "displayName": "int vkey",
            "name": "vkey"
          },
          {
            "displayName": "bool down",
            "name": "down"
          }
        ],
        "description": "**setVirtualKeyDown**(*int vkey, bool down*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:setVirtualKeyDown)*",
        "type": "function"
      },
      "setVisibilityOfClosestObjectOfType": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model modelId",
            "name": "modelId"
          },
          {
            "displayName": "bool visibility",
            "name": "visibility"
          }
        ],
        "description": "**setVisibilityOfClosestObjectOfType**(*float atX, float atY, float atZ, float radius, Model modelId, bool visibility*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0363/)*",
        "type": "function"
      },
      "setWantedMultiplier": {
        "args": [
          {
            "displayName": "float sensitivity",
            "name": "sensitivity"
          }
        ],
        "description": "**setWantedMultiplier**(*float sensitivity*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C7/)*",
        "type": "function"
      },
      "setWeatherToAppropriateTypeNow": {
        "description": "**setWeatherToAppropriateTypeNow**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0915/)*",
        "type": "function"
      },
      "setZoneDealerStrength": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "int density",
            "name": "density"
          }
        ],
        "description": "**setZoneDealerStrength**(*GxtString zone, int density*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/076A/)*",
        "type": "function"
      },
      "setZoneForGangWarsTraining": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          }
        ],
        "description": "**setZoneForGangWarsTraining**(*GxtString zone*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08B3/)*",
        "type": "function"
      },
      "setZoneGangStrength": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "int gang",
            "name": "gang"
          },
          {
            "displayName": "int density",
            "name": "density"
          }
        ],
        "description": "**setZoneGangStrength**(*GxtString zone, int gang, int density*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/076C/)*",
        "type": "function"
      },
      "setZoneNoCops": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "bool disableCops",
            "name": "disableCops"
          }
        ],
        "description": "**setZoneNoCops**(*GxtString zone, bool disableCops*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09B7/)*",
        "type": "function"
      },
      "setZonePopulationRace": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "int popcycle",
            "name": "popcycle"
          }
        ],
        "description": "**setZonePopulationRace**(*GxtString zone, int popcycle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0874/)*",
        "type": "function"
      },
      "setZonePopulationType": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "int popcycle",
            "name": "popcycle"
          }
        ],
        "description": "**setZonePopulationType**(*GxtString zone, int popcycle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0767/)*",
        "type": "function"
      },
      "shakeCam": {
        "args": [
          {
            "displayName": "int shake",
            "name": "shake"
          }
        ],
        "description": "**shakeCam**(*int shake*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0003/)*",
        "type": "function"
      },
      "shakePad": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int intensity",
            "name": "intensity"
          }
        ],
        "description": "**shakePad**(*Player player, int time, int intensity*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/015B/)*",
        "type": "function"
      },
      "showBlipsOnAllLevels": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**showBlipsOnAllLevels**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A6/)*",
        "type": "function"
      },
      "showUpdateStats": {
        "args": [
          {
            "displayName": "bool display",
            "name": "display"
          }
        ],
        "description": "**showUpdateStats**(*bool display*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F8/)*",
        "type": "function"
      },
      "shuffleCardDecks": {
        "args": [
          {
            "displayName": "bool shuffle",
            "name": "shuffle"
          }
        ],
        "description": "**shuffleCardDecks**(*bool shuffle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/059D/)*",
        "type": "function"
      },
      "shutAllCharsUp": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**shutAllCharsUp**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09F5/)*",
        "type": "function"
      },
      "shutCharUp": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool muted",
            "name": "muted"
          }
        ],
        "description": "**shutCharUp**(*Ped ped, bool muted*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0489/)*",
        "type": "function"
      },
      "shutCharUpForScriptedSpeech": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool muted",
            "name": "muted"
          }
        ],
        "description": "**shutCharUpForScriptedSpeech**(*Ped ped, bool muted*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A09/)*",
        "type": "function"
      },
      "shutPlayerUp": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "bool shut",
            "name": "shut"
          }
        ],
        "description": "**shutPlayerUp**(*Player player, bool shut*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04E2/)*",
        "type": "function"
      },
      "skipCutsceneEnd": {
        "description": "**skipCutsceneEnd**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0701/)*",
        "type": "function"
      },
      "skipInPlaybackRecordedCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float path",
            "name": "path"
          }
        ],
        "description": "**skipInPlaybackRecordedCar**(*Vehicle car, float path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0706/)*",
        "type": "function"
      },
      "skipToEndAndStopPlaybackRecordedCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**skipToEndAndStopPlaybackRecordedCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C5/)*",
        "type": "function"
      },
      "skipToNextAllowedStation": {
        "args": [
          {
            "displayName": "Vehicle train",
            "name": "train"
          }
        ],
        "description": "**skipToNextAllowedStation**(*Vehicle train*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A07/)*",
        "type": "function"
      },
      "slideObject": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float speedX",
            "name": "speedX"
          },
          {
            "displayName": "float speedY",
            "name": "speedY"
          },
          {
            "displayName": "float speedZ",
            "name": "speedZ"
          },
          {
            "displayName": "bool collisionCheck",
            "name": "collisionCheck"
          }
        ],
        "description": "**slideObject**(*Object object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, bool collisionCheck*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/034E/)*",
        "type": "function"
      },
      "sortOutObjectCollisionWithCar": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**sortOutObjectCollisionWithCar**(*Object object, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/050E/)*",
        "type": "function"
      },
      "spawnVehicleByCheating": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**spawnVehicleByCheating**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ADD/) / [ru](http://blast.hk/wiki/lua:spawnVehicleByCheating)*",
        "type": "function"
      },
      "startCarFire": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**startCarFire**(*Vehicle car*)  \n**Returns:** *int fire*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0325/)*",
        "type": "function"
      },
      "startCharFacialTalk": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**startCharFacialTalk**(*Ped ped, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0967/)*",
        "type": "function"
      },
      "startCharFire": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**startCharFire**(*Ped ped*)  \n**Returns:** *int fire*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0326/)*",
        "type": "function"
      },
      "startCredits": {
        "description": "**startCredits**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0434/)*",
        "type": "function"
      },
      "startCutscene": {
        "description": "**startCutscene**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02E7/)*",
        "type": "function"
      },
      "startKillFrenzy": {
        "args": [
          {
            "displayName": "GxtString gxtString",
            "name": "gxtString"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int timeLimit",
            "name": "timeLimit"
          },
          {
            "displayName": "int targets",
            "name": "targets"
          },
          {
            "displayName": "Model targetModels1",
            "name": "targetModels1"
          },
          {
            "displayName": "Model targetModels2",
            "name": "targetModels2"
          },
          {
            "displayName": "Model targetModels3",
            "name": "targetModels3"
          },
          {
            "displayName": "Model targetModels4",
            "name": "targetModels4"
          },
          {
            "displayName": "bool completedText",
            "name": "completedText"
          }
        ],
        "description": "**startKillFrenzy**(*GxtString gxtString, int weapon, int timeLimit, int targets, Model targetModels1, Model targetModels2, Model targetModels3, Model targetModels4, bool completedText*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01F9/)*",
        "type": "function"
      },
      "startNewCustomScript": {
        "args": [
          {
            "displayName": "zstring filepath",
            "name": "filepath"
          },
          {
            "displayName": "table args",
            "name": "args"
          }
        ],
        "description": "**startNewCustomScript**(*zstring filepath, table args*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A92/) / [ru](http://blast.hk/wiki/opcodes:0A92)*",
        "type": "function"
      },
      "startNewStreamedScript": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          },
          {
            "displayName": "table args",
            "name": "args"
          }
        ],
        "description": "**startNewStreamedScript**(*int externalScript, table args*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0913/)*",
        "type": "function"
      },
      "startPlaybackRecordedCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**startPlaybackRecordedCar**(*Vehicle car, int path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05EB/)*",
        "type": "function"
      },
      "startPlaybackRecordedCarLooped": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**startPlaybackRecordedCarLooped**(*Vehicle car, int path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/085E/)*",
        "type": "function"
      },
      "startPlaybackRecordedCarUsingAi": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int path",
            "name": "path"
          }
        ],
        "description": "**startPlaybackRecordedCarUsingAi**(*Vehicle car, int path*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0705/)*",
        "type": "function"
      },
      "startScriptFire": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int propagation",
            "name": "propagation"
          },
          {
            "displayName": "int size",
            "name": "size"
          }
        ],
        "description": "**startScriptFire**(*float atX, float atY, float atZ, int propagation, int size*)  \n**Returns:** *int fire*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02CF/)*",
        "type": "function"
      },
      "startSettingUpConversation": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**startSettingUpConversation**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0717/)*",
        "type": "function"
      },
      "stopBeatTrack": {
        "description": "**stopBeatTrack**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0955/)*",
        "type": "function"
      },
      "stopCharFacialTalk": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**stopCharFacialTalk**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0968/)*",
        "type": "function"
      },
      "stopCredits": {
        "description": "**stopCredits**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0435/)*",
        "type": "function"
      },
      "stopFxSystem": {
        "args": [
          {
            "displayName": "Particle particle",
            "name": "particle"
          }
        ],
        "description": "**stopFxSystem**(*Particle particle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/064E/)*",
        "type": "function"
      },
      "stopPlaybackRecordedCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**stopPlaybackRecordedCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05EC/)*",
        "type": "function"
      },
      "storeCarCharIsAttachedToNoSave": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**storeCarCharIsAttachedToNoSave**(*Vehicle car*)  \n**Returns:** *Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A33/)*",
        "type": "function"
      },
      "storeCarCharIsIn": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**storeCarCharIsIn**(*Ped ped*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/00D9/)*",
        "type": "function"
      },
      "storeCarCharIsInNoSave": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**storeCarCharIsInNoSave**(*Ped ped*)  \n**Returns:** *Vehicle car*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03C0/) / [ru](http://blast.hk/wiki/opcodes:03C0)*",
        "type": "function"
      },
      "storeCarModState": {
        "description": "**storeCarModState**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/096B/)*",
        "type": "function"
      },
      "storeClock": {
        "description": "**storeClock**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0253/)*",
        "type": "function"
      },
      "storeClosestEntities": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**storeClosestEntities**(*Ped ped*)  \n**Returns:** *Vehicle car, Ped ped*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0AB5/) / [ru](http://blast.hk/wiki/lua:storeClosestEntities)*",
        "type": "function"
      },
      "storeClothesState": {
        "description": "**storeClothesState**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0793/)*",
        "type": "function"
      },
      "storeWantedLevel": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          }
        ],
        "description": "**storeWantedLevel**(*Player player*)  \n**Returns:** *bool result, int level*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01C0/)*",
        "type": "function"
      },
      "streamScript": {
        "args": [
          {
            "displayName": "int script",
            "name": "script"
          }
        ],
        "description": "**streamScript**(*int script*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A9/)*",
        "type": "function"
      },
      "suppressCarModel": {
        "args": [
          {
            "displayName": "Model modelId",
            "name": "modelId"
          }
        ],
        "description": "**suppressCarModel**(*Model modelId*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0732/)*",
        "type": "function"
      },
      "swapNearestBuildingModel": {
        "args": [
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model from",
            "name": "from"
          },
          {
            "displayName": "Model to",
            "name": "to"
          }
        ],
        "description": "**swapNearestBuildingModel**(*float atX, float atY, float atZ, float radius, Model from, Model to*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03B6/)*",
        "type": "function"
      },
      "switchAmbientPlanes": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**switchAmbientPlanes**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0923/)*",
        "type": "function"
      },
      "switchArrestPenalties": {
        "args": [
          {
            "displayName": "bool lose",
            "name": "lose"
          }
        ],
        "description": "**switchArrestPenalties**(*bool lose*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08DE/)*",
        "type": "function"
      },
      "switchAudioZone": {
        "args": [
          {
            "displayName": "GxtString zone",
            "name": "zone"
          },
          {
            "displayName": "bool enableSound",
            "name": "enableSound"
          }
        ],
        "description": "**switchAudioZone**(*GxtString zone, bool enableSound*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0917/)*",
        "type": "function"
      },
      "switchCarEngine": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool state",
            "name": "state"
          }
        ],
        "description": "**switchCarEngine**(*Vehicle car, bool state*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ABF/) / [ru](http://blast.hk/wiki/lua:switchCarEngine)*",
        "type": "function"
      },
      "switchCarGenerator": {
        "args": [
          {
            "displayName": "int carGenerator",
            "name": "carGenerator"
          },
          {
            "displayName": "int carsToGenerate",
            "name": "carsToGenerate"
          }
        ],
        "description": "**switchCarGenerator**(*int carGenerator, int carsToGenerate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/014C/)*",
        "type": "function"
      },
      "switchCarSiren": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool siren",
            "name": "siren"
          }
        ],
        "description": "**switchCarSiren**(*Vehicle car, bool siren*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0397/)*",
        "type": "function"
      },
      "switchCopsOnBikes": {
        "args": [
          {
            "displayName": "bool generate",
            "name": "generate"
          }
        ],
        "description": "**switchCopsOnBikes**(*bool generate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/072C/)*",
        "type": "function"
      },
      "switchDeathPenalties": {
        "args": [
          {
            "displayName": "bool lose",
            "name": "lose"
          }
        ],
        "description": "**switchDeathPenalties**(*bool lose*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08DD/)*",
        "type": "function"
      },
      "switchEmergencyServices": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**switchEmergencyServices**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06D0/)*",
        "type": "function"
      },
      "switchEntryExit": {
        "args": [
          {
            "displayName": "GxtString interior",
            "name": "interior"
          },
          {
            "displayName": "bool access",
            "name": "access"
          }
        ],
        "description": "**switchEntryExit**(*GxtString interior, bool access*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07FB/)*",
        "type": "function"
      },
      "switchObjectBrains": {
        "args": [
          {
            "displayName": "int externalScript",
            "name": "externalScript"
          },
          {
            "displayName": "bool canBeStreamedIn",
            "name": "canBeStreamedIn"
          }
        ],
        "description": "**switchObjectBrains**(*int externalScript, bool canBeStreamedIn*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A46/)*",
        "type": "function"
      },
      "switchOnGroundSearchlight": {
        "args": [
          {
            "displayName": "Searchlight searchlight",
            "name": "searchlight"
          },
          {
            "displayName": "bool lightsThroughObstacles",
            "name": "lightsThroughObstacles"
          }
        ],
        "description": "**switchOnGroundSearchlight**(*Searchlight searchlight, bool lightsThroughObstacles*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A02/)*",
        "type": "function"
      },
      "switchPedRoadsBackToOriginal": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**switchPedRoadsBackToOriginal**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/091E/)*",
        "type": "function"
      },
      "switchPedRoadsOff": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**switchPedRoadsOff**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/022B/)*",
        "type": "function"
      },
      "switchPedRoadsOn": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**switchPedRoadsOn**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/022A/)*",
        "type": "function"
      },
      "switchPoliceHelis": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**switchPoliceHelis**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/096A/)*",
        "type": "function"
      },
      "switchRandomTrains": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**switchRandomTrains**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06D7/)*",
        "type": "function"
      },
      "switchRoadsBackToOriginal": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**switchRoadsBackToOriginal**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/091D/)*",
        "type": "function"
      },
      "switchRoadsOff": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**switchRoadsOff**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01E8/)*",
        "type": "function"
      },
      "switchRoadsOn": {
        "args": [
          {
            "displayName": "float cornerAX",
            "name": "cornerAX"
          },
          {
            "displayName": "float cornerAY",
            "name": "cornerAY"
          },
          {
            "displayName": "float cornerAZ",
            "name": "cornerAZ"
          },
          {
            "displayName": "float cornerBX",
            "name": "cornerBX"
          },
          {
            "displayName": "float cornerBY",
            "name": "cornerBY"
          },
          {
            "displayName": "float cornerBZ",
            "name": "cornerBZ"
          }
        ],
        "description": "**switchRoadsOn**(*float cornerAX, float cornerAY, float cornerAZ, float cornerBX, float cornerBY, float cornerBZ*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/01E7/)*",
        "type": "function"
      },
      "switchRubbish": {
        "args": [
          {
            "displayName": "bool int1",
            "name": "int1"
          }
        ],
        "description": "**switchRubbish**(*bool int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03AD/)*",
        "type": "function"
      },
      "switchSecurityCamera": {
        "args": [
          {
            "displayName": "bool int1",
            "name": "int1"
          }
        ],
        "description": "**switchSecurityCamera**(*bool int1*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04C7/)*",
        "type": "function"
      },
      "switchStreaming": {
        "args": [
          {
            "displayName": "bool streaming",
            "name": "streaming"
          }
        ],
        "description": "**switchStreaming**(*bool streaming*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03AF/)*",
        "type": "function"
      },
      "switchWidescreen": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**switchWidescreen**(*bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/02A3/)*",
        "type": "function"
      },
      "switchWorldProcessing": {
        "args": [
          {
            "displayName": "bool cutsceneOnly",
            "name": "cutsceneOnly"
          }
        ],
        "description": "**switchWorldProcessing**(*bool cutsceneOnly*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/03B7/)*",
        "type": "function"
      },
      "syncWater": {
        "description": "**syncWater**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0971/)*",
        "type": "function"
      },
      "takePhoto": {
        "args": [
          {
            "displayName": "bool unk",
            "name": "unk"
          }
        ],
        "description": "**takePhoto**(*bool unk*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A1E/)*",
        "type": "function"
      },
      "takeRemoteControlOfCar": {
        "args": [
          {
            "displayName": "Player player",
            "name": "player"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**takeRemoteControlOfCar**(*Player player, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0715/)*",
        "type": "function"
      },
      "taskAchieveHeading": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          }
        ],
        "description": "**taskAchieveHeading**(*Ped ped, float angle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D4/)*",
        "type": "function"
      },
      "taskAimGunAtChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int aimAt",
            "name": "aimAt"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskAimGunAtChar**(*Ped ped, int aimAt, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0635/)*",
        "type": "function"
      },
      "taskAimGunAtCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskAimGunAtCoord**(*Ped ped, float atX, float atY, float atZ, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0667/)*",
        "type": "function"
      },
      "taskCarDriveToCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          },
          {
            "displayName": "int int7",
            "name": "int7"
          },
          {
            "displayName": "int model",
            "name": "model"
          },
          {
            "displayName": "int int9",
            "name": "int9"
          }
        ],
        "description": "**taskCarDriveToCoord**(*Ped ped, Vehicle car, float toX, float toY, float toZ, float speed, int int7, int model, int int9*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D1/)*",
        "type": "function"
      },
      "taskCarDriveWander": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle hijackCar",
            "name": "hijackCar"
          },
          {
            "displayName": "float searchRadius",
            "name": "searchRadius"
          },
          {
            "displayName": "int trafficBehavior",
            "name": "trafficBehavior"
          }
        ],
        "description": "**taskCarDriveWander**(*Ped ped, Vehicle hijackCar, float searchRadius, int trafficBehavior*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D2/)*",
        "type": "function"
      },
      "taskCarMission": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int targetCar",
            "name": "targetCar"
          },
          {
            "displayName": "int order",
            "name": "order"
          },
          {
            "displayName": "float maxSpeed",
            "name": "maxSpeed"
          },
          {
            "displayName": "int trafficFlag",
            "name": "trafficFlag"
          }
        ],
        "description": "**taskCarMission**(*Ped ped, Vehicle car, int targetCar, int order, float maxSpeed, int trafficFlag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E1/)*",
        "type": "function"
      },
      "taskCarTempAction": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int performAction",
            "name": "performAction"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          }
        ],
        "description": "**taskCarTempAction**(*Ped ped, Vehicle car, int performAction, int timelimit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C7/)*",
        "type": "function"
      },
      "taskCharArrestChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int bustActor",
            "name": "bustActor"
          }
        ],
        "description": "**taskCharArrestChar**(*Ped ped, int bustActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E4/)*",
        "type": "function"
      },
      "taskCharSlideToCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "float withinRadius",
            "name": "withinRadius"
          }
        ],
        "description": "**taskCharSlideToCoord**(*Ped ped, float toX, float toY, float toZ, float angle, float withinRadius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07CD/)*",
        "type": "function"
      },
      "taskCharSlideToCoordAndPlayAnim": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "float angle",
            "name": "angle"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "int ifp1",
            "name": "ifp1"
          },
          {
            "displayName": "float ifp2",
            "name": "ifp2"
          },
          {
            "displayName": "bool LA",
            "name": "LA"
          },
          {
            "displayName": "bool LX",
            "name": "LX"
          },
          {
            "displayName": "bool LY",
            "name": "LY"
          },
          {
            "displayName": "bool LF",
            "name": "LF"
          },
          {
            "displayName": "int LT",
            "name": "LT"
          }
        ],
        "description": "**taskCharSlideToCoordAndPlayAnim**(*Ped ped, float toX, float toY, float toZ, float angle, float radius, string animation, int ifp1, float ifp2, bool LA, bool LX, bool LY, bool LF, int LT*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0804/)*",
        "type": "function"
      },
      "taskChatWithChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int withActor",
            "name": "withActor"
          },
          {
            "displayName": "bool flag",
            "name": "flag"
          },
          {
            "displayName": "int unknownFlag",
            "name": "unknownFlag"
          }
        ],
        "description": "**taskChatWithChar**(*Ped ped, int withActor, bool flag, int unknownFlag*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0677/)*",
        "type": "function"
      },
      "taskClimb": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool climb",
            "name": "climb"
          }
        ],
        "description": "**taskClimb**(*Ped ped, bool climb*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/078F/)*",
        "type": "function"
      },
      "taskComplexPickupObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          }
        ],
        "description": "**taskComplexPickupObject**(*Ped ped, Object object*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07C9/)*",
        "type": "function"
      },
      "taskCower": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskCower**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C3/)*",
        "type": "function"
      },
      "taskDead": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskDead**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0762/)*",
        "type": "function"
      },
      "taskDestroyCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**taskDestroyCar**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0672/)*",
        "type": "function"
      },
      "taskDie": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskDie**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05BE/)*",
        "type": "function"
      },
      "taskDieNamedAnim": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string ifp1",
            "name": "ifp1"
          },
          {
            "displayName": "float ifp2",
            "name": "ifp2"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskDieNamedAnim**(*Ped ped, string animation, string ifp1, float ifp2, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0829/)*",
        "type": "function"
      },
      "taskDiveAndGetUp": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toOffsetX",
            "name": "toOffsetX"
          },
          {
            "displayName": "float toOffsetY",
            "name": "toOffsetY"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskDiveAndGetUp**(*Ped ped, float toOffsetX, float toOffsetY, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0673/)*",
        "type": "function"
      },
      "taskDiveFromAttachmentAndGetUp": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskDiveFromAttachmentAndGetUp**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06A5/)*",
        "type": "function"
      },
      "taskDriveBy": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int drivebyActor",
            "name": "drivebyActor"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float pX",
            "name": "pX"
          },
          {
            "displayName": "float pY",
            "name": "pY"
          },
          {
            "displayName": "float pZ",
            "name": "pZ"
          },
          {
            "displayName": "float radiusX",
            "name": "radiusX"
          },
          {
            "displayName": "int radiusY",
            "name": "radiusY"
          },
          {
            "displayName": "bool radiusZ",
            "name": "radiusZ"
          },
          {
            "displayName": "int firingRate",
            "name": "firingRate"
          }
        ],
        "description": "**taskDriveBy**(*Ped ped, int drivebyActor, Vehicle car, float pX, float pY, float pZ, float radiusX, int radiusY, bool radiusZ, int firingRate*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0713/)*",
        "type": "function"
      },
      "taskDrivePointRoute": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          }
        ],
        "description": "**taskDrivePointRoute**(*Ped ped, Vehicle car, float speed*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06BB/)*",
        "type": "function"
      },
      "taskDrivePointRouteAdvanced": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float speed",
            "name": "speed"
          },
          {
            "displayName": "int flag1",
            "name": "flag1"
          },
          {
            "displayName": "int flag2",
            "name": "flag2"
          },
          {
            "displayName": "int flag3",
            "name": "flag3"
          }
        ],
        "description": "**taskDrivePointRouteAdvanced**(*Ped ped, Vehicle car, float speed, int flag1, int flag2, int flag3*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E7/)*",
        "type": "function"
      },
      "taskDuck": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskDuck**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C5/)*",
        "type": "function"
      },
      "taskEnterCarAsDriver": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskEnterCarAsDriver**(*Ped ped, Vehicle car, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05CB/)*",
        "type": "function"
      },
      "taskEnterCarAsPassenger": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int passengerSeat",
            "name": "passengerSeat"
          }
        ],
        "description": "**taskEnterCarAsPassenger**(*Ped ped, Vehicle car, int time, int passengerSeat*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05CA/)*",
        "type": "function"
      },
      "taskEveryoneLeaveCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**taskEveryoneLeaveCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/068B/)*",
        "type": "function"
      },
      "taskFallAndGetUp": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool int2",
            "name": "int2"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskFallAndGetUp**(*Ped ped, bool int2, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05BB/)*",
        "type": "function"
      },
      "taskFleeChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped fromActor",
            "name": "fromActor"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          }
        ],
        "description": "**taskFleeChar**(*Ped ped, Ped fromActor, float radius, int timelimit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05DB/)*",
        "type": "function"
      },
      "taskFleeCharAnyMeans": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int fleeFrom",
            "name": "fleeFrom"
          },
          {
            "displayName": "float runDistance",
            "name": "runDistance"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "bool changeCourse",
            "name": "changeCourse"
          },
          {
            "displayName": "int unkTime1",
            "name": "unkTime1"
          },
          {
            "displayName": "int unkTime2",
            "name": "unkTime2"
          },
          {
            "displayName": "float awayRadius",
            "name": "awayRadius"
          }
        ],
        "description": "**taskFleeCharAnyMeans**(*Ped ped, int fleeFrom, float runDistance, int time, bool changeCourse, int unkTime1, int unkTime2, float awayRadius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0751/)*",
        "type": "function"
      },
      "taskFleePoint": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float fromX",
            "name": "fromX"
          },
          {
            "displayName": "float fromY",
            "name": "fromY"
          },
          {
            "displayName": "float fromZ",
            "name": "fromZ"
          },
          {
            "displayName": "float awayRadius",
            "name": "awayRadius"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          }
        ],
        "description": "**taskFleePoint**(*Ped ped, float fromX, float fromY, float fromZ, float awayRadius, int timelimit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05DA/)*",
        "type": "function"
      },
      "taskFollowFootsteps": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int followActor",
            "name": "followActor"
          }
        ],
        "description": "**taskFollowFootsteps**(*Ped ped, int followActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0850/)*",
        "type": "function"
      },
      "taskFollowPathNodesToCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float pathX",
            "name": "pathX"
          },
          {
            "displayName": "float pathY",
            "name": "pathY"
          },
          {
            "displayName": "float pathZ",
            "name": "pathZ"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskFollowPathNodesToCoord**(*Ped ped, float pathX, float pathY, float pathZ, int mode, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05F5/)*",
        "type": "function"
      },
      "taskFollowPathNodesToCoordWithRadius": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "float stopRadius",
            "name": "stopRadius"
          }
        ],
        "description": "**taskFollowPathNodesToCoordWithRadius**(*Ped ped, float toX, float toY, float toZ, int mode, int time, float stopRadius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A2E/)*",
        "type": "function"
      },
      "taskFollowPatrolRoute": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int walkMode",
            "name": "walkMode"
          },
          {
            "displayName": "int routeMode",
            "name": "routeMode"
          }
        ],
        "description": "**taskFollowPatrolRoute**(*Ped ped, int walkMode, int routeMode*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0817/)*",
        "type": "function"
      },
      "taskFollowPointRoute": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int flags1",
            "name": "flags1"
          },
          {
            "displayName": "int flags2",
            "name": "flags2"
          }
        ],
        "description": "**taskFollowPointRoute**(*Ped ped, int flags1, int flags2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D8/)*",
        "type": "function"
      },
      "taskGoStraightToCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskGoStraightToCoord**(*Ped ped, float toX, float toY, float toZ, int mode, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D3/)*",
        "type": "function"
      },
      "taskGoToCoordAnyMeans": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "Vehicle useCar",
            "name": "useCar"
          }
        ],
        "description": "**taskGoToCoordAnyMeans**(*Ped ped, float toX, float toY, float toZ, int mode, Vehicle useCar*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0603/)*",
        "type": "function"
      },
      "taskGoToCoordWhileAiming": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "float turnRadius",
            "name": "turnRadius"
          },
          {
            "displayName": "float stopRadius",
            "name": "stopRadius"
          },
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          }
        ],
        "description": "**taskGoToCoordWhileAiming**(*Ped ped, float toX, float toY, float toZ, int mode, float turnRadius, float stopRadius, Ped ped, float offsetX, float offsetY, float offsetZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06C2/)*",
        "type": "function"
      },
      "taskGoToCoordWhileShooting": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "int mode",
            "name": "mode"
          },
          {
            "displayName": "float turnRadius",
            "name": "turnRadius"
          },
          {
            "displayName": "float stopRadius",
            "name": "stopRadius"
          },
          {
            "displayName": "int lookAtActor",
            "name": "lookAtActor"
          }
        ],
        "description": "**taskGoToCoordWhileShooting**(*Ped ped, float toX, float toY, float toZ, int mode, float turnRadius, float stopRadius, int lookAtActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0637/)*",
        "type": "function"
      },
      "taskGoToObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int toObject",
            "name": "toObject"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          },
          {
            "displayName": "float stopWithinRadius",
            "name": "stopWithinRadius"
          }
        ],
        "description": "**taskGoToObject**(*Ped ped, int toObject, int timelimit, float stopWithinRadius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E2/)*",
        "type": "function"
      },
      "taskGotoCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          },
          {
            "displayName": "float stopAtDistance",
            "name": "stopAtDistance"
          }
        ],
        "description": "**taskGotoCar**(*Ped ped, Vehicle car, int timeMS, float stopAtDistance*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0772/)*",
        "type": "function"
      },
      "taskGotoChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped toActor",
            "name": "toActor"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          },
          {
            "displayName": "float stopWithinRadius",
            "name": "stopWithinRadius"
          }
        ],
        "description": "**taskGotoChar**(*Ped ped, Ped toActor, int timelimit, float stopWithinRadius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05D9/)*",
        "type": "function"
      },
      "taskGotoCharAiming": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int followActor",
            "name": "followActor"
          },
          {
            "displayName": "float minradius",
            "name": "minradius"
          },
          {
            "displayName": "float maxradius",
            "name": "maxradius"
          }
        ],
        "description": "**taskGotoCharAiming**(*Ped ped, int followActor, float minradius, float maxradius*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A3/)*",
        "type": "function"
      },
      "taskGotoCharOffset": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int toActor",
            "name": "toActor"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          },
          {
            "displayName": "float approachDistance",
            "name": "approachDistance"
          },
          {
            "displayName": "float approachAngle",
            "name": "approachAngle"
          }
        ],
        "description": "**taskGotoCharOffset**(*Ped ped, int toActor, int timelimit, float approachDistance, float approachAngle*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06A8/)*",
        "type": "function"
      },
      "taskGreetPartner": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped ped2",
            "name": "ped2"
          },
          {
            "displayName": "float unk1",
            "name": "unk1"
          },
          {
            "displayName": "int unk2",
            "name": "unk2"
          }
        ],
        "description": "**taskGreetPartner**(*Ped ped, Ped ped2, float unk1, int unk2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0823/)*",
        "type": "function"
      },
      "taskHandGesture": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped ped2",
            "name": "ped2"
          }
        ],
        "description": "**taskHandGesture**(*Ped ped, Ped ped2*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A1D/)*",
        "type": "function"
      },
      "taskHandsUp": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskHandsUp**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C4/)*",
        "type": "function"
      },
      "taskJetpack": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskJetpack**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A7/)*",
        "type": "function"
      },
      "taskJump": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool jump",
            "name": "jump"
          }
        ],
        "description": "**taskJump**(*Ped ped, bool jump*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05BC/)*",
        "type": "function"
      },
      "taskKillCharOnFoot": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped killActor",
            "name": "killActor"
          }
        ],
        "description": "**taskKillCharOnFoot**(*Ped ped, Ped killActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05E2/)*",
        "type": "function"
      },
      "taskKillCharOnFootTimed": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int attackActor",
            "name": "attackActor"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskKillCharOnFootTimed**(*Ped ped, int attackActor, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07A5/)*",
        "type": "function"
      },
      "taskKillCharOnFootWhileDucking": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int weapon",
            "name": "weapon"
          },
          {
            "displayName": "int flags",
            "name": "flags"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "int chance",
            "name": "chance"
          }
        ],
        "description": "**taskKillCharOnFootWhileDucking**(*Ped ped, int weapon, int flags, int time, int chance*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0634/)*",
        "type": "function"
      },
      "taskKindaStayInSamePlace": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool stay",
            "name": "stay"
          }
        ],
        "description": "**taskKindaStayInSamePlace**(*Ped ped, bool stay*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/085B/)*",
        "type": "function"
      },
      "taskLeaveAnyCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskLeaveAnyCar**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0633/)*",
        "type": "function"
      },
      "taskLeaveCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**taskLeaveCar**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05CD/)*",
        "type": "function"
      },
      "taskLeaveCarAndFlee": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float X",
            "name": "X"
          },
          {
            "displayName": "float Y",
            "name": "Y"
          },
          {
            "displayName": "float Z",
            "name": "Z"
          }
        ],
        "description": "**taskLeaveCarAndFlee**(*Ped ped, Vehicle car, float X, float Y, float Z*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05CF/)*",
        "type": "function"
      },
      "taskLeaveCarImmediately": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**taskLeaveCarImmediately**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0622/)*",
        "type": "function"
      },
      "taskLookAbout": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskLookAbout**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C9/)*",
        "type": "function"
      },
      "taskLookAtChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int lookAt",
            "name": "lookAt"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskLookAtChar**(*Ped ped, int lookAt, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05BF/)*",
        "type": "function"
      },
      "taskLookAtCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskLookAtCoord**(*Ped ped, float toX, float toY, float toZ, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06A9/)*",
        "type": "function"
      },
      "taskLookAtObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int lookAt",
            "name": "lookAt"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskLookAtObject**(*Ped ped, int lookAt, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0655/)*",
        "type": "function"
      },
      "taskLookAtVehicle": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int lookAt",
            "name": "lookAt"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskLookAtVehicle**(*Ped ped, int lookAt, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C0/)*",
        "type": "function"
      },
      "taskPause": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskPause**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05B9/)*",
        "type": "function"
      },
      "taskPickUpObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int boneId1",
            "name": "boneId1"
          },
          {
            "displayName": "int boneId2",
            "name": "boneId2"
          },
          {
            "displayName": "string performAnimation",
            "name": "performAnimation"
          },
          {
            "displayName": "int IFPFile",
            "name": "IFPFile"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskPickUpObject**(*Ped ped, Object object, float offsetX, float offsetY, float offsetZ, int boneId1, int boneId2, string performAnimation, int IFPFile, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/070A/)*",
        "type": "function"
      },
      "taskPickUpSecondObject": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "int bone",
            "name": "bone"
          },
          {
            "displayName": "int int7",
            "name": "int7"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string file",
            "name": "file"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskPickUpSecondObject**(*Ped ped, Object object, float offsetX, float offsetY, float offsetZ, int bone, int int7, string animation, string file, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09A0/)*",
        "type": "function"
      },
      "taskPlayAnim": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string IFP",
            "name": "IFP"
          },
          {
            "displayName": "float framedelta",
            "name": "framedelta"
          },
          {
            "displayName": "bool loop",
            "name": "loop"
          },
          {
            "displayName": "bool lockX",
            "name": "lockX"
          },
          {
            "displayName": "bool lockY",
            "name": "lockY"
          },
          {
            "displayName": "bool lockF",
            "name": "lockF"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskPlayAnim**(*Ped ped, string animation, string IFP, float framedelta, bool loop, bool lockX, bool lockY, bool lockF, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0605/)*",
        "type": "function"
      },
      "taskPlayAnimNonInterruptable": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string IFP",
            "name": "IFP"
          },
          {
            "displayName": "float framedelta",
            "name": "framedelta"
          },
          {
            "displayName": "bool loopA",
            "name": "loopA"
          },
          {
            "displayName": "bool lockX",
            "name": "lockX"
          },
          {
            "displayName": "bool lockY",
            "name": "lockY"
          },
          {
            "displayName": "bool lockF",
            "name": "lockF"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskPlayAnimNonInterruptable**(*Ped ped, string animation, string IFP, float framedelta, bool loopA, bool lockX, bool lockY, bool lockF, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0812/)*",
        "type": "function"
      },
      "taskPlayAnimSecondary": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string IFP",
            "name": "IFP"
          },
          {
            "displayName": "float framedelta",
            "name": "framedelta"
          },
          {
            "displayName": "bool loopA",
            "name": "loopA"
          },
          {
            "displayName": "bool lockX",
            "name": "lockX"
          },
          {
            "displayName": "bool lockY",
            "name": "lockY"
          },
          {
            "displayName": "bool lockF",
            "name": "lockF"
          },
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**taskPlayAnimSecondary**(*Ped ped, string animation, string IFP, float framedelta, bool loopA, bool lockX, bool lockY, bool lockF, int time*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0A1A/)*",
        "type": "function"
      },
      "taskPlayAnimWithFlags": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "string animation",
            "name": "animation"
          },
          {
            "displayName": "string ifp",
            "name": "ifp"
          },
          {
            "displayName": "float framedelta",
            "name": "framedelta"
          },
          {
            "displayName": "bool loopA",
            "name": "loopA"
          },
          {
            "displayName": "bool lockX",
            "name": "lockX"
          },
          {
            "displayName": "bool lockY",
            "name": "lockY"
          },
          {
            "displayName": "bool lockF",
            "name": "lockF"
          },
          {
            "displayName": "int time",
            "name": "time"
          },
          {
            "displayName": "bool force",
            "name": "force"
          },
          {
            "displayName": "bool lockZ",
            "name": "lockZ"
          }
        ],
        "description": "**taskPlayAnimWithFlags**(*Ped ped, string animation, string ifp, float framedelta, bool loopA, bool lockX, bool lockY, bool lockF, int time, bool force, bool lockZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/088A/)*",
        "type": "function"
      },
      "taskSay": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int audio",
            "name": "audio"
          }
        ],
        "description": "**taskSay**(*Ped ped, int audio*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C1/)*",
        "type": "function"
      },
      "taskScratchHead": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskScratchHead**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C8/)*",
        "type": "function"
      },
      "taskSetCharDecisionMaker": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int maker",
            "name": "maker"
          }
        ],
        "description": "**taskSetCharDecisionMaker**(*Ped ped, int maker*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07BC/)*",
        "type": "function"
      },
      "taskSetIgnoreWeaponRangeFlag": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool ignore",
            "name": "ignore"
          }
        ],
        "description": "**taskSetIgnoreWeaponRangeFlag**(*Ped ped, bool ignore*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/099F/)*",
        "type": "function"
      },
      "taskShakeFist": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskShakeFist**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C2/)*",
        "type": "function"
      },
      "taskShootAtChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int atActor",
            "name": "atActor"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          }
        ],
        "description": "**taskShootAtChar**(*Ped ped, int atActor, int timelimit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/074D/)*",
        "type": "function"
      },
      "taskShootAtCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskShootAtCoord**(*Ped ped, float atX, float atY, float atZ, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0668/)*",
        "type": "function"
      },
      "taskShuffleToNextCarSeat": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**taskShuffleToNextCarSeat**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0676/)*",
        "type": "function"
      },
      "taskSitDown": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskSitDown**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06B0/)*",
        "type": "function"
      },
      "taskSmartFleeChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Ped fromActor",
            "name": "fromActor"
          },
          {
            "displayName": "float originRadius",
            "name": "originRadius"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          }
        ],
        "description": "**taskSmartFleeChar**(*Ped ped, Ped fromActor, float originRadius, int timelimit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05DD/)*",
        "type": "function"
      },
      "taskSmartFleePoint": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float fromX",
            "name": "fromX"
          },
          {
            "displayName": "float fromY",
            "name": "fromY"
          },
          {
            "displayName": "float fromZ",
            "name": "fromZ"
          },
          {
            "displayName": "float stopAtRadius",
            "name": "stopAtRadius"
          },
          {
            "displayName": "int timelimit",
            "name": "timelimit"
          }
        ],
        "description": "**taskSmartFleePoint**(*Ped ped, float fromX, float fromY, float fromZ, float stopAtRadius, int timelimit*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05DC/)*",
        "type": "function"
      },
      "taskStandStill": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskStandStill**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05BA/)*",
        "type": "function"
      },
      "taskStayInSamePlace": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool stay",
            "name": "stay"
          }
        ],
        "description": "**taskStayInSamePlace**(*Ped ped, bool stay*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0638/)*",
        "type": "function"
      },
      "taskSwimToCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float toX",
            "name": "toX"
          },
          {
            "displayName": "float toY",
            "name": "toY"
          },
          {
            "displayName": "float toZ",
            "name": "toZ"
          }
        ],
        "description": "**taskSwimToCoord**(*Ped ped, float toX, float toY, float toZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/07E1/)*",
        "type": "function"
      },
      "taskTired": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int timeMS",
            "name": "timeMS"
          }
        ],
        "description": "**taskTired**(*Ped ped, int timeMS*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05BD/)*",
        "type": "function"
      },
      "taskToggleDuck": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool crouch",
            "name": "crouch"
          }
        ],
        "description": "**taskToggleDuck**(*Ped ped, bool crouch*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/04EB/)*",
        "type": "function"
      },
      "taskTogglePedThreatScanner": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool unknownFlag1",
            "name": "unknownFlag1"
          },
          {
            "displayName": "bool unknownFlag2",
            "name": "unknownFlag2"
          },
          {
            "displayName": "bool unknownFlag3",
            "name": "unknownFlag3"
          }
        ],
        "description": "**taskTogglePedThreatScanner**(*Ped ped, bool unknownFlag1, bool unknownFlag2, bool unknownFlag3*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0688/)*",
        "type": "function"
      },
      "taskTurnCharToFaceChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int rotateTo",
            "name": "rotateTo"
          }
        ],
        "description": "**taskTurnCharToFaceChar**(*Ped ped, int rotateTo*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0639/)*",
        "type": "function"
      },
      "taskTurnCharToFaceCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float atX",
            "name": "atX"
          },
          {
            "displayName": "float atY",
            "name": "atY"
          },
          {
            "displayName": "float atZ",
            "name": "atZ"
          }
        ],
        "description": "**taskTurnCharToFaceCoord**(*Ped ped, float atX, float atY, float atZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06BA/)*",
        "type": "function"
      },
      "taskUseAtm": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskUseAtm**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05C7/)*",
        "type": "function"
      },
      "taskUseAttractor": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int attractor",
            "name": "attractor"
          }
        ],
        "description": "**taskUseAttractor**(*Ped ped, int attractor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/074C/)*",
        "type": "function"
      },
      "taskUseClosestMapAttractor": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float radius",
            "name": "radius"
          },
          {
            "displayName": "Model nearModel",
            "name": "nearModel"
          },
          {
            "displayName": "float offsetX",
            "name": "offsetX"
          },
          {
            "displayName": "float offsetY",
            "name": "offsetY"
          },
          {
            "displayName": "float offsetZ",
            "name": "offsetZ"
          },
          {
            "displayName": "string scriptNamed",
            "name": "scriptNamed"
          }
        ],
        "description": "**taskUseClosestMapAttractor**(*Ped ped, float radius, Model nearModel, float offsetX, float offsetY, float offsetZ, string scriptNamed*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A0/)*",
        "type": "function"
      },
      "taskUseMobilePhone": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool hold",
            "name": "hold"
          }
        ],
        "description": "**taskUseMobilePhone**(*Ped ped, bool hold*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0729/)*",
        "type": "function"
      },
      "taskWalkAlongsideChar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "int alongisdeActor",
            "name": "alongisdeActor"
          }
        ],
        "description": "**taskWalkAlongsideChar**(*Ped ped, int alongisdeActor*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0859/)*",
        "type": "function"
      },
      "taskWanderStandard": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          }
        ],
        "description": "**taskWanderStandard**(*Ped ped*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05DE/)*",
        "type": "function"
      },
      "taskWarpCharIntoCarAsDriver": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**taskWarpCharIntoCarAsDriver**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/072A/) / [ru](http://blast.hk/wiki/opcodes:072A)*",
        "type": "function"
      },
      "taskWarpCharIntoCarAsPassenger": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int passengerseat",
            "name": "passengerseat"
          }
        ],
        "description": "**taskWarpCharIntoCarAsPassenger**(*Ped ped, Vehicle car, int passengerseat*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/072B/) / [ru](http://blast.hk/wiki/opcodes:072B)*",
        "type": "function"
      },
      "taskWeaponRoll": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "bool roll",
            "name": "roll"
          }
        ],
        "description": "**taskWeaponRoll**(*Ped ped, bool roll*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/06E3/)*",
        "type": "function"
      },
      "testCheat": {
        "args": [
          {
            "displayName": "string text",
            "name": "text"
          }
        ],
        "description": "**testCheat**(*string text*)  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0ADC/) / [ru](http://blast.hk/wiki/lua:testCheat)*",
        "type": "function"
      },
      "thisScript": {
        "description": "**thisScript**()  \n**Returns:** *LuaScript s*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:thisScript)*",
        "returnTypes": [
          {
            "name": "LuaScript",
            "type": "ref"
          }
        ],
        "type": "function"
      },
      "turnCarToFaceCoord": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "float coordX",
            "name": "coordX"
          },
          {
            "displayName": "float coordY",
            "name": "coordY"
          }
        ],
        "description": "**turnCarToFaceCoord**(*Vehicle car, float coordX, float coordY*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/039F/)*",
        "type": "function"
      },
      "unloadSpecialCharacter": {
        "args": [
          {
            "displayName": "int id",
            "name": "id"
          }
        ],
        "description": "**unloadSpecialCharacter**(*int id*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0296/)*",
        "type": "function"
      },
      "unmarkAllRoadNodesAsDontWander": {
        "description": "**unmarkAllRoadNodesAsDontWander**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0995/)*",
        "type": "function"
      },
      "unpausePlaybackRecordedCar": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**unpausePlaybackRecordedCar**(*Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/05EE/)*",
        "type": "function"
      },
      "updatePickupMoneyPerDay": {
        "args": [
          {
            "displayName": "Pickup pickup",
            "name": "pickup"
          },
          {
            "displayName": "int cash",
            "name": "cash"
          }
        ],
        "description": "**updatePickupMoneyPerDay**(*Pickup pickup, int cash*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/094A/)*",
        "type": "function"
      },
      "useDetonator": {
        "description": "**useDetonator**()  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/09D9/)*",
        "type": "function"
      },
      "useRenderCommands": {
        "args": [
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**useRenderCommands**(*bool enable*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:useRenderCommands)*",
        "type": "function"
      },
      "vehicleCanBeTargettedByHsMissile": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool targetable",
            "name": "targetable"
          }
        ],
        "description": "**vehicleCanBeTargettedByHsMissile**(*Vehicle car, bool targetable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08F2/)*",
        "type": "function"
      },
      "vehicleDoesProvideCover": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool providesCover",
            "name": "providesCover"
          }
        ],
        "description": "**vehicleDoesProvideCover**(*Vehicle car, bool providesCover*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0957/)*",
        "type": "function"
      },
      "wait": {
        "args": [
          {
            "displayName": "int time",
            "name": "time"
          }
        ],
        "description": "**wait**(*int time*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:wait)*",
        "type": "function"
      },
      "warpCharFromCarToCoord": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "float placeAtX",
            "name": "placeAtX"
          },
          {
            "displayName": "float placeAtY",
            "name": "placeAtY"
          },
          {
            "displayName": "float placeAtZ",
            "name": "placeAtZ"
          }
        ],
        "description": "**warpCharFromCarToCoord**(*Ped ped, float placeAtX, float placeAtY, float placeAtZ*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0362/)*",
        "type": "function"
      },
      "warpCharIntoCar": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          }
        ],
        "description": "**warpCharIntoCar**(*Ped ped, Vehicle car*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/036A/)*",
        "type": "function"
      },
      "warpCharIntoCarAsPassenger": {
        "args": [
          {
            "displayName": "Ped ped",
            "name": "ped"
          },
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "int passengerSeat",
            "name": "passengerSeat"
          }
        ],
        "description": "**warpCharIntoCarAsPassenger**(*Ped ped, Vehicle car, int passengerSeat*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0430/)*",
        "type": "function"
      },
      "wasCutsceneSkipped": {
        "description": "**wasCutsceneSkipped**()  \n**Returns:** *bool result*  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/056A/)*",
        "type": "function"
      },
      "wasKeyPressed": {
        "args": [
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**wasKeyPressed**(*int key*)  \n**Returns:** *bool state*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:wasKeyPressed)*",
        "type": "function"
      },
      "wasKeyReleased": {
        "args": [
          {
            "displayName": "int key",
            "name": "key"
          }
        ],
        "description": "**wasKeyReleased**(*int key*)  \n**Returns:** *bool state*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:wasKeyReleased)*",
        "type": "function"
      },
      "winchCanPickObjectUp": {
        "args": [
          {
            "displayName": "Object object",
            "name": "object"
          },
          {
            "displayName": "bool enable",
            "name": "enable"
          }
        ],
        "description": "**winchCanPickObjectUp**(*Object object, bool enable*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/0916/)*",
        "type": "function"
      },
      "winchCanPickVehicleUp": {
        "args": [
          {
            "displayName": "Vehicle car",
            "name": "car"
          },
          {
            "displayName": "bool attractive",
            "name": "attractive"
          }
        ],
        "description": "**winchCanPickVehicleUp**(*Vehicle car, bool attractive*)  \n**Wiki:** *[en](https://gtagmodding.com/opcode-database/opcode/08A5/)*",
        "type": "function"
      },
      "writeMemory": {
        "args": [
          {
            "displayName": "int address",
            "name": "address"
          },
          {
            "displayName": "int size",
            "name": "size"
          },
          {
            "displayName": "int value",
            "name": "value"
          },
          {
            "displayName": "bool virtualProtect",
            "name": "virtualProtect"
          }
        ],
        "description": "**writeMemory**(*int address, int size, int value, bool virtualProtect*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:writeMemory)*",
        "type": "function"
      }
    },
    "type": "table"
  },
  "luaVersion": "luajit-2.0",
  "namedTypes": {
    "Bitstream": {
      "type": "number"
    },
    "Checkpoint": {
      "type": "number"
    },
    "DxutDialog": {
      "type": "number"
    },
    "Filesearch": {
      "type": "unknown"
    },
    "GxtString": {
      "type": "string"
    },
    "LuaScript": {
      "fields": {
        "authors": {
          "type": "table"
        },
        "dead": {
          "name": "bool",
          "type": "ref"
        },
        "dependencies": {
          "type": "table"
        },
        "description": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "exports": {
          "name": "any",
          "type": "ref"
        },
        "filename": {
          "type": "string"
        },
        "frozen": {
          "name": "bool",
          "type": "ref"
        },
        "id": {
          "name": "int",
          "type": "ref"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pause": {
          "args": [
            {
              "displayName": "LuaScript self",
              "name": "self"
            }
          ],
          "description": "**LuaScript:pause**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:pause)*",
          "type": "function"
        },
        "properties": {
          "type": "table"
        },
        "reload": {
          "args": [
            {
              "displayName": "LuaScript self",
              "name": "self"
            }
          ],
          "description": "**LuaScript:reload**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:reload)*",
          "type": "function"
        },
        "resume": {
          "args": [
            {
              "displayName": "LuaScript self",
              "name": "self"
            }
          ],
          "description": "**LuaScript:resume**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:resume)*",
          "type": "function"
        },
        "unload": {
          "args": [
            {
              "displayName": "LuaScript self",
              "name": "self"
            }
          ],
          "description": "**LuaScript:unload**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:script:unload)*",
          "type": "function"
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "version_num": {
          "name": "int",
          "type": "ref"
        }
      },
      "type": "table"
    },
    "LuaThread": {
      "fields": {
        "dead": {
          "name": "bool",
          "type": "ref"
        },
        "run": {
          "args": [
            {
              "displayName": "LuaThread self",
              "name": "self"
            },
            {
              "name": "..."
            }
          ],
          "description": "**LuaThread:run**(*...*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:lua_thread#run)*",
          "type": "function"
        },
        "status": {
          "args": [
            {
              "displayName": "LuaThread self",
              "name": "self"
            }
          ],
          "description": "**LuaThread:status**()  \n**Returns:** *string status*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:lua_thread#status)*",
          "type": "function"
        },
        "terminate": {
          "args": [
            {
              "displayName": "LuaThread self",
              "name": "self"
            }
          ],
          "description": "**LuaThread:terminate**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:lua_thread#terminate)*",
          "type": "function"
        },
        "work_in_pause": {
          "name": "bool",
          "type": "ref"
        }
      },
      "type": "table"
    },
    "Marker": {
      "type": "number"
    },
    "Model": {
      "type": "number"
    },
    "Object": {
      "type": "number"
    },
    "Particle": {
      "type": "number"
    },
    "Ped": {
      "type": "number"
    },
    "Pickup": {
      "type": "number"
    },
    "Player": {
      "type": "number"
    },
    "Searchlight": {
      "type": "number"
    },
    "VarId": {
      "type": "number"
    },
    "Vehicle": {
      "type": "number"
    },
    "any": {
      "type": "unknown"
    },
    "bool": {
      "type": "boolean"
    },
    "double": {
      "type": "number"
    },
    "float": {
      "type": "number"
    },
    "int": {
      "type": "number"
    },
    "table": {
      "type": "unknown"
    },
    "uint": {
      "type": "number"
    },
    "zstring": {
      "type": "string"
    }
  },
  "packagePath": "./?.lua;./lib/?.lua",
  "snippets": {
    "main": {
      "descriptionMarkdown": "**main**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:main)*",
      "displayText": "main()",
      "snippet": "function main()\n\t${0}\nend",
      "type": "snippet"
    },
    "onExitScript": {
      "descriptionMarkdown": "**onExitScript**(*bool quitGame*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onExitScript)*",
      "displayText": "onExitScript(bool quitGame)",
      "snippet": "function onExitScript(${1:quitGame})\n\t${0}\nend",
      "type": "snippet"
    },
    "onLoadGame": {
      "descriptionMarkdown": "**onLoadGame**(*table saveData*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onLoadGame)*",
      "displayText": "onLoadGame(table saveData)",
      "snippet": "function onLoadGame(${1:saveData})\n\t${0}\nend",
      "type": "snippet"
    },
    "onQuitGame": {
      "descriptionMarkdown": "**onQuitGame**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onQuitGame)*",
      "displayText": "onQuitGame()",
      "snippet": "function onQuitGame()\n\t${0}\nend",
      "type": "snippet"
    },
    "onReceivePacket": {
      "descriptionMarkdown": "**onReceivePacket**(*int id, Bitstream bitStream*)  \n**Returns:** *bool process, int id, Bitstream bitStream*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onReceivePacket)*",
      "displayText": "onReceivePacket(int id, Bitstream bitStream)",
      "snippet": "function onReceivePacket(${1:id}, ${2:bitStream})\n\t${0}-- return ${1:process}, ${2:id}, ${3:bitStream}\nend",
      "type": "snippet"
    },
    "onReceiveRpc": {
      "descriptionMarkdown": "**onReceiveRpc**(*int id, Bitstream bitStream*)  \n**Returns:** *bool process, int id, Bitstream bitStream*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onReceiveRpc)*",
      "displayText": "onReceiveRpc(int id, Bitstream bitStream)",
      "snippet": "function onReceiveRpc(${1:id}, ${2:bitStream})\n\t${0}-- return ${1:process}, ${2:id}, ${3:bitStream}\nend",
      "type": "snippet"
    },
    "onSaveGame": {
      "descriptionMarkdown": "**onSaveGame**(*table saveData*)  \n**Returns:** *table newSaveData*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onSaveGame)*",
      "displayText": "onSaveGame(table saveData)",
      "snippet": "function onSaveGame(${1:saveData})\n\t${0}-- return ${1:newSaveData}\nend",
      "type": "snippet"
    },
    "onScriptLoad": {
      "descriptionMarkdown": "**onScriptLoad**(*LuaScript script*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onScriptLoad)*",
      "displayText": "onScriptLoad(LuaScript script)",
      "snippet": "function onScriptLoad(${1:script})\n\t${0}\nend",
      "type": "snippet"
    },
    "onScriptMessage": {
      "descriptionMarkdown": "**onScriptMessage**(*string msg, LuaScript script*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onScriptMessage)*",
      "displayText": "onScriptMessage(string msg, LuaScript script)",
      "snippet": "function onScriptMessage(${1:msg}, ${2:script})\n\t${0}\nend",
      "type": "snippet"
    },
    "onScriptTerminate": {
      "descriptionMarkdown": "**onScriptTerminate**(*LuaScript script, bool quitGame*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onScriptTerminate)*",
      "displayText": "onScriptTerminate(LuaScript script, bool quitGame)",
      "snippet": "function onScriptTerminate(${1:script}, ${2:quitGame})\n\t${0}\nend",
      "type": "snippet"
    },
    "onSendPacket": {
      "descriptionMarkdown": "**onSendPacket**(*int id, Bitstream bitStream, int priority, int reliability, int orderingChannel*)  \n**Returns:** *bool process, int id, Bitstream bitStream, int priority, int reliability, int orderingChannel*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onSendPacket)*",
      "displayText": "onSendPacket(int id, Bitstream bitStream, int priority, int reliability, int orderingChannel)",
      "snippet": "function onSendPacket(${1:id}, ${2:bitStream}, ${3:priority}, ${4:reliability}, ${5:orderingChannel})\n\t${0}-- return ${1:process}, ${2:id}, ${3:bitStream}, ${4:priority}, ${5:reliability}, ${6:orderingChannel}\nend",
      "type": "snippet"
    },
    "onSendRpc": {
      "descriptionMarkdown": "**onSendRpc**(*int id, Bitstream bitStream, int priority, int reliability, int orderingChannel, bool shiftTs*)  \n**Returns:** *bool process, int id, Bitstream bitStream, int priority, int reliability, int orderingChannel, bool shiftTs*  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onSendRpc)*",
      "displayText": "onSendRpc(int id, Bitstream bitStream, int priority, int reliability, int orderingChannel, bool shiftTs)",
      "snippet": "function onSendRpc(${1:id}, ${2:bitStream}, ${3:priority}, ${4:reliability}, ${5:orderingChannel}, ${6:shiftTs})\n\t${0}-- return ${1:process}, ${2:id}, ${3:bitStream}, ${4:priority}, ${5:reliability}, ${6:orderingChannel}, ${7:shiftTs}\nend",
      "type": "snippet"
    },
    "onStartNewGame": {
      "descriptionMarkdown": "**onStartNewGame**(*int missionPackNumber*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onStartNewGame)*",
      "displayText": "onStartNewGame(int missionPackNumber)",
      "snippet": "function onStartNewGame(${1:missionPackNumber})\n\t${0}\nend",
      "type": "snippet"
    },
    "onSystemInitialized": {
      "descriptionMarkdown": "**onSystemInitialized**()  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onSystemInitialized)*",
      "displayText": "onSystemInitialized()",
      "snippet": "function onSystemInitialized()\n\t${0}\nend",
      "type": "snippet"
    },
    "onSystemMessage": {
      "descriptionMarkdown": "**onSystemMessage**(*string msg, int type, LuaScript script*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onSystemMessage)*",
      "displayText": "onSystemMessage(string msg, int type, LuaScript script)",
      "snippet": "function onSystemMessage(${1:msg}, ${2:type}, ${3:script})\n\t${0}\nend",
      "type": "snippet"
    },
    "onWindowMessage": {
      "descriptionMarkdown": "**onWindowMessage**(*uint msg, uint wparam, int lparam*)  \n**Wiki:** *[ru](http://blast.hk/wiki/lua:onWindowMessage)*",
      "displayText": "onWindowMessage(uint msg, uint wparam, int lparam)",
      "snippet": "function onWindowMessage(${1:msg}, ${2:wparam}, ${3:lparam})\n\t${0}\nend",
      "type": "snippet"
    }
  }
}